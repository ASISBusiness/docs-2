{"evm-docs":{"getWalletNFTs":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFTs by wallet","description":"Get NFTs owned by a given address.\n* The response will include status [SYNCED/SYNCING] based on the contracts being indexed.\n* Use the token_address param to get results for a specific contract only\n* Note that results will include all indexed NFTs\n* Any request that includes the token_address param will start the indexing process for that NFT collection the very first time it is requested.","method":"GET","path":"/:address/nft","pathParams":[{"name":"address","description":"The address of the wallet","required":true,"example":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"format","description":"The format of the token ID","required":false,"example":"decimal","type":"string"},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"exclude_spam","description":"Should spam NFTs be excluded from the result?","required":false,"type":"boolean"},{"name":"token_addresses","description":"The addresses to get balances for (optional)","required":false,"type":"array","field":{"type":"string"}},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"},{"name":"normalizeMetadata","description":"Should normalized metadata be returned?","required":false,"type":"boolean"},{"name":"media_items","description":"Should preview media data be returned?","required":false,"type":"boolean"}],"responses":[{"status":"200","description":"Returns a collection of NFT owners","body":{"type":"object","fields":[{"name":"status","type":"string","description":"The syncing status of the address [SYNCING/SYNCED]","example":"SYNCING"},{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"},{"name":"token_id","type":"string","description":"The token ID of the NFT","example":"15"},{"name":"contract_type","type":"string","description":"The type of NFT contract standard","example":"ERC721"},{"name":"owner_of","type":"string","description":"The wallet address of the owner of the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"block_number","type":"string","description":"The block number when the amount or owner changed","example":"88256"},{"name":"block_number_minted","type":"string","description":"The block number when the NFT was minted","example":"88256"},{"name":"token_uri","type":"string","description":"The URI to the metadata of the token"},{"name":"metadata","type":"string","description":"The metadata of the token"},{"name":"normalized_metadata","description":"A normalized metadata version of the NFT's metadata.","properties":{"name":{"type":"string","description":"The name or title of the NFT","example":"Moralis Mug"},"description":{"type":"string","description":"A detailed description of the NFT","example":"Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."},"image":{"type":"string","description":"The URL of the NFT's image","example":"https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"},"external_link":{"type":"string","description":"A link to additional information","example":"https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"},"animation_url":{"type":"string","description":"An animated version of the NFT's image","example":"https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/normalizedMetadataAttribute"}}}},{"name":"media","description":"A set of links to 'thumbnail / preview' media files","properties":{"mimetype":{"type":"string","description":"The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"},"category":{"enum":["image","audio","video"]},"status":{"enum":["success","processing","unsupported_media","invalid_url","host_unavailable","temporarily_unavailable"],"description":"<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"},"original_media_url":{"type":"string","description":"The url of the original media file."},"updatedAt":{"type":"string","description":"The timestamp of the last update to this NFT media record."},"parent_hash":{"type":"string","description":"Hash value of the original media file."},"media_collection":{"description":"Preview item associated with the original","$ref":"#/components/schemas/mediaCollection"}}},{"name":"amount","type":"string","description":"The number of this item the user owns (used by ERC1155)","example":"1"},{"name":"name","type":"string","description":"The name of the NFT contract","example":"CryptoKitties"},{"name":"symbol","type":"string","description":"The symbol of the NFT contract","example":"RARI"},{"name":"token_hash","type":"string","description":"The token hash","example":"502cee781b0fb40ea02508b21d319ced"},{"name":"last_token_uri_sync","type":"string","description":"When the token_uri was last updated","example":"2021-02-24T00:47:26.647Z"},{"name":"last_metadata_sync","type":"string","description":"When the metadata was last updated","example":"2021-02-24T00:47:26.647Z"},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]}]}}]},"getMultipleNFTs":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get Multiple NFTs","description":"Returns an array of NFTs specified in the request.\n* Note that results will include all indexed NFTs\n* Any request that includes the token_address param will start the indexing process for that NFT collection the very first time it is requested.\n* Only 25 NFTs can be fetched in one API call.","method":"POST","path":"/nft/getMultipleNFTs","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]}],"bodyParam":{"required":true,"description":"Body","type":"object","fields":[{"name":"tokens","type":"object","description":"The tokens to be fetched (max 25 tokens)","example":[{"token_address":"0xa4991609c508b6d4fb7156426db0bd49fe298bd8","token_id":"12"},{"token_address":"0x3c64dc415ebb4690d1df2b6216148c8de6dd29f7","token_id":"1"},{"token_address":"0x3c64dc415ebb4690d1df2b6216148c8de6dd29f7","token_id":"200"}],"fields":[{"name":"token_address","type":"string","description":"The contract address","example":"0x06012c8cf97bead5deae237070f9587f8e7a266d"},{"name":"token_id","type":"string","description":"The id of the token","example":100}]},{"name":"normalizeMetadata","type":"boolean","description":"Should normalized metadata be returned?","example":false},{"name":"media_items","type":"boolean","description":"Should preview media data be returned?","example":false}]},"responses":[{"status":"200","description":"Returns a collection of NFT owners"}]},"getWalletNFTTransfers":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFT transfers by wallet","description":"Get transfers of NFTs given the wallet and other parameters.","method":"GET","path":"/:address/nft/transfers","pathParams":[{"name":"address","description":"The wallet address of the sender or recipient of the transfers","required":true,"example":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"contract_addresses","description":"List of contract addresses of transfers","required":false,"type":"array","field":{"type":"string"}},{"name":"format","description":"The format of the token ID","required":false,"example":"decimal","type":"string"},{"name":"from_block","description":"The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"number"},{"name":"to_block","description":"To get the reserves at this block number","required":false,"type":"string"},{"name":"from_date","description":"The date from where to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"string"},{"name":"to_date","description":"Get transfers up until this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","required":false,"type":"string"},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"order","description":"The order of the result, in ascending (ASC) or descending (DESC)","required":false,"example":"DESC","type":"string","enum":["ASC","DESC"]},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"}],"responses":[{"status":"200","description":"Returns a collection of NFT transfers","body":{"type":"object","fields":[{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"token_id","type":"string","description":"The token ID of the NFT","example":"15"},{"name":"from_address","type":"string","description":"The address that sent the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"from_address_label","type":"string","description":"The label of the from address","example":"Binance 1"},{"name":"to_address","type":"string","description":"The address that received the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"to_address_label","type":"string","description":"The label of the to address","example":"Binance 2"},{"name":"value","type":"string","description":"The value that was sent in the transaction (ETH/BNB/etc..)","example":"1000000000000000"},{"name":"amount","type":"string","description":"The number of tokens transferred","example":"1"},{"name":"contract_type","type":"string","description":"The type of NFT contract standard","example":"ERC721"},{"name":"block_number","type":"string","description":"The block number of the transaction","example":"88256"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-06-04T16:00:15"},{"name":"block_hash","type":"string","description":"The block hash of the transaction"},{"name":"transaction_hash","type":"string","description":"The transaction hash","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"transaction_type","type":"string","description":"The transaction type"},{"name":"transaction_index","type":"number","description":"The transaction index"},{"name":"log_index","type":"number","description":"The log index"},{"name":"operator","type":"string","description":"The operator present only for ERC1155 transfers","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]},{"name":"block_exists","type":"boolean","description":"Indicator if the block exists","example":true},{"name":"index_complete","type":"boolean","description":"Indicator if the block is fully indexed","example":true}]}}]},"getWalletNFTCollections":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFT collections by wallet","description":"Get NFT collections owned by a given wallet address.","method":"GET","path":"/:address/nft/collections","pathParams":[{"name":"address","description":"The wallet address of the owner of NFTs in the collections","required":true,"example":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"exclude_spam","description":"Should spam NFTs be excluded from the result?","required":false,"type":"boolean"},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"}],"responses":[{"status":"200","description":"Returns the NFT collections owned by a wallet","body":{"type":"object","fields":[{"name":"status","type":"string","description":"The syncing status of the address [SYNCING/SYNCED]","example":"SYNCING"},{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"},{"name":"contract_type","type":"string","description":"The type of NFT contract standard","example":"ERC721"},{"name":"name","type":"string","description":"The name of the NFT contract","example":"CryptoKitties"},{"name":"symbol","type":"string","description":"The symbol of the NFT contract","example":"RARI"},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]}]}}]},"getContractNFTs":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFTs by contract","description":"Get NFTs for a given contract address, including metadata for all NFTs (where available).\n* Results are limited to 100 per page by default\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection.","method":"GET","path":"/nft/:address","pathParams":[{"name":"address","description":"The address of the NFT contract","required":true,"example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"format","description":"The format of the token ID","required":false,"example":"decimal","type":"string"},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"totalRanges","description":"The number of subranges to split the results into","required":false,"type":"number"},{"name":"range","description":"The desired subrange to query","required":false,"type":"number"},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"},{"name":"normalizeMetadata","description":"Should normalized metadata be returned?","required":false,"type":"boolean"},{"name":"media_items","description":"Should preview media data be returned?","required":false,"type":"boolean"}],"responses":[{"status":"200","description":"Returns a collection of NFTs","body":{"type":"object","fields":[{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"},{"name":"token_id","type":"string","description":"The token ID of the NFT","example":"15"},{"name":"owner_of","type":"string","description":"The wallet address of the owner of the NFT","example":"0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b"},{"name":"token_hash","type":"string","description":"The token hash","example":"502cee781b0fb40ea02508b21d319ced"},{"name":"block_number","type":"string","description":"The block number when the amount or owner changed","example":"88256"},{"name":"block_number_minted","type":"string","description":"The block number when the NFT was minted","example":"88256"},{"name":"contract_type","type":"string","description":"The type of NFT contract standard","example":"ERC721"},{"name":"token_uri","type":"string","description":"The URI to the metadata of the token"},{"name":"metadata","type":"string","description":"The metadata of the token"},{"name":"normalized_metadata","description":"A normalized metadata version of the NFT's metadata.","properties":{"name":{"type":"string","description":"The name or title of the NFT","example":"Moralis Mug"},"description":{"type":"string","description":"A detailed description of the NFT","example":"Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."},"image":{"type":"string","description":"The URL of the NFT's image","example":"https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"},"external_link":{"type":"string","description":"A link to additional information","example":"https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"},"animation_url":{"type":"string","description":"An animated version of the NFT's image","example":"https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/normalizedMetadataAttribute"}}}},{"name":"media","description":"A set of links to 'thumbnail / preview' media files","properties":{"mimetype":{"type":"string","description":"The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"},"category":{"enum":["image","audio","video"]},"status":{"enum":["success","processing","unsupported_media","invalid_url","host_unavailable","temporarily_unavailable"],"description":"<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"},"original_media_url":{"type":"string","description":"The url of the original media file."},"updatedAt":{"type":"string","description":"The timestamp of the last update to this NFT media record."},"parent_hash":{"type":"string","description":"Hash value of the original media file."},"media_collection":{"description":"Preview item associated with the original","$ref":"#/components/schemas/mediaCollection"}}},{"name":"minter_address","type":"string","description":"The address that minted the NFT","example":"0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b"},{"name":"last_token_uri_sync","type":"string","description":"When the token_uri was last updated"},{"name":"last_metadata_sync","type":"string","description":"When the metadata was last updated"},{"name":"amount","type":"string","description":"The quantity of this item that the user owns (used by ERC1155)","example":"1"},{"name":"name","type":"string","description":"The name of the NFT contract","example":"CryptoKitties"},{"name":"symbol","type":"string","description":"The symbol of the NFT contract","example":"RARI"},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]}]}}]},"getNFTOwners":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFT owners by contract","description":"Get owners of NFTs for a given contract.\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection.","method":"GET","path":"/nft/:address/owners","pathParams":[{"name":"address","description":"The address of the NFT contract","required":true,"example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"format","description":"The format of the token ID","required":false,"example":"decimal","type":"string"},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"},{"name":"normalizeMetadata","description":"Should normalized metadata be returned?","required":false,"type":"boolean"},{"name":"media_items","description":"Should preview media data be returned?","required":false,"type":"boolean"}],"responses":[{"status":"200","description":"Returns a collection of NFT owners","body":{"type":"object","fields":[{"name":"status","type":"string","description":"The syncing status of the address [SYNCING/SYNCED]","example":"SYNCING"},{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"},{"name":"token_id","type":"string","description":"The token ID of the NFT","example":"15"},{"name":"contract_type","type":"string","description":"The type of NFT contract standard","example":"ERC721"},{"name":"owner_of","type":"string","description":"The wallet address of the owner of the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"block_number","type":"string","description":"The block number when the amount or owner changed","example":"88256"},{"name":"block_number_minted","type":"string","description":"The block number when the NFT was minted","example":"88256"},{"name":"token_uri","type":"string","description":"The URI to the metadata of the token"},{"name":"metadata","type":"string","description":"The metadata of the token"},{"name":"normalized_metadata","description":"A normalized metadata version of the NFT's metadata.","properties":{"name":{"type":"string","description":"The name or title of the NFT","example":"Moralis Mug"},"description":{"type":"string","description":"A detailed description of the NFT","example":"Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."},"image":{"type":"string","description":"The URL of the NFT's image","example":"https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"},"external_link":{"type":"string","description":"A link to additional information","example":"https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"},"animation_url":{"type":"string","description":"An animated version of the NFT's image","example":"https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/normalizedMetadataAttribute"}}}},{"name":"media","description":"A set of links to 'thumbnail / preview' media files","properties":{"mimetype":{"type":"string","description":"The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"},"category":{"enum":["image","audio","video"]},"status":{"enum":["success","processing","unsupported_media","invalid_url","host_unavailable","temporarily_unavailable"],"description":"<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"},"original_media_url":{"type":"string","description":"The url of the original media file."},"updatedAt":{"type":"string","description":"The timestamp of the last update to this NFT media record."},"parent_hash":{"type":"string","description":"Hash value of the original media file."},"media_collection":{"description":"Preview item associated with the original","$ref":"#/components/schemas/mediaCollection"}}},{"name":"amount","type":"string","description":"The number of this item the user owns (used by ERC1155)","example":"1"},{"name":"name","type":"string","description":"The name of the NFT contract","example":"CryptoKitties"},{"name":"symbol","type":"string","description":"The symbol of the NFT contract","example":"RARI"},{"name":"token_hash","type":"string","description":"The token hash","example":"502cee781b0fb40ea02508b21d319ced"},{"name":"last_token_uri_sync","type":"string","description":"When the token_uri was last updated","example":"2021-02-24T00:47:26.647Z"},{"name":"last_metadata_sync","type":"string","description":"When the metadata was last updated","example":"2021-02-24T00:47:26.647Z"},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]}]}}]},"getNFTContractTransfers":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFT transfers by contract","description":"Get transfers of NFTs for a given contract and other parameters.","method":"GET","path":"/nft/:address/transfers","pathParams":[{"name":"address","description":"The address of the NFT contract","required":true,"example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"from_block","description":"The minimum block number from where to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"number"},{"name":"to_block","description":"The maximum block number from where to get the transfers.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","required":false,"type":"number"},{"name":"from_date","description":"The date from where to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"string"},{"name":"to_date","description":"Get transfers up until this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","required":false,"type":"string"},{"name":"format","description":"The format of the token ID","required":false,"example":"decimal","type":"string"},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"order","description":"The order of the result, in ascending (ASC) or descending (DESC)","required":false,"example":"DESC","type":"string","enum":["ASC","DESC"]},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"}],"responses":[{"status":"200","description":"Returns a collection of NFT transfers","body":{"type":"object","fields":[{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"token_id","type":"string","description":"The token ID of the NFT","example":"15"},{"name":"from_address","type":"string","description":"The address that sent the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"from_address_label","type":"string","description":"The label of the from address","example":"Binance 1"},{"name":"to_address","type":"string","description":"The address that received the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"to_address_label","type":"string","description":"The label of the to address","example":"Binance 2"},{"name":"value","type":"string","description":"The value that was sent in the transaction (ETH/BNB/etc..)","example":"1000000000000000"},{"name":"amount","type":"string","description":"The number of tokens transferred","example":"1"},{"name":"contract_type","type":"string","description":"The type of NFT contract standard","example":"ERC721"},{"name":"block_number","type":"string","description":"The block number of the transaction","example":"88256"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-06-04T16:00:15"},{"name":"block_hash","type":"string","description":"The block hash of the transaction"},{"name":"transaction_hash","type":"string","description":"The transaction hash","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"transaction_type","type":"string","description":"The transaction type"},{"name":"transaction_index","type":"number","description":"The transaction index"},{"name":"log_index","type":"number","description":"The log index"},{"name":"operator","type":"string","description":"The operator present only for ERC1155 transfers","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]},{"name":"block_exists","type":"boolean","description":"Indicator if the block exists","example":true},{"name":"index_complete","type":"boolean","description":"Indicator if the block is fully indexed","example":true}]}}]},"getNFTTransfersFromToBlock":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFT transfers from a block to a block","description":"Get transfers of NFTs from a block number to a block number.","method":"GET","path":"/nft/transfers","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"from_block","description":"The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"number"},{"name":"to_block","description":"The maximum block number from which to get the transfers.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","required":false,"type":"number"},{"name":"from_date","description":"The start date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"string"},{"name":"to_date","description":"The end date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","required":false,"type":"string"},{"name":"format","description":"The format of the token ID","required":false,"example":"decimal","type":"string"},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"order","description":"The order of the result, in ascending (ASC) or descending (DESC)","required":false,"example":"DESC","type":"string","enum":["ASC","DESC"]},{"name":"cursor","description":"The cursor returned in the previous response (for getting the next page)\n","type":"string"}],"responses":[{"status":"200","description":"Returns a collection of NFT transfers","body":{"type":"object","fields":[{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"token_id","type":"string","description":"The token ID of the NFT","example":"15"},{"name":"from_address","type":"string","description":"The address that sent the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"from_address_label","type":"string","description":"The label of the from address","example":"Binance 1"},{"name":"to_address","type":"string","description":"The address that received the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"to_address_label","type":"string","description":"The label of the to address","example":"Binance 2"},{"name":"value","type":"string","description":"The value that was sent in the transaction (ETH/BNB/etc..)","example":"1000000000000000"},{"name":"amount","type":"string","description":"The number of tokens transferred","example":"1"},{"name":"contract_type","type":"string","description":"The type of NFT contract standard","example":"ERC721"},{"name":"block_number","type":"string","description":"The block number of the transaction","example":"88256"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-06-04T16:00:15"},{"name":"block_hash","type":"string","description":"The block hash of the transaction"},{"name":"transaction_hash","type":"string","description":"The transaction hash","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"transaction_type","type":"string","description":"The transaction type"},{"name":"transaction_index","type":"number","description":"The transaction index"},{"name":"log_index","type":"number","description":"The log index"},{"name":"operator","type":"string","description":"The operator present only for ERC1155 transfers","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]},{"name":"block_exists","type":"boolean","description":"Indicator if the block exists","example":true},{"name":"index_complete","type":"boolean","description":"Indicator if the block is fully indexed","example":true}]}}]},"getNFTTransfersByBlock":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFT transfers by block","description":"Get transfers of NFTs given a block number or block hash.","method":"GET","path":"/block/:block_number_or_hash/nft/transfers","pathParams":[{"name":"block_number_or_hash","description":"The block number or block hash","required":true,"example":"15846571","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"order","description":"The order of the result, in ascending (ASC) or descending (DESC)","required":false,"example":"DESC","type":"string","enum":["ASC","DESC"]},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"}],"responses":[{"status":"200","description":"Returns the contents of a block","body":{"type":"object","fields":[{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"token_id","type":"string","description":"The token ID of the NFT","example":"15"},{"name":"from_address","type":"string","description":"The address that sent the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"from_address_label","type":"string","description":"The label of the from address","example":"Binance 1"},{"name":"to_address","type":"string","description":"The address that received the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"to_address_label","type":"string","description":"The label of the to address","example":"Binance 2"},{"name":"value","type":"string","description":"The value that was sent in the transaction (ETH/BNB/etc..)","example":"1000000000000000"},{"name":"amount","type":"string","description":"The number of tokens transferred","example":"1"},{"name":"contract_type","type":"string","description":"The type of NFT contract standard","example":"ERC721"},{"name":"block_number","type":"string","description":"The block number of the transaction","example":"88256"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-06-04T16:00:15"},{"name":"block_hash","type":"string","description":"The block hash of the transaction"},{"name":"transaction_hash","type":"string","description":"The transaction hash","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"transaction_type","type":"string","description":"The transaction type"},{"name":"transaction_index","type":"number","description":"The transaction index"},{"name":"log_index","type":"number","description":"The log index"},{"name":"operator","type":"string","description":"The operator present only for ERC1155 transfers","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]},{"name":"block_exists","type":"boolean","description":"Indicator if the block exists","example":true},{"name":"index_complete","type":"boolean","description":"Indicator if the block is fully indexed","example":true}]}}]},"getNFTTrades":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFT trades by marketplace","description":"Get trades of NFTs for a given contract and marketplace.","method":"GET","path":"/nft/:address/trades","pathParams":[{"name":"address","description":"The address of the NFT contract","required":true,"example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"from_block","description":"The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"number"},{"name":"to_block","description":"The block number to get the trades from","required":false,"type":"string"},{"name":"from_date","description":"The start date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"string"},{"name":"to_date","description":"The end date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","required":false,"type":"string"},{"name":"marketplace","description":"Marketplace from which to get the trades (only OpenSea is supported at the moment)","required":false,"example":"opensea","type":"string"},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","required":false,"type":"string"},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"}],"responses":[{"status":"200","description":"Returns the trades","body":{"type":"object","fields":[{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"transaction_hash","type":"string","description":"The transaction hash","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"transaction_index","type":"string","description":"The transaction index"},{"name":"token_ids","type":"array","description":"The token ID(s) traded","example":["15","54"],"field":{"type":"string","example":"15"}},{"name":"seller_address","type":"string","description":"The address that sold the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"buyer_address","type":"string","description":"The address that bought the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0x4ad3785ec7eed7589fa86538244a4530f962434f"},{"name":"marketplace_address","type":"string","description":"The address of the contract that traded the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"price_token_address","type":"string","description":"The address of the token used to pay for the NFT","example":"0x60e4d786628fea6478f785a6d7e704777c86a7c6"},{"name":"price","type":"string","description":"The value that was sent in the transaction (ETH/BNB/etc..)","example":"1000000000000000"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-06-04T16:00:15"},{"name":"block_number","type":"string","description":"The block number of the transaction","example":"13680123"},{"name":"block_hash","type":"string","description":"The block hash","example":"0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96"}]}]}}]},"getNFTContractMetadata":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFT collection metadata","description":"Get the collection / contract level metadata for a given contract (name, symbol, base token URI).\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\n","method":"GET","path":"/nft/:address/metadata","pathParams":[{"name":"address","description":"The address of the NFT contract","required":true,"example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]}],"responses":[{"status":"200","description":"Returns the metadata for an NFT collection.","body":{"type":"object","fields":[{"name":"token_address","type":"string","description":"The address of the token contract","example":"0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"},{"name":"name","type":"string","description":"The name of the token contract","example":"KryptoKitties"},{"name":"synced_at","type":"string","description":"Timestamp of when the contract was last synced with the node"},{"name":"symbol","type":"string","description":"The symbol of the NFT contract","example":"RARI"},{"name":"contract_type","type":"string","description":"The type of NFT contract","example":"ERC721"},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]}}]},"getNFTBulkContractMetadata":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get metadata for multiple NFT contracts","description":"Get the collection / contract level metadata for a given list of contract addresses (name, symbol, base token URI). Supports batching up to 25 addresses.\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\n","method":"POST","path":"/nft/metadata","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]}],"bodyParam":{"required":true,"description":"Body","type":"json"},"responses":[{"status":"200","description":"Returns the metadata for the requested NFT collections."}]},"getNFTMetadata":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFT metadata","description":"Get NFT data, including metadata (where available), for the given NFT token ID and contract address.\n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\n","method":"GET","path":"/nft/:address/:token_id","pathParams":[{"name":"address","description":"The address of the NFT contract","required":true,"example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB","type":"string"},{"name":"token_id","description":"The ID of the token","required":true,"example":"1","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"format","description":"The format of the token ID","required":false,"example":"decimal","type":"string"},{"name":"normalizeMetadata","description":"Should normalized metadata be returned?","required":false,"type":"boolean"},{"name":"media_items","description":"Should preview media data be returned?","required":false,"type":"boolean"}],"responses":[{"status":"200","description":"Returns the specified NFT.","body":{"type":"object","fields":[{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"},{"name":"token_id","type":"string","description":"The token ID of the NFT","example":"15"},{"name":"owner_of","type":"string","description":"The wallet address of the owner of the NFT","example":"0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b"},{"name":"token_hash","type":"string","description":"The token hash","example":"502cee781b0fb40ea02508b21d319ced"},{"name":"block_number","type":"string","description":"The block number when the amount or owner changed","example":"88256"},{"name":"block_number_minted","type":"string","description":"The block number when the NFT was minted","example":"88256"},{"name":"contract_type","type":"string","description":"The type of NFT contract standard","example":"ERC721"},{"name":"token_uri","type":"string","description":"The URI to the metadata of the token"},{"name":"metadata","type":"string","description":"The metadata of the token"},{"name":"normalized_metadata","description":"A normalized metadata version of the NFT's metadata.","properties":{"name":{"type":"string","description":"The name or title of the NFT","example":"Moralis Mug"},"description":{"type":"string","description":"A detailed description of the NFT","example":"Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."},"image":{"type":"string","description":"The URL of the NFT's image","example":"https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"},"external_link":{"type":"string","description":"A link to additional information","example":"https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"},"animation_url":{"type":"string","description":"An animated version of the NFT's image","example":"https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/normalizedMetadataAttribute"}}}},{"name":"media","description":"A set of links to 'thumbnail / preview' media files","properties":{"mimetype":{"type":"string","description":"The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"},"category":{"enum":["image","audio","video"]},"status":{"enum":["success","processing","unsupported_media","invalid_url","host_unavailable","temporarily_unavailable"],"description":"<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"},"original_media_url":{"type":"string","description":"The url of the original media file."},"updatedAt":{"type":"string","description":"The timestamp of the last update to this NFT media record."},"parent_hash":{"type":"string","description":"Hash value of the original media file."},"media_collection":{"description":"Preview item associated with the original","$ref":"#/components/schemas/mediaCollection"}}},{"name":"minter_address","type":"string","description":"The address that minted the NFT","example":"0x9c83ff0f1c8924da96cb2fcb7e093f78eb2e316b"},{"name":"last_token_uri_sync","type":"string","description":"When the token_uri was last updated"},{"name":"last_metadata_sync","type":"string","description":"When the metadata was last updated"},{"name":"amount","type":"string","description":"The quantity of this item that the user owns (used by ERC1155)","example":"1"},{"name":"name","type":"string","description":"The name of the NFT contract","example":"CryptoKitties"},{"name":"symbol","type":"string","description":"The symbol of the NFT contract","example":"RARI"},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]}}]},"getNFTTransfers":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFT transfers by token ID","description":"Get transfers of an NFT given a contract address and token ID.","method":"GET","path":"/nft/:address/:token_id/transfers","pathParams":[{"name":"address","description":"The address of the NFT contract","required":true,"example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB","type":"string"},{"name":"token_id","description":"The ID of the token","required":true,"example":"1","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"format","description":"The format of the token ID","required":false,"example":"decimal","type":"string"},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"order","description":"The order of the result, in ascending (ASC) or descending (DESC)","required":false,"example":"DESC","type":"string","enum":["ASC","DESC"]},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"}],"responses":[{"status":"200","description":"Returns a collection of NFT transfers","body":{"type":"object","fields":[{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"token_id","type":"string","description":"The token ID of the NFT","example":"15"},{"name":"from_address","type":"string","description":"The address that sent the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"from_address_label","type":"string","description":"The label of the from address","example":"Binance 1"},{"name":"to_address","type":"string","description":"The address that received the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"to_address_label","type":"string","description":"The label of the to address","example":"Binance 2"},{"name":"value","type":"string","description":"The value that was sent in the transaction (ETH/BNB/etc..)","example":"1000000000000000"},{"name":"amount","type":"string","description":"The number of tokens transferred","example":"1"},{"name":"contract_type","type":"string","description":"The type of NFT contract standard","example":"ERC721"},{"name":"block_number","type":"string","description":"The block number of the transaction","example":"88256"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-06-04T16:00:15"},{"name":"block_hash","type":"string","description":"The block hash of the transaction"},{"name":"transaction_hash","type":"string","description":"The transaction hash","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"transaction_type","type":"string","description":"The transaction type"},{"name":"transaction_index","type":"number","description":"The transaction index"},{"name":"log_index","type":"number","description":"The log index"},{"name":"operator","type":"string","description":"The operator present only for ERC1155 transfers","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]},{"name":"block_exists","type":"boolean","description":"Indicator if the block exists","example":true},{"name":"index_complete","type":"boolean","description":"Indicator if the block is fully indexed","example":true}]}}]},"getNFTTokenIdOwners":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFT owners by token ID","description":"Get owners of a specific NFT given the contract address and token ID. \n* Requests for contract addresses not yet indexed will automatically start the indexing process for that NFT collection\n","method":"GET","path":"/nft/:address/:token_id/owners","pathParams":[{"name":"address","description":"The address of the NFT contract","required":true,"example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB","type":"string"},{"name":"token_id","description":"The ID of the token","required":true,"example":"1","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"format","description":"The format of the token ID","required":false,"example":"decimal","type":"string"},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"},{"name":"normalizeMetadata","description":"Should normalized metadata be returned?","required":false,"type":"boolean"},{"name":"media_items","description":"Should preview media data be returned?","required":false,"type":"boolean"}],"responses":[{"status":"200","description":"Returns a collection of NFTs with their respective owners.","body":{"type":"object","fields":[{"name":"status","type":"string","description":"The syncing status of the address [SYNCING/SYNCED]","example":"SYNCING"},{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB"},{"name":"token_id","type":"string","description":"The token ID of the NFT","example":"15"},{"name":"contract_type","type":"string","description":"The type of NFT contract standard","example":"ERC721"},{"name":"owner_of","type":"string","description":"The wallet address of the owner of the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"block_number","type":"string","description":"The block number when the amount or owner changed","example":"88256"},{"name":"block_number_minted","type":"string","description":"The block number when the NFT was minted","example":"88256"},{"name":"token_uri","type":"string","description":"The URI to the metadata of the token"},{"name":"metadata","type":"string","description":"The metadata of the token"},{"name":"normalized_metadata","description":"A normalized metadata version of the NFT's metadata.","properties":{"name":{"type":"string","description":"The name or title of the NFT","example":"Moralis Mug"},"description":{"type":"string","description":"A detailed description of the NFT","example":"Moralis Coffee nug 3D Asset that can be used in 3D worldspaces. This NFT is presented as a flat PNG, a Unity3D Prefab and a standard fbx."},"image":{"type":"string","description":"The URL of the NFT's image","example":"https://arw2wxg84h6b.moralishost.com:2053/server/files/tNJatzsHirx4V2VAep6sc923OYGxvkpBeJttR7Ks/de504bbadadcbe30c86278342fcf2560_moralismug.png"},"external_link":{"type":"string","description":"A link to additional information","example":"https://giphy.com/gifs/loop-recursion-ting-aaODAv1iuQdgI"},"animation_url":{"type":"string","description":"An animated version of the NFT's image","example":"https://giphy.com/gifs/food-design-donuts-o9ngTPVYW4qo8"},"attributes":{"type":"array","items":{"$ref":"#/components/schemas/normalizedMetadataAttribute"}}}},{"name":"media","description":"A set of links to 'thumbnail / preview' media files","properties":{"mimetype":{"type":"string","description":"The mimetype of the media file [see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types]"},"category":{"enum":["image","audio","video"]},"status":{"enum":["success","processing","unsupported_media","invalid_url","host_unavailable","temporarily_unavailable"],"description":"<table><tr><td>success</td><td>The NFT Preview was created / retrieved successfully</td></tr><tr><td>processing</td><td>The NFT Preview was not found and has been submitted for generation.</td></tr><tr><td>unsupported_media</td><td>The mime-type of the NFT's media file indicates a type not currently supported.</td></tr><tr><td>invalid_url</td><td>The 'image' URL from the NFT's metadata is not a valid URL and cannot be processed.</td></tr><tr><td>host_unavailable</td><td>The 'image' URL from the NFT's metadata returned an HttpCode indicating the host / file is not available.</td></tr><tr><td>temporarily_unavailable</td><td>The attempt to load / parse the NFT media file failed (usually due to rate limiting) and will be tried again at next request.</td></tr></table>"},"original_media_url":{"type":"string","description":"The url of the original media file."},"updatedAt":{"type":"string","description":"The timestamp of the last update to this NFT media record."},"parent_hash":{"type":"string","description":"Hash value of the original media file."},"media_collection":{"description":"Preview item associated with the original","$ref":"#/components/schemas/mediaCollection"}}},{"name":"amount","type":"string","description":"The number of this item the user owns (used by ERC1155)","example":"1"},{"name":"name","type":"string","description":"The name of the NFT contract","example":"CryptoKitties"},{"name":"symbol","type":"string","description":"The symbol of the NFT contract","example":"RARI"},{"name":"token_hash","type":"string","description":"The token hash","example":"502cee781b0fb40ea02508b21d319ced"},{"name":"last_token_uri_sync","type":"string","description":"When the token_uri was last updated","example":"2021-02-24T00:47:26.647Z"},{"name":"last_metadata_sync","type":"string","description":"When the metadata was last updated","example":"2021-02-24T00:47:26.647Z"},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]}]}}]},"syncNFTContract":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Resync NFT Contract","description":"Initiates a sync of a previously non synced contract.","method":"PUT","path":"/nft/:address/sync","pathParams":[{"name":"address","description":"The address of the NFT contract","required":true,"example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]}],"responses":[{"status":"201","description":"Contract address was triggered for index."}]},"reSyncMetadata":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Resync NFT metadata","description":"Resync the metadata for an NFT\n* The metadata flag will request the NFT's metadata from an already existing token_uri\n* The uri (default) flag will fetch the latest token_uri from the given NFT contract address. In sync mode the metadata will also be fetched\n* The sync mode will make the endpoint synchronous so it will wait for the task to be completed before responding\n* The async mode (default) will make the endpoint asynchronous so we will wait for the task to be completed before responding\n","method":"GET","path":"/nft/:address/:token_id/metadata/resync","pathParams":[{"name":"address","description":"The address of the NFT contract","required":true,"example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB","type":"string"},{"name":"token_id","description":"The ID of the token","required":true,"example":"1","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"flag","description":"The type of resync to operate","required":false,"example":"uri","type":"string"},{"name":"mode","description":"To define the behaviour of the endpoint","required":false,"example":"sync","type":"string"}],"responses":[{"status":"200","description":"(In sync mode) Resync request executed.","body":{"type":"object","fields":[{"name":"status","type":"string","description":"The status of the resync request"}]}},{"status":"202","description":"The resync request was received and will be executed.","body":{"type":"object","fields":[{"name":"status","type":"string","description":"The status of the resync request"}]}},{"status":"404","description":"(In sync mode) Resync request executed and metadata could not be updated.","body":{"type":"object","fields":[{"name":"status","type":"string","description":"The status of the resync request"}]}}]},"getNFTLowestPrice":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get NFT lowest price","description":"Get the lowest executed price for an NFT contract for the last x days (only trades paid in ETH).","method":"GET","path":"/nft/:address/lowestprice","pathParams":[{"name":"address","description":"The address of the NFT contract","required":true,"example":"0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"days","description":"The number of days to look back to find the lowest price\nIf not provided 7 days will be the default\n","required":false,"type":"number"},{"name":"marketplace","description":"Marketplace from which to get the trades (only OpenSea is supported at the moment)","required":false,"example":"opensea","type":"string"}],"responses":[{"status":"200","description":"Returns the trade with the lowest price","body":{"type":"object","fields":[{"name":"transaction_hash","type":"string","description":"The transaction hash","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"transaction_index","type":"string","description":"The transaction index"},{"name":"token_ids","type":"array","description":"The token ID(s) traded","example":["15","54"],"field":{"type":"string","example":"15"}},{"name":"seller_address","type":"string","description":"The address that sold the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"buyer_address","type":"string","description":"The address that bought the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"token_address","type":"string","description":"The address of the NFT contract","example":"0x4ad3785ec7eed7589fa86538244a4530f962434f"},{"name":"marketplace_address","type":"string","description":"The address of the contract that traded the NFT","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"price_token_address","type":"string","description":"The address of the token used to pay for the NFT","example":"0x60e4d786628fea6478f785a6d7e704777c86a7c6"},{"name":"price","type":"string","description":"The value that was sent in the transaction (ETH/BNB/etc..)","example":"1000000000000000"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-06-04T16:00:15"},{"name":"block_number","type":"string","description":"The block number of the transaction","example":"13680123"},{"name":"block_hash","type":"string","description":"The block hash","example":"0x4a7c916ca4a970358b9df90051008f729685ff05e9724a9dddba32630c37cb96"}]}}]},"getTokenPrice":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get ERC20 token price","description":"Get the token price denominated in the blockchain's native token and USD.","method":"GET","path":"/erc20/:address/price","pathParams":[{"name":"address","description":"The address of the token contract","required":true,"example":"0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"exchange","description":"The factory name or address of the token exchange","required":false,"type":"string"},{"name":"to_block","description":"The block number from which the token price should be checked","required":false,"type":"number"},{"name":"include","description":"If the result should contain the 24hr percent change","required":false,"example":"","type":"string"}],"responses":[{"status":"200","description":"Returns the price denominated in the blockchain's native token and USD for a given token contract address","body":{"type":"object","fields":[{"name":"tokenName","type":"string","description":"The name of the token","example":"Kylin Network"},{"name":"tokenSymbol","type":"string","description":"The symbol of the token","example":"KYL"},{"name":"tokenLogo","type":"string","description":"The logo of the token","example":"https://cdn.moralis.io/eth/0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c.png"},{"name":"tokenDecimals","type":"string","description":"The number of decimals of the token","example":"18"},{"name":"nativePrice","required":["value","decimals","name","symbol","address"],"properties":{"value":{"type":"string","description":"The native price of the token","example":"8409770570506626"},"decimals":{"type":"integer","description":"The number of decimals on the token","example":18},"name":{"type":"string","description":"The name of the token","example":"Ether"},"symbol":{"type":"string","description":"The symbol of the token","example":"ETH"},"address":{"type":"string","description":"The address of the native token"}}},{"name":"usdPrice","type":"number","description":"The price in USD for the token","example":19.722370676},{"name":"usdPriceFormatted","type":"string","description":"The price in USD for the token in string format","example":"19.722370676"},{"name":"24hrPercentChange","type":"string","description":"The 24hr percent change of the token","example":"-0.8842730258590583"},{"name":"exchangeAddress","type":"string","description":"The address of the exchange used to calculate the price","example":"0x1f98431c8ad98523631ae4a59f267346ea31f984"},{"name":"exchangeName","type":"string","description":"The name of the exchange used to calculate the price","example":"Uniswap v3"},{"name":"tokenAddress","type":"string","description":"The address of the token","example":"0x67b6d479c7bb412c54e03dca8e1bc6740ce6b99c"},{"name":"toBlock","type":"string","description":"toBlock","example":"16314545"}]}}]},"getMultipleTokenPrices":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get Multiple ERC20 token prices","description":"Returns an array of token prices denominated in the blockchain's native token and USD for a given token contract address","method":"POST","path":"/erc20/prices","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"include","description":"If the result should contain the 24hr percent change","required":false,"example":"","type":"string"}],"bodyParam":{"required":true,"description":"Body","type":"object","fields":[{"name":"tokens","type":"object","description":"The tokens to be fetched","example":[{"token_address":"0xdac17f958d2ee523a2206206994597c13d831ec7"},{"token_address":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"},{"token_address":"0xae7ab96520de3a18e5e111b5eaab095312d7fe84","exchange":"uniswapv2","to_block":"16314545"},{"token_address":"0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0"}],"fields":[{"name":"token_address","type":"string","description":"The contract address","example":"0x06012c8cf97bead5deae237070f9587f8e7a266d"},{"name":"exchange","type":"string","description":"The exchange","example":"uniswapv3"},{"name":"to_block","type":"string","description":"The block number","example":12526958}]}]},"responses":[{"status":"200","description":"Returns an array of token prices denominated in the blockchain's native token and USD for a given token contract address"}]},"getWalletTokenBalances":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get ERC20 token balance by wallet","description":"Get token balances for a specific wallet address.","method":"GET","path":"/:address/erc20","pathParams":[{"name":"address","description":"The address from which token balances will be checked","required":true,"example":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"to_block","description":"The block number up to which the balances will be checked.","required":false,"type":"number"},{"name":"token_addresses","description":"The addresses to get balances for (optional)","required":false,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"Returns token balances for a specific address"}]},"getWalletTokenTransfers":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get ERC20 token transactions by wallet","description":"Get ERC20 token transactions ordered by block number in descending order.","method":"GET","path":"/:address/erc20/transfers","pathParams":[{"name":"address","description":"The address of the wallet","required":true,"example":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"from_block","description":"The minimum block number from which to get the transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"number"},{"name":"to_block","description":"The maximum block number from which to get the transactions.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","required":false,"type":"number"},{"name":"from_date","description":"The start date from which to get the transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"string"},{"name":"to_date","description":"Get the transactions up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","type":"string"},{"name":"contract_addresses","description":"List of contract addresses of transfers","required":false,"type":"array","field":{"type":"string"}},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"order","description":"The order of the result, in ascending (ASC) or descending (DESC)","required":false,"example":"DESC","type":"string","enum":["ASC","DESC"]},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"}],"responses":[{"status":"200","description":"Returns a collection of token transactions.","body":{"type":"object","fields":[{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"token_name","type":"string","example":"Tether USD"},{"name":"token_symbol","type":"string","example":"USDT"},{"name":"token_logo","type":"string","example":"https://assets.coingecko.com/coins/images/325/large/Tether-logo.png?1598003707"},{"name":"token_decimals","type":"string","example":"6"},{"name":"transaction_hash","type":"string","description":"The transaction hash","example":"0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"},{"name":"address","type":"string","description":"The address of the token","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-04-02T10:07:54.000Z"},{"name":"block_number","type":"string","description":"The block number","example":12526958},{"name":"block_hash","type":"string","description":"The block hash","example":"0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"},{"name":"to_address","type":"string","description":"The recipient","example":"0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044"},{"name":"to_address_label","type":"string","description":"The label of the to address","example":"Binance 2"},{"name":"from_address","type":"string","description":"The sender","example":"0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"},{"name":"from_address_label","type":"string","description":"The label of the from address","example":"Binance 1"},{"name":"value","type":"string","description":"The value that was transfered (in wei)","example":650000000000000000},{"name":"transaction_index","type":"number","description":"The transaction index of the transfer within the block","example":12},{"name":"log_index","type":"number","description":"The log index of the transfer within the block","example":2},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]}]}}]},"getTokenMetadata":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get ERC20 token metadata by contract","description":"Get the metadata for a given token contract address (name, symbol, decimals, logo).","method":"GET","path":"/erc20/metadata","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"addresses","description":"The addresses to get metadata for","required":true,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"Get the metadata for a given ERC20 token contract address (name, symbol, decimals, logo)."}]},"getTokenMetadataBySymbol":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get ERC20 token metadata by symbols","description":"Get the metadata for a list of token symbols (name, symbol, decimals, logo).","method":"GET","path":"/erc20/metadata/symbols","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"symbols","description":"The symbols to get metadata for","required":true,"type":"array","field":{"type":"string","example":"LINK"}}],"responses":[{"status":"200","description":"Returns metadata for a given token contract address (name, symbol, decimals, logo)."}]},"getTokenAllowance":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get ERC20 token allowance","description":"Get the amount which the spender is allowed to withdraw on behalf of the owner.","method":"GET","path":"/erc20/:address/allowance","pathParams":[{"name":"address","description":"The address of the token contract","required":true,"type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"owner_address","description":"The address of the token owner","required":true,"type":"string"},{"name":"spender_address","description":"The address of the token spender","required":true,"type":"string"}],"responses":[{"status":"200","description":"Returns the amount which the spender is allowed to withdraw on behalf of the owner.","body":{"type":"object","fields":[{"name":"allowance","type":"string","description":"The allowance"}]}}]},"getTokenTransfers":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get ERC20 token transactions by contract","description":"Get ERC20 token transactions from a contract ordered by block number in descending order.","method":"GET","path":"/erc20/:address/transfers","pathParams":[{"name":"address","description":"The address of the token contract","required":true,"example":"0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"from_block","description":"The minimum block number from which to get the transfers\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"number"},{"name":"to_block","description":"The maximum block number from which to get the transfers.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","required":false,"type":"number"},{"name":"from_date","description":"The start date from which to get the transfers (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"string"},{"name":"to_date","description":"Get transfers up until this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","type":"string"},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"order","description":"The order of the result, in ascending (ASC) or descending (DESC)","required":false,"example":"DESC","type":"string","enum":["ASC","DESC"]},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"}],"responses":[{"status":"200","description":"Returns a collection of token contract transactions.","body":{"type":"object","fields":[{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"token_name","type":"string","example":"Tether USD"},{"name":"token_symbol","type":"string","example":"USDT"},{"name":"token_logo","type":"string","example":"https://assets.coingecko.com/coins/images/325/large/Tether-logo.png?1598003707"},{"name":"token_decimals","type":"string","example":"6"},{"name":"transaction_hash","type":"string","description":"The transaction hash","example":"0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"},{"name":"address","type":"string","description":"The address of the token","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-04-02T10:07:54.000Z"},{"name":"block_number","type":"string","description":"The block number","example":12526958},{"name":"block_hash","type":"string","description":"The block hash","example":"0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"},{"name":"to_address","type":"string","description":"The recipient","example":"0x62AED87d21Ad0F3cdE4D147Fdcc9245401Af0044"},{"name":"to_address_label","type":"string","description":"The label of the to address","example":"Binance 2"},{"name":"from_address","type":"string","description":"The sender","example":"0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"},{"name":"from_address_label","type":"string","description":"The label of the from address","example":"Binance 1"},{"name":"value","type":"string","description":"The value that was transfered (in wei)","example":650000000000000000},{"name":"transaction_index","type":"number","description":"The transaction index of the transfer within the block","example":12},{"name":"log_index","type":"number","description":"The log index of the transfer within the block","example":2},{"name":"possible_spam","type":"boolean","description":"Indicates if a contract is possibly a spam contract","example":"false"},{"name":"verified_collection","type":"boolean","description":"Indicates if a contract is verified","example":"false"}]}]}}]},"getNativeBalance":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get native balance by wallet","description":"Get the native balance for a specific wallet address.","method":"GET","path":"/:address/balance","pathParams":[{"name":"address","description":"The address from which the native balance will be checked","required":true,"example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"to_block","description":"The block number up to which the balances will be checked.","required":false,"type":"number"}],"responses":[{"status":"200","description":"Returns the native balance for a specific address","body":{"type":"object","fields":[{"name":"balance","type":"string","description":"The balance","example":"1234567890"}]}}]},"getNativeBalancesForAddresses":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get balance for a set of wallet","description":"Get the native balances for a set of specific addresses","method":"GET","path":"/wallets/balances","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"to_block","description":"The block number on which the balances should be checked","required":false,"type":"number"},{"name":"wallet_addresses","description":"The addresses to get metadata for","required":true,"type":"array","field":{"type":"string","example":"0xE92d1A43df510F82C66382592a047d288f85226f"}}],"responses":[{"status":"200","description":"Returns a collection of balances","body":{"type":"array"}}]},"getWalletTransactions":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get native transactions by wallet","description":"Get native transactions ordered by block number in descending order.","method":"GET","path":"/:address","pathParams":[{"name":"address","description":"The address of the wallet","required":true,"example":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"from_block","description":"The minimum block number from which to get the transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"number"},{"name":"to_block","description":"The maximum block number from which to get the transactions.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","required":false,"type":"number"},{"name":"from_date","description":"The start date from which to get the transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"string"},{"name":"to_date","description":"Get the transactions up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","type":"string"},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"},{"name":"order","description":"The order of the result, in ascending (ASC) or descending (DESC)","required":false,"example":"DESC","type":"string","enum":["ASC","DESC"]},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"include","description":"If the result should contain the internal transactions.","required":false,"example":"","type":"string","enum":["internal_transactions"]}],"responses":[{"status":"200","description":"Returns a collection of native transactions.","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"result","type":"object","fields":[{"name":"hash","type":"string","description":"The hash of the transaction","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"nonce","type":"string","description":"The nonce of the transaction","example":326595425},{"name":"transaction_index","type":"string","description":"The transaction index","example":25},{"name":"from_address","type":"string","description":"The sender","example":"0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"},{"name":"from_address_label","type":"string","description":"The label of the from address","example":"Binance 1"},{"name":"to_address","type":"string","description":"The recipient","example":"0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"},{"name":"to_address_label","type":"string","description":"The label of the to address","example":"Binance 2"},{"name":"value","type":"string","description":"The value that was transferred (in wei)","example":650000000000000000},{"name":"gas","type":"string","description":"The gas of the transaction","example":6721975},{"name":"gas_price","type":"string","description":"The gas price","example":20000000000},{"name":"input","type":"string","description":"The input"},{"name":"receipt_cumulative_gas_used","type":"string","description":"The receipt cumulative gas used","example":1340925},{"name":"receipt_gas_used","type":"string","description":"The receipt gas used","example":1340925},{"name":"receipt_contract_address","type":"string","description":"The receipt contract address","example":"0x1d6a4cf64b52f6c73f201839aded7379ce58059c"},{"name":"receipt_root","type":"string","description":"The receipt root"},{"name":"receipt_status","type":"string","description":"The receipt status","example":1},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-04-02T10:07:54.000Z"},{"name":"block_number","type":"string","description":"The block number","example":12526958},{"name":"block_hash","type":"string","description":"The block hash","example":"0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"},{"name":"internal_transactions","type":"object","description":"The internal transaction","fields":[{"name":"transaction_hash","type":"string","description":"The hash of the transaction","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"block_number","type":"string","description":"The block number","example":12526958},{"name":"block_hash","type":"string","description":"The block hash","example":"0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"},{"name":"type","type":"string","description":"Call type","example":"CALL"},{"name":"from","type":"string","description":"The sender","example":"0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"},{"name":"to","type":"string","description":"The recipient","example":"0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"},{"name":"value","type":"string","description":"The value that was transfered (in wei)","example":"650000000000000000"},{"name":"gas","type":"string","description":"The gas of the transaction","example":"6721975"},{"name":"gas_used","type":"string","description":"The used gas","example":"6721975"},{"name":"input","type":"string","description":"The input","example":"0x"},{"name":"output","type":"string","description":"The output","example":"0x"}]}]}]}}]},"getWalletTransactionsVerbose":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get decoded transactions by wallet","description":"Get native transactions and logs ordered by block number in descending order.","method":"GET","path":"/:address/verbose","pathParams":[{"name":"address","description":"The address of the wallet","required":true,"example":"0xd8da6bf26964af9d7eed9e03e53415d37aa96045","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"from_block","description":"The minimum block number from which to get the transactions\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"number"},{"name":"to_block","description":"The maximum block number from which to get the transactions.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","required":false,"type":"number"},{"name":"from_date","description":"The start date from which to get the transactions (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"string"},{"name":"to_date","description":"Get the transactions up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","type":"string"},{"name":"include","description":"If the result should contain the internal transactions.","required":false,"example":"","type":"string","enum":["internal_transactions"]},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"},{"name":"order","description":"The order of the result, in ascending (ASC) or descending (DESC)","required":false,"example":"DESC","type":"string","enum":["ASC","DESC"]},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"}],"responses":[{"status":"200","description":"Returns a collection of native transactions.","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"page","type":"number","description":"The current page of the result","example":"2"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"result","type":"object","fields":[{"name":"hash","type":"string","description":"The hash of the transaction","example":"0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"},{"name":"nonce","type":"string","description":"The nonce","example":"1848059"},{"name":"transaction_index","type":"string","example":"108"},{"name":"from_address","type":"string","description":"The from address","example":"0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"},{"name":"from_address_label","type":"string","description":"The label of the from address","example":"Binance 1"},{"name":"to_address","type":"string","description":"The to address","example":"0x003dde3494f30d861d063232c6a8c04394b686ff"},{"name":"to_address_label","type":"string","description":"The label of the to address","example":"Binance 2"},{"name":"value","type":"string","description":"The value sent","example":"115580000000000000"},{"name":"gas","type":"string","example":"30000"},{"name":"gas_price","type":"string","description":"The gas price","example":"52500000000"},{"name":"input","type":"string","example":"0x"},{"name":"receipt_cumulative_gas_used","type":"string","example":"4923073"},{"name":"receipt_gas_used","type":"string","example":"21000"},{"name":"receipt_contract_address","type":"string","example":null},{"name":"receipt_root","type":"string","example":null},{"name":"receipt_status","type":"string","example":"1"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-05-07T11:08:35.000Z"},{"name":"block_number","type":"string","description":"The block number","example":"12386788"},{"name":"block_hash","type":"string","description":"The hash of the block","example":"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"},{"name":"logs","type":"object","description":"The logs of the transaction","fields":[{"name":"log_index","type":"string","example":"273"},{"name":"transaction_hash","type":"string","description":"The hash of the transaction","example":"0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"},{"name":"transaction_index","type":"string","example":"204"},{"name":"address","type":"string","description":"The address of the contract","example":"0x3105d328c66d8d55092358cf595d54608178e9b5"},{"name":"data","type":"string","description":"The data of the log","example":"0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"},{"name":"topic0","type":"string","example":"0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"},{"name":"topic1","type":"string","example":"0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"},{"name":"topic2","type":"string","example":"0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"},{"name":"topic3","type":"string","example":null},{"name":"block_timestamp","type":"string","description":"The timestamp of the block","example":"2021-05-07T11:08:35.000Z"},{"name":"block_number","type":"string","description":"The block number","example":"12386788"},{"name":"block_hash","type":"string","description":"The hash of the block","example":"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"},{"name":"decoded_event","type":"object","description":"The decoded data of the log","properties":{"signature":{"type":"string","example":"Transfer(address,address,uint256)"},"label":{"type":"string","example":"Transfer"},"type":{"type":"string","example":"event"},"params":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","example":"from"},"value":{"type":"string","example":"0x26C5011483Add49801eA8E3Ee354fE013895aCe5"},"type":{"type":"string","example":"address"}}}}}}]},{"name":"decoded_call","type":"object","description":"The decoded data of the transaction","properties":{"signature":{"type":"string","example":"transfer(address,uint256)"},"label":{"type":"string","example":"transfer"},"type":{"type":"string","example":"function"},"params":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","example":"_to"},"value":{"type":"string","example":"0x1CA455A55108874A95C84620dDA2566c54D17953"},"type":{"type":"string","example":"address"}}}}}}]}]}}]},"getInternalTransactions":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get internal transactions by transaction hash","description":"Get the contents of a internal transaction by transaction hash.","method":"GET","path":"/transaction/:transaction_hash/internal-transactions","pathParams":[{"name":"transaction_hash","description":"The transaction hash","required":true,"example":"0xdc85cb1b75fd09c2f6d001fea4aba83764193cbd7881a1fa8ccde350a5681109","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]}],"responses":[{"status":"200","description":"Internal Transaction details by transaction hash"}]},"getTransaction":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get transaction by hash","description":"Get the contents of a transaction by the given transaction hash.","method":"GET","path":"/transaction/:transaction_hash","pathParams":[{"name":"transaction_hash","description":"The transaction hash","required":true,"example":"0xdc85cb1b75fd09c2f6d001fea4aba83764193cbd7881a1fa8ccde350a5681109","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"include","description":"If the result should contain the internal transactions.","required":false,"example":"","type":"string","enum":["internal_transactions"]}],"responses":[{"status":"200","description":"Transaction details by transaction hash","body":{"type":"object","fields":[{"name":"hash","type":"string","description":"The hash of the transaction","example":"0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"},{"name":"nonce","type":"string","description":"The nonce","example":"1848059"},{"name":"transaction_index","type":"string","example":"108"},{"name":"from_address","type":"string","description":"The from address","example":"0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"},{"name":"from_address_label","type":"string","description":"The label of the from address","example":"Binance 1"},{"name":"to_address","type":"string","description":"The to address","example":"0x003dde3494f30d861d063232c6a8c04394b686ff"},{"name":"to_address_label","type":"string","description":"The label of the to address","example":"Binance 2"},{"name":"value","type":"string","description":"The value sent","example":"115580000000000000"},{"name":"gas","type":"string","example":"30000"},{"name":"gas_price","type":"string","description":"The gas price","example":"52500000000"},{"name":"input","type":"string","example":"0x"},{"name":"receipt_cumulative_gas_used","type":"string","example":"4923073"},{"name":"receipt_gas_used","type":"string","example":"21000"},{"name":"receipt_contract_address","type":"string","example":null},{"name":"receipt_root","type":"string","example":null},{"name":"receipt_status","type":"string","example":"1"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-05-07T11:08:35.000Z"},{"name":"block_number","type":"string","description":"The block number","example":"12386788"},{"name":"block_hash","type":"string","description":"The hash of the block","example":"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"},{"name":"logs","type":"object","description":"The logs of the transaction","fields":[{"name":"log_index","type":"string","example":"273"},{"name":"transaction_hash","type":"string","description":"The hash of the transaction","example":"0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"},{"name":"transaction_index","type":"string","example":"204"},{"name":"address","type":"string","description":"The address of the contract","example":"0x3105d328c66d8d55092358cf595d54608178e9b5"},{"name":"data","type":"string","description":"The data of the log","example":"0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"},{"name":"topic0","type":"string","example":"0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"},{"name":"topic1","type":"string","example":"0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"},{"name":"topic2","type":"string","example":"0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"},{"name":"topic3","type":"string","example":null},{"name":"block_timestamp","type":"string","description":"The timestamp of the block","example":"2021-05-07T11:08:35.000Z"},{"name":"block_number","type":"string","description":"The block number","example":"12386788"},{"name":"block_hash","type":"string","description":"The hash of the block","example":"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"}]},{"name":"internal_transactions","type":"object","description":"The internal transactions of the transaction","fields":[{"name":"transaction_hash","type":"string","description":"The hash of the transaction","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"block_number","type":"string","description":"The block number","example":12526958},{"name":"block_hash","type":"string","description":"The block hash","example":"0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"},{"name":"type","type":"string","description":"Call type","example":"CALL"},{"name":"from","type":"string","description":"The sender","example":"0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"},{"name":"to","type":"string","description":"The recipient","example":"0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"},{"name":"value","type":"string","description":"The value that was transfered (in wei)","example":"650000000000000000"},{"name":"gas","type":"string","description":"The gas of the transaction","example":"6721975"},{"name":"gas_used","type":"string","description":"The used gas","example":"6721975"},{"name":"input","type":"string","description":"The input","example":"0x"},{"name":"output","type":"string","description":"The output","example":"0x"}]}]}}]},"getTransactionVerbose":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get decoded transaction by hash","description":"Get the contents of a transaction by the given transaction hash.","method":"GET","path":"/transaction/:transaction_hash/verbose","pathParams":[{"name":"transaction_hash","description":"The transaction hash","required":true,"example":"0xdc85cb1b75fd09c2f6d001fea4aba83764193cbd7881a1fa8ccde350a5681109","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"include","description":"If the result should contain the internal transactions.","required":false,"example":"","type":"string","enum":["internal_transactions"]}],"responses":[{"status":"200","description":"Transaction details by transaction hash","body":{"type":"object","fields":[{"name":"hash","type":"string","description":"The hash of the transaction","example":"0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"},{"name":"nonce","type":"string","description":"The nonce","example":"1848059"},{"name":"transaction_index","type":"string","example":"108"},{"name":"from_address","type":"string","description":"The from address","example":"0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"},{"name":"from_address_label","type":"string","description":"The label of the from address","example":"Binance 1"},{"name":"to_address","type":"string","description":"The to address","example":"0x003dde3494f30d861d063232c6a8c04394b686ff"},{"name":"to_address_label","type":"string","description":"The label of the to address","example":"Binance 2"},{"name":"value","type":"string","description":"The value sent","example":"115580000000000000"},{"name":"gas","type":"string","example":"30000"},{"name":"gas_price","type":"string","description":"The gas price","example":"52500000000"},{"name":"input","type":"string","example":"0x"},{"name":"receipt_cumulative_gas_used","type":"string","example":"4923073"},{"name":"receipt_gas_used","type":"string","example":"21000"},{"name":"receipt_contract_address","type":"string","example":null},{"name":"receipt_root","type":"string","example":null},{"name":"receipt_status","type":"string","example":"1"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-05-07T11:08:35.000Z"},{"name":"block_number","type":"string","description":"The block number","example":"12386788"},{"name":"block_hash","type":"string","description":"The hash of the block","example":"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"},{"name":"logs","type":"object","description":"The logs of the transaction","fields":[{"name":"log_index","type":"string","example":"273"},{"name":"transaction_hash","type":"string","description":"The hash of the transaction","example":"0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"},{"name":"transaction_index","type":"string","example":"204"},{"name":"address","type":"string","description":"The address of the contract","example":"0x3105d328c66d8d55092358cf595d54608178e9b5"},{"name":"data","type":"string","description":"The data of the log","example":"0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"},{"name":"topic0","type":"string","example":"0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"},{"name":"topic1","type":"string","example":"0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"},{"name":"topic2","type":"string","example":"0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"},{"name":"topic3","type":"string","example":null},{"name":"block_timestamp","type":"string","description":"The timestamp of the block","example":"2021-05-07T11:08:35.000Z"},{"name":"block_number","type":"string","description":"The block number","example":"12386788"},{"name":"block_hash","type":"string","description":"The hash of the block","example":"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"},{"name":"decoded_event","type":"object","description":"The decoded data of the log","properties":{"signature":{"type":"string","example":"Transfer(address,address,uint256)"},"label":{"type":"string","example":"Transfer"},"type":{"type":"string","example":"event"},"params":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","example":"from"},"value":{"type":"string","example":"0x26C5011483Add49801eA8E3Ee354fE013895aCe5"},"type":{"type":"string","example":"address"}}}}}}]},{"name":"decoded_call","type":"object","description":"The decoded data of the transaction","properties":{"signature":{"type":"string","example":"transfer(address,uint256)"},"label":{"type":"string","example":"transfer"},"type":{"type":"string","example":"function"},"params":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","example":"_to"},"value":{"type":"string","example":"0x1CA455A55108874A95C84620dDA2566c54D17953"},"type":{"type":"string","example":"address"}}}}}}]}}]},"getBlock":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get block by hash","description":"Get the contents of a block given the block hash.","method":"GET","path":"/block/:block_number_or_hash","pathParams":[{"name":"block_number_or_hash","description":"The block number or block hash","required":true,"example":"15863321","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"include","description":"If the result should contain the internal transactions.","required":false,"example":"","type":"string","enum":["internal_transactions"]}],"responses":[{"status":"200","description":"Returns the contents of a block","body":{"type":"object","fields":[{"name":"timestamp","type":"string","description":"The block timestamp","example":"2021-05-07T11:08:35.000Z"},{"name":"number","type":"string","description":"The block number","example":12386788},{"name":"hash","type":"string","description":"The block hash","example":"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"},{"name":"parent_hash","type":"string","description":"The block hash of the parent block","example":"0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045"},{"name":"nonce","type":"string","description":"The nonce","example":"0xedeb2d8fd2b2bdec"},{"name":"sha3_uncles","type":"string","example":"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"},{"name":"logs_bloom","type":"string","example":"0xdde5fc46c5d8bcbd58207bc9f267bf43298e23791a326ff02661e99790da9996b3e0dd912c0b8202d389d282c56e4d11eb2dec4898a32b6b165f1f4cae6aa0079498eab50293f3b8defbf6af11bb75f0408a563ddfc26a3323d1ff5f9849e95d5f034d88a757ddea032c75c00708c9ff34d2207f997cc7d93fd1fa160a6bfaf62a54e31f9fe67ab95752106ba9d185bfdc9b6dc3e17427f844ee74e5c09b17b83ad6e8fc7360f5c7c3e4e1939e77a6374bee57d1fa6b2322b11ad56ad0398302de9b26d6fbfe414aa416bff141fad9d4af6aea19322e47595e342cd377403f417dfd396ab5f151095a5535f51cbc34a40ce9648927b7d1d72ab9daf253e31daf"},{"name":"transactions_root","type":"string","example":"0xe4c7bf3aff7ad07f9e80d57f7189f0252592fee6321c2a9bd9b09b6ce0690d27"},{"name":"state_root","type":"string","example":"0x49e3bfe7b618e27fde8fa08884803a8458b502c6534af69873a3cc926a7c724b"},{"name":"receipts_root","type":"string","example":"0x7cf43d7e837284f036cf92c56973f5e27bdd253ca46168fa195a6b07fa719f23"},{"name":"miner","type":"string","description":"The address of the miner","example":"0xea674fdde714fd979de3edf0f56aa9716b898ec8"},{"name":"difficulty","type":"string","description":"The difficulty of the block","example":"7253857437305950"},{"name":"total_difficulty","type":"string","description":"The total difficulty","example":"24325637817906576196890"},{"name":"size","type":"string","description":"The block size","example":"61271"},{"name":"extra_data","type":"string","example":"0x65746865726d696e652d6575726f70652d7765737433"},{"name":"gas_limit","type":"string","description":"The gas limit","example":"14977947"},{"name":"gas_used","type":"string","description":"The gas used","example":"14964688"},{"name":"transaction_count","type":"string","description":"The number of transactions in the block","example":"252"},{"name":"transactions","type":"object","description":"The transactions in the block","fields":[{"name":"hash","type":"string","description":"The hash of the transaction","example":"0x1ed85b3757a6d31d01a4d6677fc52fd3911d649a0af21fe5ca3f886b153773ed"},{"name":"nonce","type":"string","description":"The nonce","example":"1848059"},{"name":"transaction_index","type":"string","example":"108"},{"name":"from_address","type":"string","description":"The from address","example":"0x267be1c1d684f78cb4f6a176c4911b741e4ffdc0"},{"name":"from_address_label","type":"string","description":"The label of the from address","example":"Binance 1"},{"name":"to_address","type":"string","description":"The to address","example":"0x003dde3494f30d861d063232c6a8c04394b686ff"},{"name":"to_address_label","type":"string","description":"The label of the to address","example":"Binance 2"},{"name":"value","type":"string","description":"The value sent","example":"115580000000000000"},{"name":"gas","type":"string","example":"30000"},{"name":"gas_price","type":"string","description":"The gas price","example":"52500000000"},{"name":"input","type":"string","example":"0x"},{"name":"receipt_cumulative_gas_used","type":"string","example":"4923073"},{"name":"receipt_gas_used","type":"string","example":"21000"},{"name":"receipt_contract_address","type":"string","example":null},{"name":"receipt_root","type":"string","example":null},{"name":"receipt_status","type":"string","example":"1"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-05-07T11:08:35.000Z"},{"name":"block_number","type":"string","description":"The block number","example":"12386788"},{"name":"block_hash","type":"string","description":"The hash of the block","example":"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"},{"name":"logs","type":"object","description":"The logs of the transaction","fields":[{"name":"log_index","type":"string","example":"273"},{"name":"transaction_hash","type":"string","description":"The hash of the transaction","example":"0xdd9006489e46670e0e85d1fb88823099e7f596b08aeaac023e9da0851f26fdd5"},{"name":"transaction_index","type":"string","example":"204"},{"name":"address","type":"string","description":"The address of the contract","example":"0x3105d328c66d8d55092358cf595d54608178e9b5"},{"name":"data","type":"string","description":"The data of the log","example":"0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"},{"name":"topic0","type":"string","example":"0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"},{"name":"topic1","type":"string","example":"0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"},{"name":"topic2","type":"string","example":"0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"},{"name":"topic3","type":"string","example":null},{"name":"block_timestamp","type":"string","description":"The timestamp of the block","example":"2021-05-07T11:08:35.000Z"},{"name":"block_number","type":"string","description":"The block number","example":"12386788"},{"name":"block_hash","type":"string","description":"The hash of the block","example":"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"}]},{"name":"internal_transactions","type":"object","description":"The internal transactions of the transaction","fields":[{"name":"transaction_hash","type":"string","description":"The hash of the transaction","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"block_number","type":"string","description":"The block number","example":12526958},{"name":"block_hash","type":"string","description":"The block hash","example":"0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"},{"name":"type","type":"string","description":"Call type","example":"CALL"},{"name":"from","type":"string","description":"The sender","example":"0xd4a3BebD824189481FC45363602b83C9c7e9cbDf"},{"name":"to","type":"string","description":"The recipient","example":"0xa71db868318f0a0bae9411347cd4a6fa23d8d4ef"},{"name":"value","type":"string","description":"The value that was transfered (in wei)","example":"650000000000000000"},{"name":"gas","type":"string","description":"The gas of the transaction","example":"6721975"},{"name":"gas_used","type":"string","description":"The used gas","example":"6721975"},{"name":"input","type":"string","description":"The input","example":"0x"},{"name":"output","type":"string","description":"The output","example":"0x"}]}]}]}}]},"getDateToBlock":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get block by date","description":"Get the closest block given the date.","method":"GET","path":"/dateToBlock","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"date","description":"Unix date in milliseconds or a datestring (format in seconds or datestring accepted by momentjs)","required":true,"type":"string"}],"responses":[{"status":"200","description":"Returns the block number and corresponding date and timestamp","body":{"type":"object","fields":[{"name":"date","type":"string","description":"The date of the block","example":"2020-01-01T00:00:00+00:00"},{"name":"block","type":"number","description":"The block number","example":9193266},{"name":"timestamp","type":"number","description":"The timestamp of the block","example":1577836811},{"name":"block_timestamp","type":"string","description":"The timestamp of the block","example":"2019-12-31T23:59:45.000Z"},{"name":"hash","type":"string","description":"The block hash","example":"0x9b559aef7ea858608c2e554246fe4a24287e7aeeb976848df2b9a2531f4b9171"},{"name":"parent_hash","type":"string","description":"The block hash of the parent block","example":"0x011d1fc45839de975cc55d758943f9f1d204f80a90eb631f3bf064b80d53e045"}]}}]},"getContractLogs":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get logs by contract","description":"Get the logs for a contract.","method":"GET","path":"/:address/logs","pathParams":[{"name":"address","description":"The address of the contract","required":true,"example":"0xb47e3cd837dDF8e4c57F05d70Ab865de6e193BBB","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"block_number","description":"The block number\n* Provide the param 'block_numer' or ('from_block' and / or 'to_block')\n* If 'block_numer' is provided in combination with 'from_block' and / or 'to_block', 'block_number' will will be used\n","required":false,"type":"string"},{"name":"from_block","description":"The minimum block number from which to get the logs\n* Provide the param 'block_numer' or ('from_block' and / or 'to_block')\n* If 'block_numer' is provided in combination with 'from_block' and / or 'to_block', 'block_number' will will be used\n","required":false,"type":"string"},{"name":"to_block","description":"The maximum block number from which to get the logs\n* Provide the param 'block_numer' or ('from_block' and / or 'to_block')\n* If 'block_numer' is provided in combination with 'from_block' and / or 'to_block', 'block_number' will will be used\n","required":false,"type":"string"},{"name":"from_date","description":"The start date from which to get the logs (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n* If 'from_date' and the block params are provided, the block params will be used. Please refer to the blocks params sections (block_number,from_block and to_block) on how to use them\n","required":false,"type":"string"},{"name":"to_date","description":"Get the logs up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n* If 'to_date' and the block params are provided, the block params will be used. Please refer to the blocks params sections (block_number,from_block and to_block) on how to use them\n","required":false,"type":"string"},{"name":"topic0","description":"topic0","required":true,"type":"string"},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"order","description":"The order of the result, in ascending (ASC) or descending (DESC)","required":false,"example":"DESC","type":"string","enum":["ASC","DESC"]},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"}],"responses":[{"status":"200","description":"Returns the logs for an address","body":{"type":"object","fields":[{"name":"page","type":"number","description":"The current page of the result","example":"1"},{"name":"page_size","type":"number","description":"The number of results per page","example":"100"},{"name":"cursor","type":"string","description":"The cursor to get to the next page"},{"name":"result","type":"object","fields":[{"name":"transaction_hash","type":"string","description":"The transaction hash","example":"0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"},{"name":"address","type":"string","description":"The address of the contract","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"block_timestamp","type":"string","description":"The block timestamp","example":"2021-04-02T10:07:54.000Z"},{"name":"block_number","type":"string","description":"The block number","example":12526958},{"name":"block_hash","type":"string","description":"The block hash","example":"0x0372c302e3c52e8f2e15d155e2c545e6d802e479236564af052759253b20fd86"},{"name":"data","type":"string","description":"The data of the log","example":"0x00000000000000000000000000000000000000000000000de05239bccd4d537400000000000000000000000000024dbc80a9f80e3d5fc0a0ee30e2693781a443"},{"name":"topic0","type":"string","example":"0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a"},{"name":"topic1","type":"string","example":"0x000000000000000000000000031002d15b0d0cd7c9129d6f644446368deae391"},{"name":"topic2","type":"string","example":"0x000000000000000000000000d25943be09f968ba740e0782a34e710100defae9"},{"name":"topic3","type":"string","example":null},{"name":"transaction_index","type":"number","description":"The Transaction index of the log within the block","example":12},{"name":"log_index","type":"number","description":"The log index of the log within the block","example":15}]}]}}]},"getContractEvents":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get events by contract","description":"Get events for a contract ordered by block number in descending order. [Try it with Swagger](https://deep-index.moralis.io/api-docs-2.1/#/Events/getContractEvents).","method":"POST","path":"/:address/events","pathParams":[{"name":"address","description":"The address of the contract","required":true,"type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"from_block","description":"The minimum block number from which to get the logs\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"number"},{"name":"to_block","description":"The maximum block number from which to get the logs.\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","required":false,"type":"number"},{"name":"from_date","description":"The start date from which to get the logs (format in seconds or datestring accepted by momentjs)\n* Provide the param 'from_block' or 'from_date'\n* If 'from_date' and 'from_block' are provided, 'from_block' will be used.\n","required":false,"type":"string"},{"name":"to_date","description":"Get the logs up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","type":"string"},{"name":"topic","description":"The topic of the event","required":true,"type":"string"},{"name":"offset","description":"offset","required":false,"type":"number"},{"name":"limit","description":"The desired page size of the result.","required":false,"type":"number"},{"name":"order","description":"The order of the result, in ascending (ASC) or descending (DESC)","required":false,"example":"DESC","type":"string","enum":["ASC","DESC"]},{"name":"cursor","description":"The cursor returned in the previous response (used for getting the next page).","type":"string"}],"bodyParam":{"required":true,"description":"ABI of the specific event","type":"json"},"responses":[{"status":"200","description":"Returns a collection of events by topic"}]},"runContractFunction":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Run contract function","description":"Run a given function of a contract ABI and retrieve readonly data. [Try it with Swagger](https://deep-index.moralis.io/api-docs-2.1/#/Utils/runContractFunction).","method":"POST","path":"/:address/function","pathParams":[{"name":"address","description":"The address of the contract","required":true,"type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"function_name","description":"The function name of the contract","required":true,"type":"string"}],"bodyParam":{"required":true,"description":"Body","type":"object","fields":[{"name":"abi","type":"array","description":"The contract ABI","example":[],"field":{"type":"object"}},{"name":"params","type":"object","description":"The params for the given function","example":{},"fields":[]}]},"responses":[{"status":"200","description":"Returns response of the function executed"}]},"web3ApiVersion":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get API version","description":"Get the current version of the Moralis Web3 API.","method":"GET","path":"/web3/version","pathParams":[],"queryParams":[],"responses":[{"status":"200","description":"Get the current version of the Moralis Web3 API.","body":{"type":"object","fields":[{"name":"version","type":"string","description":"The version of the API","example":"1.0.0"}]}}]},"endpointWeights":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get weights of endpoints","description":"Get the cost and rate limit for each API endpoint.","method":"GET","path":"/info/endpointWeights","pathParams":[],"queryParams":[],"responses":[{"status":"200","description":"The cost and rate limit for each API endpoint."}]},"resolveAddress":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"ENS lookup by address","description":"Reverse resolve a given ETH address to its ENS domain.","method":"GET","path":"/resolve/:address/reverse","pathParams":[{"name":"address","description":"The address to be resolved","required":true,"example":"0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045","type":"string"}],"queryParams":[],"responses":[{"status":"200","description":"Returns an ENS","body":{"type":"object","fields":[{"name":"name","type":"string","description":"Resolved ENS address","example":"Vitalik.eth"}]}}]},"resolveDomain":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Resolve Unstoppable domain","description":"Resolve a specific Unstoppable domain to its address.","method":"GET","path":"/resolve/:domain","pathParams":[{"name":"domain","description":"The domain to be resolved","required":true,"example":"brad.crypto","type":"string"}],"queryParams":[{"name":"currency","description":"The currency to query","required":false,"example":"eth","type":"string"}],"responses":[{"status":"200","description":"Returns an address","body":{"type":"object","fields":[{"name":"address","type":"string","description":"Resolved domain address","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"}]}},{"status":"404","description":"Returns an address"}]},"resolveAddressToDomain":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Resolve Address to Unstoppable domain","description":"Resolve a specific address to its Unstoppable domain","method":"GET","path":"/resolve/:address/domain","pathParams":[{"name":"address","description":"The address to be resolved","required":true,"example":"0x94ef5300cbc0aa600a821ccbc561b057e456ab23","type":"string"}],"queryParams":[{"name":"currency","description":"The currency to query","required":false,"example":"eth","type":"string"}],"responses":[{"status":"200","description":"Returns an unstoppable domain","body":{"type":"object","fields":[{"name":"name","type":"string","description":"Resolved unstoppable domain address","example":"sandy.nft"}]}},{"status":"404","description":"Returns an unstoppable domain"}]},"resolveENSDomain":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"ENS lookup by domain","description":"Resolve a specific ENS domain to its address.","method":"GET","path":"/resolve/ens/:domain","pathParams":[{"name":"domain","description":"The domain to be resolved","required":true,"example":"vitalik.eth","type":"string"}],"queryParams":[],"responses":[{"status":"200","description":"Returns an address","body":{"type":"object","fields":[{"name":"address","type":"string","description":"Resolved domain address","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"}]}},{"status":"404","description":"Returns an address"}]},"getPairReserves":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get DEX token pair reserves","description":"Get the liquidity reserves for a given pair address. Only Uniswap V2 based exchanges supported at the moment.","method":"GET","path":"/:pair_address/reserves","pathParams":[{"name":"pair_address","description":"The liquidity pair address","required":true,"example":"0xa2107fa5b38d9bbd2c461d6edf11b11a50f6b974","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"to_block","description":"The block number to get the reserves from","required":false,"type":"string"},{"name":"to_date","description":"Get the reserves up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","type":"string"}],"responses":[{"status":"200","description":"Returns the pair reserves"}]},"getPairAddress":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get DEX token pair address","description":"Fetch the pair data of the provided token0+token1 combination.\nThe token0 and token1 options are interchangable (ie. there is no different outcome in \"token0=WETH and token1=USDT\" or \"token0=USDT and token1=WETH\")\n","method":"GET","path":"/:token0_address/:token1_address/pairAddress","pathParams":[{"name":"token0_address","description":"The token0 address","required":true,"example":"0x2b591e99afe9f32eaa6214f7b7629768c40eeb39","type":"string"},{"name":"token1_address","description":"The token1 address","required":true,"example":"0xdac17f958d2ee523a2206206994597c13d831ec7","type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]},{"name":"to_block","description":"The block number to get the reserves from","required":false,"type":"string"},{"name":"to_date","description":"Get the reserves up to this date (format in seconds or datestring accepted by momentjs)\n* Provide the param 'to_block' or 'to_date'\n* If 'to_date' and 'to_block' are provided, 'to_block' will be used.\n","type":"string"},{"name":"exchange","description":"The factory name or address of the token exchange","required":true,"example":"uniswapv2","type":"string"}],"responses":[{"status":"200","description":"Returns the pair address of the two tokens.","body":{"type":"object","fields":[{"name":"token0","type":"object","fields":[{"name":"address","type":"string","example":"0x2b591e99afe9f32eaa6214f7b7629768c40eeb39"},{"name":"name","type":"string","example":"HEX"},{"name":"symbol","type":"string","example":"HEX"},{"name":"decimals","type":"string","example":9},{"name":"logo","type":"string","example":"https://cdn.moralis.io/eth/0x2b591e99afe9f32eaa6214f7b7629768c40eeb39.png"},{"name":"logo_hash","type":"string","example":"b3bd1b5512965d7b6aeee903dcc6d28b116d58c788eb41e9c1690baed878beaa"},{"name":"thumbnail","type":"string","example":"https://cdn.moralis.io/eth/0x2b591e99afe9f32eaa6214f7b7629768c40eeb39_thumb.png"},{"name":"block_number","type":"string","example":14836562},{"name":"validated","type":"number","example":0},{"name":"created_at","type":"string","example":"2022-01-20T09:39:55.818Z"}]},{"name":"token1","type":"object","fields":[{"name":"address","type":"string","example":"0xdac17f958d2ee523a2206206994597c13d831ec7"},{"name":"name","type":"string","example":"Tether USD"},{"name":"symbol","type":"string","example":"USDT"},{"name":"decimals","type":"string","example":6},{"name":"logo","type":"string","example":"https://cdn.moralis.io/eth/0xdac17f958d2ee523a2206206994597c13d831ec7.png"},{"name":"logo_hash","type":"string","example":"ee7aa2cdf100649a3521a082116258e862e6971261a39b5cd4e4354fcccbc54d"},{"name":"thumbnail","type":"string","example":"https://cdn.moralis.io/eth/0xdac17f958d2ee523a2206206994597c13d831ec7_thumb.png"},{"name":"block_number","type":"string","example":"4638568"},{"name":"validated","type":"number","example":1},{"name":"created_at","type":"string","example":"2022-01-20T09:39:55.818Z"}]},{"name":"pairAddress","type":"string","example":"0xbbb9bf440d0f686487925fef3b0a0f9aa67753f6"}]}}]},"uploadFolder":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Upload folder to IPFS","description":"Upload multiple files to IPFS and place them in a folder directory.","method":"POST","path":"/ipfs/uploadFolder","pathParams":[],"queryParams":[],"bodyParam":{"required":false,"description":"Array of JSON and Base64 Supported","type":"array","field":{"type":"object","fields":[{"name":"path","type":"string","description":"Path to the file","example":"moralis/logo.jpg"},{"name":"content","type":"string","description":"Base64 or JSON","example":"iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAApgAAAKYB3X3"}]}},"responses":[{"status":"200","description":"Returns the path to the uploaded files"}]},"getTopERC20TokensByMarketCap":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get top ERC20 tokens","description":"Get the top ERC20 tokens by market cap","method":"GET","path":"/market-data/erc20s/top-tokens","pathParams":[],"queryParams":[],"responses":[{"status":"200","description":"Returns the top ERC20 tokens by market cap","body":{"type":"array"}}]},"getTopERC20TokensByPriceMovers":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get top ERC20 tokens","description":"Get the top ERC20 tokens by price change","method":"GET","path":"/market-data/erc20s/top-movers","pathParams":[],"queryParams":[],"responses":[{"status":"200","description":"Returns an a list of ERC20 tokens with their price change","body":{"type":"object","fields":[{"name":"gainers","type":"array","items":{"required":["rank","token_name","token_symbol","token_logo","token_decimals","contract_address","price_usd","price_24h_percent_change","price_7d_percent_change","market_cap_usd"],"properties":{"rank":{"type":"integer","description":"The rank","example":1},"token_name":{"type":"string","description":"The token name","example":"Wrapped Ether"},"token_symbol":{"type":"string","description":"The token symbol","example":"WETH"},"token_logo":{"type":"string","description":"The token image","example":"https://assets.coingecko.com/coins/images/2518/large/weth.png?1595348880"},"token_decimals":{"type":"string","description":"The token decimals","example":"18"},"contract_address":{"type":"string","description":"The contract address","example":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},"price_usd":{"type":"string","description":"The price in USD","example":"0.0285"},"price_24h_percent_change":{"type":"string","description":"The price change in the last 24h","example":"0.0285"},"price_7d_percent_change":{"type":"string","description":"The price change in the last 7d","example":"0.0285"},"market_cap_usd":{"type":"string","description":"The market cap in USD","example":"0.0285"}}}},{"name":"losers","type":"array","items":{"required":["rank","token_name","token_symbol","token_logo","token_decimals","contract_address","price_usd","price_24h_percent_change","price_7d_percent_change","market_cap_usd"],"properties":{"rank":{"type":"integer","description":"The rank","example":1},"token_name":{"type":"string","description":"The token name","example":"Wrapped Ether"},"token_symbol":{"type":"string","description":"The token symbol","example":"WETH"},"token_logo":{"type":"string","description":"The token image","example":"https://assets.coingecko.com/coins/images/2518/large/weth.png?1595348880"},"token_decimals":{"type":"string","description":"The token decimals","example":"18"},"contract_address":{"type":"string","description":"The contract address","example":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},"price_usd":{"type":"string","description":"The price in USD","example":"0.0285"},"price_24h_percent_change":{"type":"string","description":"The price change in the last 24h","example":"0.0285"},"price_7d_percent_change":{"type":"string","description":"The price change in the last 7d","example":"0.0285"},"market_cap_usd":{"type":"string","description":"The market cap in USD","example":"0.0285"}}}}]}}]},"getTopNFTCollectionsByMarketCap":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get top NFT collections","description":"Get the top NFT collections by market cap","method":"GET","path":"/market-data/nfts/top-collections","pathParams":[],"queryParams":[],"responses":[{"status":"200","description":"Returns the top NFT collections by market cap","body":{"type":"array"}}]},"getHottestNFTCollectionsByTradingVolume":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get hottest NFT collections","description":"Get the hottest NFT collections by trading volume","method":"GET","path":"/market-data/nfts/hottest-collections","pathParams":[],"queryParams":[],"responses":[{"status":"200","description":"Returns the hottest NFT collections by trading volume","body":{"type":"array"}}]},"reviewContracts":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Review contracts","description":"Review contracts as spam or not spam","method":"POST","path":"/contracts-review","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]}],"bodyParam":{"required":true,"description":"Body","type":"object","fields":[{"name":"contracts","type":"object","description":"The contracts to be reported","example":[{"contract_address":"0xa4991609c508b6d4fb7156426db0bd49fe298bd8","report_type":"spam","contract_type":"ERC20","reason":"The contract contains shady code"}],"fields":[{"name":"contract_address","type":"string","description":"The contract address","example":"0x06012c8cf97bead5deae237070f9587f8e7a266d"},{"name":"reason","type":"string","description":"The reason for the contract being spam","example":100},{"name":"report_type","type":"string","description":"This can be spam or not_spam","example":"spam"},{"name":"contract_type","type":"string","description":"This can be ERC20, or NFT","example":"ERC20"}]}]},"responses":[{"status":"200","description":"Returns a message acknowledging the report"}]},"getWalletActiveChains":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get the wallet active chains","description":"Get the active chains for a wallet address.","method":"GET","path":"/wallets/:address/chains","pathParams":[{"name":"address","description":"Wallet address","required":true,"type":"string"}],"queryParams":[{"name":"chains","description":"The chains to query","required":false,"type":"array","fields":{"type":"string","example":"eth","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]}}],"responses":[{"status":"200","description":"Returns the active chains for the wallet address.","body":{"type":"object","fields":[{"name":"address","type":"string","description":"The address of the wallet","example":"0x057Ec652A4F150f7FF94f089A38008f49a0DF88e"},{"name":"active_chains","type":"object","fields":[{"name":"chain","type":"string","description":"The chain name","example":"eth"},{"name":"chain_id","type":"string","description":"The chain id","example":"0x1"},{"name":"first_transaction","required":["block_number","block_timestamp"],"properties":{"block_number":{"type":"string","description":"The block number","example":"123456789"},"block_timestamp":{"type":"string","description":"The block timestamp","example":"2022-08-23T20:58:31.000Z"},"transaction_hash":{"type":"string","description":"The hash of the transaction","example":"0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"}}},{"name":"last_transaction","required":["block_number","block_timestamp"],"properties":{"block_number":{"type":"string","description":"The block number","example":"123456789"},"block_timestamp":{"type":"string","description":"The block timestamp","example":"2022-08-23T20:58:31.000Z"},"transaction_hash":{"type":"string","description":"The hash of the transaction","example":"0x2d30ca6f024dbc1307ac8a1a44ca27de6f797ec22ef20627a1307243b0ab7d09"}}}]}]}}]},"getWalletStats":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get the wallet stats","description":"Get the stats for a wallet address.","method":"GET","path":"/wallets/:address/stats","pathParams":[{"name":"address","description":"Wallet address","required":true,"type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]}],"responses":[{"status":"200","description":"Returns the stats for the wallet address.","body":{"type":"object","fields":[{"name":"nfts","type":"string","description":"The number of NFTs owned by a wallet","example":"100"},{"name":"collections","type":"string","description":"The number of unique NFT collections owned by a wallet","example":"10"},{"name":"transactions","type":"object","description":"Transaction stats","fields":[{"name":"total","type":"string","description":"The number of transactions sent by a wallet","example":"1000"}]},{"name":"nft_transfers","type":"object","description":"NFT transfer stats","fields":[{"name":"total","type":"string","description":"The number of NFT transfers of a wallet","example":"1000"}]},{"name":"token_transfers","type":"object","description":"Token transfer stats","fields":[{"name":"total","type":"string","description":"The number of ERC20 token transfers of a wallet","example":"1000"}]}]}}]},"getNFTCollectionStats":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get the nft collection stats","description":"Get the stats for a nft collection address.","method":"GET","path":"/nft/:address/stats","pathParams":[{"name":"address","description":"The address of the NFT collection","required":true,"type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]}],"responses":[{"status":"200","description":"Returns the stats for the nft collection address.","body":{"type":"object","fields":[{"name":"total_tokens","type":"string","description":"The number of tokens in the collection","example":"100"},{"name":"owners","type":"object","description":"NFT collection owner stats","fields":[{"name":"current","type":"string","description":"The number of current owners of the collection","example":"1000"}]},{"name":"transfers","type":"object","description":"NFT collection transfer stats","fields":[{"name":"total","type":"string","description":"The number of transfers of the collection","example":"1000"}]}]}}]},"getNFTTokenStats":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get the nft token stats","description":"Get the stats for a nft token","method":"GET","path":"/nft/:address/:token_id/stats","pathParams":[{"name":"address","description":"The address of the NFT collection","required":true,"type":"string"},{"name":"token_id","description":"The token id of the NFT collection","required":true,"type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]}],"responses":[{"status":"200","description":"Returns the stats for the nft token.","body":{"type":"object","fields":[{"name":"owners","type":"object","description":"NFT token owner stats","fields":[{"name":"current","type":"string","description":"The number of current owners of the nft token","example":"1000"}]},{"name":"transfers","type":"object","description":"NFT token transfer stats","fields":[{"name":"total","type":"string","description":"The number of transfers of the nft token","example":"1000"}]}]}}]},"getTokenStats":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get the erc20 token stats","description":"Get the stats for a erc20 token","method":"GET","path":"/erc20/:address/stats","pathParams":[{"name":"address","description":"The address of the erc20 token","required":true,"type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]}],"responses":[{"status":"200","description":"Returns the stats for the erc20 token.","body":{"type":"object","fields":[{"name":"transfers","type":"object","description":"ERC20 Token transfer stats","fields":[{"name":"total","type":"string","description":"The number of transfers of the token","example":"1000"}]}]}}]},"getBlockStats":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get the block stats","description":"Get the stats for a block","method":"GET","path":"/block/:block_number_or_hash/stats","pathParams":[{"name":"block_number_or_hash","description":"The block number or hash","required":true,"type":"string"}],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","0x1","goerli","0x5","sepolia","0xaa36a7","polygon","0x89","mumbai","0x13881","bsc","0x38","bsc testnet","0x61","avalanche","0xa86a","fantom","0xfa","palm","0x2a15c308d","cronos","0x19","arbitrum","0xa4b1","chiliz","0x15b38","chiliz testnet","0x15b32","gnosis","0x64","gnosis testnet","0x27d8","base","0x2105","base testnet","0x14a33","optimism","0xa"]}],"responses":[{"status":"200","description":"Returns the stats for the block.","body":{"type":"object","fields":[{"name":"transactions","type":"object","description":"Transaction stats","fields":[{"name":"total","type":"string","description":"The number of transactions made in a block","example":"7"}]},{"name":"nft_transfers","type":"object","description":"NFT transfer stats","fields":[{"name":"total","type":"string","description":"The number of NFT transfers made in a block","example":"0"}]}]}}]},"getRisingLiquidityTokens":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get tokens with rising liquidity","description":"Get tokens with rising liquidity","method":"GET","path":"/discovery/tokens/rising-liquidity","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","mainnet","0x1","matic","0x89","polygon","bsc","binance","0x38","fantom","ftm","0xfa","arbitrum","0xa4b1","optimism","0xa","pulsechain","0x171"]},{"name":"one_month_liquidity_change_usd","description":"The minimum one month liquidity change in usd of a token","required":false,"example":500000,"type":"number"},{"name":"min_market_cap","description":"The minimum market cap in usd of a token","required":false,"example":100000000,"type":"number"},{"name":"twitter_followers","description":"The minimum twitter followers of a token","required":false,"example":10000,"type":"number"},{"name":"one_month_volume_change_usd","description":"The minimum one month volume change in usd of a token","required":false,"example":10000,"type":"number"},{"name":"security_score","description":"The minimum security score of a token","required":false,"example":70,"type":"number"},{"name":"one_month_price_percent_change_usd","description":"The minimum one month price percent change of a token","required":false,"example":0,"type":"number"}],"responses":[{"status":"200","description":"Returns the token details","body":{"type":"array"}}]},"getBuyingPressureTokens":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get tokens with buying pressure","description":"Get tokens with buying pressure","method":"GET","path":"/discovery/tokens/buying-pressure","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","mainnet","0x1","matic","0x89","polygon","bsc","binance","0x38","fantom","ftm","0xfa","arbitrum","0xa4b1","optimism","0xa","pulsechain","0x171"]},{"name":"one_month_net_volume_change_usd","description":"The minimum one month net volume change in usd of a token","required":false,"example":1000000,"type":"number"},{"name":"min_market_cap","description":"The minimum market cap in usd of a token","required":false,"example":100000000,"type":"number"},{"name":"twitter_followers","description":"The minimum twitter followers of a token","required":false,"example":10000,"type":"number"},{"name":"one_month_volume_change_usd","description":"The minimum one month volume change in usd of a token","required":false,"example":10000,"type":"number"},{"name":"security_score","description":"The minimum security score of a token","required":false,"example":70,"type":"number"},{"name":"one_month_price_percent_change_usd","description":"The minimum one month price percent change of a token","required":false,"example":0,"type":"number"}],"responses":[{"status":"200","description":"Returns the token details","body":{"type":"array"}}]},"getSolidPerformersTokens":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get tokens with solid performance","description":"Get tokens with solid performance","method":"GET","path":"/discovery/tokens/solid-performers","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","mainnet","0x1","matic","0x89","polygon","bsc","binance","0x38","fantom","ftm","0xfa","arbitrum","0xa4b1","optimism","0xa","pulsechain","0x171"]},{"name":"one_month_net_volume_change_usd","description":"The minimum one month net volume change in usd of a token","required":false,"example":100000,"type":"number"},{"name":"one_week_net_volume_change_usd","description":"The minimum one week net volume change in usd of a token","required":false,"example":10000,"type":"number"},{"name":"one_day_net_volume_change_usd","description":"The minimum one day net volume change in usd of a token","required":false,"example":0,"type":"number"},{"name":"one_month_volume_change_usd","description":"The minimum one month volume change in usd of a token","required":false,"example":10000,"type":"number"},{"name":"security_score","description":"The minimum security score of a token","required":false,"example":80,"type":"number"},{"name":"one_month_price_percent_change_usd","description":"The minimum one month price percent change of a token","required":false,"example":0,"type":"number"}],"responses":[{"status":"200","description":"Returns the token details","body":{"type":"array"}}]},"getExperiencedBuyersTokens":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get tokens with experienced buyers","description":"Get tokens with experienced buyers","method":"GET","path":"/discovery/tokens/experienced-buyers","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","mainnet","0x1","matic","0x89","polygon","bsc","binance","0x38","fantom","ftm","0xfa","arbitrum","0xa4b1","optimism","0xa","pulsechain","0x171"]},{"name":"one_week_experienced_net_buyers_change","description":"The minimum one week experienced buyers change of a token","required":false,"example":10,"type":"number"},{"name":"min_market_cap","description":"The minimum market cap in usd of a token","required":false,"example":100000000,"type":"number"},{"name":"twitter_followers","description":"The minimum twitter followers of a token","required":false,"example":10000,"type":"number"},{"name":"one_month_volume_change_usd","description":"The minimum one month volume change in usd of a token","required":false,"example":10000,"type":"number"},{"name":"security_score","description":"The minimum security score of a token","required":false,"example":70,"type":"number"},{"name":"one_month_price_percent_change_usd","description":"The minimum one month price percent change of a token","required":false,"example":0,"type":"number"}],"responses":[{"status":"200","description":"Returns the token details","body":{"type":"array"}}]},"getRiskyBetsTokens":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get tokens with risky bets","description":"Get tokens with risky bets","method":"GET","path":"/discovery/tokens/risky-bets","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","mainnet","0x1","matic","0x89","polygon","bsc","binance","0x38","fantom","ftm","0xfa","arbitrum","0xa4b1","optimism","0xa","pulsechain","0x171"]},{"name":"max_market_cap","description":"The maximum market cap in usd of a token","required":false,"example":10000000,"type":"number"},{"name":"one_week_holders_change","description":"The minimum one week holders change of a token","required":false,"example":25,"type":"number"},{"name":"one_week_net_volume_change_usd","description":"The minimum one week net volume change in usd of a token","required":false,"example":500,"type":"number"},{"name":"one_month_volume_change_usd","description":"The minimum one month volume change in usd of a token","required":false,"example":10000,"type":"number"},{"name":"security_score","description":"The minimum security score of a token","required":false,"example":70,"type":"number"},{"name":"one_month_price_percent_change_usd","description":"The minimum one month price percent change of a token","required":false,"example":0,"type":"number"}],"responses":[{"status":"200","description":"Returns the token details","body":{"type":"array"}}]},"getBlueChipTokens":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get tokens with blue chip","description":"Get tokens with blue chip","method":"GET","path":"/discovery/tokens/blue-chip","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":false,"example":"eth","type":"string","enum":["eth","mainnet","0x1","matic","0x89","polygon","bsc","binance","0x38","fantom","ftm","0xfa","arbitrum","0xa4b1","optimism","0xa","pulsechain","0x171"]},{"name":"min_market_cap","description":"The minimum market cap in usd of a token","required":false,"example":250000000,"type":"number"},{"name":"one_week_price_percent_change_usd","description":"The minimum one week price percentage change of a token","required":false,"example":2,"type":"number"},{"name":"one_day_price_percent_change_usd","description":"The minimum one day price percentage change of a token","required":false,"example":2,"type":"number"},{"name":"one_month_volume_change_usd","description":"The minimum one month volume change in usd of a token","required":false,"example":10000,"type":"number"},{"name":"security_score","description":"The minimum security score of a token","required":false,"example":70,"type":"number"},{"name":"one_month_price_percent_change_usd","description":"The minimum one month price percent change of a token","required":false,"example":0,"type":"number"}],"responses":[{"status":"200","description":"Returns the token details","body":{"type":"array"}}]},"getDiscoveryToken":{"apiHost":"https://deep-index.moralis.io/api/v2.2","summary":"Get token details","description":"Get token details","method":"GET","path":"/discovery/token","pathParams":[],"queryParams":[{"name":"chain","description":"The chain to query","required":true,"example":"eth","type":"string","enum":["eth","mainnet","0x1","matic","0x89","polygon","bsc","binance","0x38","fantom","ftm","0xfa","arbitrum","0xa4b1","optimism","0xa","pulsechain","0x171"]},{"name":"token_address","description":"The address of the token","required":true,"example":"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2","type":"string"}],"responses":[{"status":"200","description":"Returns the token details","body":{"type":"object"}}]}},"auth":{"requestChallengeEvm":{"apiHost":"https://authapi.moralis.io","summary":"Request EVM challenge","method":"POST","path":"/challenge/request/evm","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"description":"Request EVM challenge message.","type":"object","fields":[{"name":"domain","type":"string","description":"RFC 4501 dns authority that is requesting the signing.","example":"defi.finance"},{"name":"statement","type":"string","description":"Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.","example":"Please confirm"},{"name":"uri","type":"string","description":"RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).","example":"https://defi.finance/"},{"name":"expirationTime","type":"string","description":"ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.","example":"2020-01-01T00:00:00.000Z"},{"name":"notBefore","type":"string","description":"ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.","example":"2020-01-01T00:00:00.000Z"},{"name":"resources","type":"array","description":"List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by new lines.","example":["https://docs.moralis.io/"],"field":{"type":"string"}},{"name":"timeout","type":"number","description":"Time in seconds before the challenge is expired","example":15},{"name":"chainId","type":"string","description":"EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.","example":1},{"name":"address","type":"string","description":"Ethereum address performing the signing conformant to capitalization encoded checksum specified in EIP-55 where applicable.","example":"0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B"}]},"responses":[{"status":"201","description":"The back channel challenge containing the id to store on the api and the message to be signed by the user","body":{"type":"object","fields":[{"name":"id","type":"string","description":"17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.","example":"fRyt67D3eRss3RrXa"},{"name":"profileId","type":"string","description":"Unique identifier with a length of 66 characters","example":"0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"},{"name":"message","type":"string","description":"Message that needs to be signed by the end user","example":"defi.finance wants you to sign in with your Ethereum account:\n0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B\n\nPlease confirm\n\nURI: https://defi.finance/\nVersion: 1\nChain ID: 1\nNonce: DbU1DCTmdzR4lg3wi\nIssued At: 2022-06-12T12:15:31.290Z\nExpiration Time: 2020-01-01T00:00:00.000Z\nNot Before: 2020-01-01T00:00:00.000Z\nResources:\n- https://docs.moralis.io/"}]}}],"codeSamples":[{"language":"node","code":"import Moralis from 'moralis';\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  // Values set in the backend\n  const DOMAIN = 'defi.finance';\n  const STATEMENT = 'Please sign this message to confirm your identity.';\n  const URI = 'https://defi.finance';\n  const EXPIRATION_TIME = '2023-01-01T00:00:00.000Z';\n  const TIMEOUT = 15;\n\n  // Values provided by the user\n  const address = \"0xd8da6bf26964af9d7eed9e03e53415d37aa96045\";\n  const chain = \"0x1\";\n  const network = \"evm\";\n\n  const result = await Moralis.Auth.requestMessage({\n    address,\n    chain,\n    network,\n    domain: DOMAIN,\n    statement: STATEMENT,\n    uri: URI,\n    expirationTime: EXPIRATION_TIME,\n    timeout: TIMEOUT,\n  });\n} catch (e) {\n  console.error(e);\n}\n","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import auth\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"domain\": \"defi.finance\", \n    \"chainId\": \"1\", \n    \"address\": \"0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B\", \n    \"statement\": \"Please confirm\", \n    \"uri\": \"https://defi.finance/\", \n    \"expirationTime\": \"2020-01-01T00:00:00.000Z\", \n    \"notBefore\": \"2020-01-01T00:00:00.000Z\", \n    \"resources\": ['https://docs.moralis.io/'], \n    \"timeout\": 15, \n}\n\nresult = auth.challenge.request_challenge_evm(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n"}]},"verifyChallengeEvm":{"apiHost":"https://authapi.moralis.io","summary":"Verify EVM challenge","method":"POST","path":"/challenge/verify/evm","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"description":"Verify EVM challenge message.","type":"object","fields":[{"name":"message","type":"string","description":"Message that needs to be signed by the end user.","example":"defi.finance wants you to sign in with your Ethereum account:\n0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B\n\n\nURI: https://defi.finance\nVersion: 1\nChain ID: 1\nNonce: Px7Nh1RPzlCLwqgOb\nIssued At: 2022-11-30T10:20:00.262Z"},{"name":"signature","type":"string","description":"EIP-191 compliant signature signed by the Ethereum account address requesting authentication.","example":"0xa8f89a58bf9b433d3100f9e41ee35b5e31fb8c7cd62547acb113162ec6f2e4140207e2dfbd4e387e1801ebc7f08a9dd105ac1d22b2e2ff0df5fa8b6d9bdcfe491c"}]},"responses":[{"status":"201","description":"The token to be used to call the third party API from the client","body":{"type":"object","fields":[{"name":"id","type":"string","description":"17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.","example":"fRyt67D3eRss3RrX"},{"name":"domain","type":"string","description":"RFC 4501 dns authority that is requesting the signing.","example":"defi.finance"},{"name":"statement","type":"string","description":"Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.","example":"Please confirm"},{"name":"uri","type":"string","description":"RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).","example":"https://defi.finance/"},{"name":"expirationTime","type":"string","description":"ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.","example":"2020-01-01T00:00:00.000Z"},{"name":"notBefore","type":"string","description":"ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.","example":"2020-01-01T00:00:00.000Z"},{"name":"resources","type":"array","description":"List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by `\n- `.","example":["https://docs.moralis.io/"],"field":{"type":"string"}},{"name":"version","type":"string","description":"EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.","example":"1.0"},{"name":"nonce","type":"string","example":"0x1234567890abcdef0123456789abcdef1234567890abcdef"},{"name":"profileId","type":"string","description":"Unique identifier with a length of 66 characters","example":"0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"},{"name":"chainId","type":"string","description":"EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.","example":1},{"name":"address","type":"string","description":"Ethereum address performing the signing conformant to capitalization encoded checksum specified in EIP-55 where applicable.","example":"0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B"}]}}],"codeSamples":[{"language":"node","code":"import Moralis from 'moralis';\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  // Values provided by the user\n  const message = \"\";\n  const signature = \"\";\n  const network = \"evm\";\n\n  const verifiedData = Moralis.Auth.verify({\n    message: message,\n    signature: signature,\n    network: network,\n  });\n} catch (e) {\n  console.error(e);\n}\n","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import auth\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"message\": \"defi.finance wants you to sign in with your Ethereum account:<br/>0xAb5801a7D398351b8bE11C439e05C5B3259aeC9B<br/><br/><br/>URI: https://defi.finance<br/>Version: 1<br/>Chain ID: 1<br/>Nonce: Px7Nh1RPzlCLwqgOb<br/>Issued At: 2022-11-30T10:20:00.262Z\", \n    \"signature\": \"0xa8f89a58bf9b433d3100f9e41ee35b5e31fb8c7cd62547acb113162ec6f2e4140207e2dfbd4e387e1801ebc7f08a9dd105ac1d22b2e2ff0df5fa8b6d9bdcfe491c\", \n}\n\nresult = auth.challenge.verify_challenge_evm(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n"}]},"requestChallengeSolana":{"apiHost":"https://authapi.moralis.io","summary":"Request Solana challenge","method":"POST","path":"/challenge/request/solana","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"description":"Request Solana challenge message.","type":"object","fields":[{"name":"domain","type":"string","description":"RFC 4501 dns authority that is requesting the signing.","example":"defi.finance"},{"name":"statement","type":"string","description":"Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.","example":"Please confirm"},{"name":"uri","type":"string","description":"RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).","example":"https://defi.finance/"},{"name":"expirationTime","type":"string","description":"ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.","example":"2020-01-01T00:00:00.000Z"},{"name":"notBefore","type":"string","description":"ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.","example":"2020-01-01T00:00:00.000Z"},{"name":"resources","type":"array","description":"List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by new lines.","example":["https://docs.moralis.io/"],"field":{"type":"string"}},{"name":"timeout","type":"number","description":"Time in seconds before the challenge is expired","example":15},{"name":"network","type":"string","description":"The network where Contract Accounts must be resolved.","example":"mainnet"},{"name":"address","type":"string","description":"Solana address with a length of 32 - 44 characters that is used to perform the signing","example":"26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo"}]},"responses":[{"status":"201","description":"The back channel challenge containing the id to store on the api and the message to be signed by the user","body":{"type":"object","fields":[{"name":"id","type":"string","description":"17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.","example":"fRyt67D3eRss3RrXa"},{"name":"profileId","type":"string","description":"Unique identifier with a length of 66 characters","example":"0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"},{"name":"message","type":"string","description":"Message that needs to be signed by the end user","example":"defi.finance wants you to sign in with your Solana account:\n26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo\n\nI am a third party API\n\nURI: http://defi.finance\nVersion: 1\nNetwork: mainnet\nNonce: PYxxb9msdjVXsMQ9x\nIssued At: 2022-08-25T11:02:34.097Z\nExpiration Time: 2022-08-25T11:12:38.243Z\nResources:\n- https://docs.moralis.io/"}]}}],"codeSamples":[{"language":"node","code":"import Moralis from 'moralis';\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  // Values set in the backend\n  const DOMAIN = 'defi.finance';\n  const STATEMENT = 'Please sign this message to confirm your identity.';\n  const URI = 'https://defi.finance';\n  const EXPIRATION_TIME = '2023-01-01T00:00:00.000Z';\n  const TIMEOUT = 15;\n\n  // Values provided by the user\n  const address = '26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo';\n  const solNetwork = 'mainnet';\n  const network = 'solana';\n\n  const result = await Moralis.Auth.requestMessage({\n    address,\n    solNetwork,\n    network,\n    domain: DOMAIN,\n    statement: STATEMENT,\n    uri: URI,\n    expirationTime: EXPIRATION_TIME,\n    timeout: TIMEOUT,\n  });\n} catch (e) {\n  console.error(e);\n}\n","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import auth\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"domain\": \"defi.finance\", \n    \"network\": \"mainnet\", \n    \"address\": \"26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo\", \n    \"statement\": \"Please confirm\", \n    \"uri\": \"https://defi.finance/\", \n    \"expirationTime\": \"2020-01-01T00:00:00.000Z\", \n    \"notBefore\": \"2020-01-01T00:00:00.000Z\", \n    \"resources\": ['https://docs.moralis.io/'], \n    \"timeout\": 15, \n}\n\nresult = auth.challenge.request_challenge_solana(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n"}]},"verifyChallengeSolana":{"apiHost":"https://authapi.moralis.io","summary":"Verify Solana challenge","method":"POST","path":"/challenge/verify/solana","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"description":"Verify Solana challenge message.","type":"object","fields":[{"name":"message","type":"string","description":"Message that needs to be signed by the end user","example":"defi.finance wants you to sign in with your Solana account:\n26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo\n\nI am a third party API\n\nURI: http://defi.finance\nVersion: 1\nNetwork: mainnet\nNonce: PYxxb9msdjVXsMQ9x\nIssued At: 2022-08-25T11:02:34.097Z\nExpiration Time: 2022-08-25T11:12:38.243Z\nResources:\n- https://docs.moralis.io/"},{"name":"signature","type":"string","description":"Base58 signature that needs to be used to verify end user","example":"2pH9DqD5rve2qV4yBDshcAjWd2y8TqMx8BPb7f3KoNnuLEhE5JwjruYi4jaFaD4HN6wriLz2Vdr32kRBAJmHcyny"}]},"responses":[{"status":"201","description":"The token to be used to call the third party API from the client","body":{"type":"object","fields":[{"name":"id","type":"string","description":"17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.","example":"fRyt67D3eRss3RrX"},{"name":"domain","type":"string","description":"RFC 4501 dns authority that is requesting the signing.","example":"defi.finance"},{"name":"statement","type":"string","description":"Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.","example":"Please confirm"},{"name":"uri","type":"string","description":"RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).","example":"https://defi.finance/"},{"name":"expirationTime","type":"string","description":"ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.","example":"2020-01-01T00:00:00.000Z"},{"name":"notBefore","type":"string","description":"ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.","example":"2020-01-01T00:00:00.000Z"},{"name":"resources","type":"array","description":"List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by `\n- `.","example":["https://docs.moralis.io/"],"field":{"type":"string"}},{"name":"version","type":"string","description":"EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.","example":"1.0"},{"name":"nonce","type":"string","example":"0x1234567890abcdef0123456789abcdef1234567890abcdef"},{"name":"profileId","type":"string","description":"Unique identifier with a length of 66 characters","example":"0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"},{"name":"network","type":"string","description":"The network where Contract Accounts must be resolved.","example":"mainnet"},{"name":"address","type":"string","description":"Solana address with a length of 32 - 44 characters that is used to perform the signing","example":"26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo"}]}}],"codeSamples":[{"language":"node","code":"import Moralis from 'moralis';\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  // Values provided by the user\n  const message = \"\";\n  const signature = \"\";\n  const network = \"solana\";\n\n  const verifiedData = Moralis.Auth.verify({\n    message: message,\n    signature: signature,\n    network: network,\n  });\n} catch (e) {\n  console.error(e);\n}\n","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import auth\n\napi_key = \"YOUR_API_KEY\"\nbody = {\n    \"message\": \"defi.finance wants you to sign in with your Solana account:<br/>26qv4GCcx98RihuK3c4T6ozB3J7L6VwCuFVc7Ta2A3Uo<br/><br/>I am a third party API<br/><br/>URI: http://defi.finance<br/>Version: 1<br/>Network: mainnet<br/>Nonce: PYxxb9msdjVXsMQ9x<br/>Issued At: 2022-08-25T11:02:34.097Z<br/>Expiration Time: 2022-08-25T11:12:38.243Z<br/>Resources:<br/>- https://docs.moralis.io/\", \n    \"signature\": \"2pH9DqD5rve2qV4yBDshcAjWd2y8TqMx8BPb7f3KoNnuLEhE5JwjruYi4jaFaD4HN6wriLz2Vdr32kRBAJmHcyny\", \n}\n\nresult = auth.challenge.verify_challenge_solana(\n    api_key=api_key,\n    body=body,\n)\n\nprint(result)\n"}]},"requestChallengeAptos":{"apiHost":"https://authapi.moralis.io","summary":"Request Aptos challenge","method":"POST","path":"/challenge/request/aptos","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"description":"Request Aptos challenge message.","type":"object","fields":[{"name":"domain","type":"string","description":"RFC 4501 dns authority that is requesting the signing.","example":"defi.finance"},{"name":"statement","type":"string","description":"Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.","example":"Please confirm"},{"name":"uri","type":"string","description":"RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).","example":"https://defi.finance/"},{"name":"expirationTime","type":"string","description":"ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.","example":"2020-01-01T00:00:00.000Z"},{"name":"notBefore","type":"string","description":"ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.","example":"2020-01-01T00:00:00.000Z"},{"name":"resources","type":"array","description":"List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by new lines.","example":["https://docs.moralis.io/"],"field":{"type":"string"}},{"name":"timeout","type":"number","description":"Time in seconds before the challenge is expired","example":15},{"name":"network","type":"string","description":"The network where Contract Accounts must be resolved.","example":"mainnet"},{"name":"address","type":"string","description":"Aptos address performing the signing conformant.","example":"0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"},{"name":"publicKey","type":"string","description":"Aptos public key performing the signing conformant.","example":"0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"}]},"responses":[{"status":"201","description":"The back channel challenge containing the id to store on the api and the message to be signed by the user","body":{"type":"object","fields":[{"name":"id","type":"string","description":"17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.","example":"fRyt67D3eRss3RrXa"},{"name":"profileId","type":"string","description":"Unique identifier with a length of 66 characters","example":"0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"},{"name":"message","type":"string","description":"Message that needs to be signed by the end user","example":"defi.finance wants you to sign in with your Aptos account:\n0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d\n\nPlease confirm\n\nURI: https://defi.finance/\nVersion: 1\nChain ID: 1\nNonce: DbU1DCTmdzR4lg3wi\nIssued At: 2022-06-12T12:15:31.290Z\nExpiration Time: 2020-01-01T00:00:00.000Z\nNot Before: 2020-01-01T00:00:00.000Z\nResources:\n- https://docs.moralis.io/"}]}}]},"verifyChallengeAptos":{"apiHost":"https://authapi.moralis.io","summary":"Verify Aptos challenge","method":"POST","path":"/challenge/verify/aptos","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"description":"Verify Aptos challenge message.","type":"object","fields":[{"name":"message","type":"string","description":"Message that needs to be signed by the end user.","example":"defi.finance wants you to sign in with your Aptos account:\n0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d\n\n\nURI: https://defi.finance\nVersion: 1\nChain ID: 1\nNonce: Px7Nh1RPzlCLwqgOb\nIssued At: 2022-11-30T10:20:00.262Z"},{"name":"signature","type":"string","description":"EIP-191 compliant signature signed by the Aptos account address requesting authentication.","example":"0xa8f89a58bf9b433d3100f9e41ee35b5e31fb8c7cd62547acb113162ec6f2e4140207e2dfbd4e387e1801ebc7f08a9dd105ac1d22b2e2ff0df5fa8b6d9bdcfe491c"}]},"responses":[{"status":"201","description":"The token to be used to call the third party API from the client","body":{"type":"object","fields":[{"name":"id","type":"string","description":"17-characters Alphanumeric string Secret Challenge ID used to identify this particular request. Is should be used at the backend of the calling service to identify the completed request.","example":"fRyt67D3eRss3RrX"},{"name":"domain","type":"string","description":"RFC 4501 dns authority that is requesting the signing.","example":"defi.finance"},{"name":"statement","type":"string","description":"Human-readable ASCII assertion that the user will sign, and it must not contain `\n`.","example":"Please confirm"},{"name":"uri","type":"string","description":"RFC 3986 URI referring to the resource that is the subject of the signing (as in the __subject__ of a claim).","example":"https://defi.finance/"},{"name":"expirationTime","type":"string","description":"ISO 8601 datetime string that, if present, indicates when the signed authentication message is no longer valid.","example":"2020-01-01T00:00:00.000Z"},{"name":"notBefore","type":"string","description":"ISO 8601 datetime string that, if present, indicates when the signed authentication message will become valid.","example":"2020-01-01T00:00:00.000Z"},{"name":"resources","type":"array","description":"List of information or references to information the user wishes to have resolved as part of authentication by the relying party. They are expressed as RFC 3986 URIs separated by `\n- `.","example":["https://docs.moralis.io/"],"field":{"type":"string"}},{"name":"version","type":"string","description":"EIP-155 Chain ID to which the session is bound, and the network where Contract Accounts must be resolved.","example":"1.0"},{"name":"nonce","type":"string","example":"0x1234567890abcdef0123456789abcdef1234567890abcdef"},{"name":"profileId","type":"string","description":"Unique identifier with a length of 66 characters","example":"0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"},{"name":"network","type":"string","description":"The network where Contract Accounts must be resolved.","example":"mainnet"},{"name":"address","type":"string","description":"Aptos address performing the signing conformant.","example":"0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"},{"name":"publicKey","type":"string","description":"Aptos public key performing the signing conformant.","example":"0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"}]}}]},"getAddresses":{"apiHost":"https://authapi.moralis.io","summary":"Get addresses that are bound to the specific profileId","method":"GET","path":"/profile/:profileId/addresses","pathParams":[{"name":"profileId","description":"Unique identifier with a length of 66 characters","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"201","description":"The addresses that are bound to the speicifc profileId"}]},"requestBind":{"apiHost":"https://authapi.moralis.io","summary":"Request bind between profile of two addresses","description":"Request for message to bind profile that is belong to the two addresses<br>\n        All profiles under the addresses will be bound and new profile will be generated.","method":"POST","path":"/bind/request","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"description":"The two addresses that are required to be bind.","type":"object","fields":[{"name":"addresses","type":"object","description":"An array of addresses that needs to be bind","fields":[{"name":"blockchainType","type":"string","description":"The chain in which the address belongs to","example":"evm"},{"name":"address","type":"string","description":"Address performing the signing conformant to capitalization encoded checksum specified in EIP-55 where applicable.","example":"0x57af6B90c2237d2F888bf4CAe56f25FE1b14e531"},{"name":"publicKey","type":"string","description":"Public key performing the signing conformant. (This is only needed for Aptos address)","example":"0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"}]}]},"responses":[{"status":"201","description":"The messages that is required to be signed by each of the address","body":{"type":"object","fields":[{"name":"messages","type":"array","description":"Message that needs to be signed by the end user","example":["Please sign this message to bind:\nProfile Ids:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\n\nwith\n\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nNonce: 5pXWu7aGkY2J7II0X","Please sign this message to bind:\nProfile Ids:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\n\nwith\n\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nNonce: 5pXWu7aGkY2J7II0X"],"field":{"type":"string"}}]}}]},"verifyRequestBind":{"apiHost":"https://authapi.moralis.io","summary":"Verify bind request","method":"POST","path":"/bind/request/verify","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"description":"Messages and its signatures that is used for verification","type":"object","fields":[{"name":"verifications","type":"object","description":"Message that needs to be signed by the end user","fields":[{"name":"message","type":"string","description":"Message that needs to be signed by the end user","example":"Please sign this message to bind:\nProfile Ids:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\n\nwith\n\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nNonce: 5pXWu7aGkY2J7II0X"},{"name":"signature","type":"string","description":"EIP-191 compliant signature signed by the Ethereum account address requesting authentication.","example":"0xc4f2f59d80e036ecab4eaaac5d4ee713ab94264ca584839c98b5743c4f6777322038225a4bc1e0f13b8382166816737369f26bd66f0479cfa80d4c52c02eb2cb1b"}]}]},"responses":[{"status":"201","description":"The profileId that all the addresses have been bind into.","body":{"type":"object","fields":[{"name":"profileId","type":"string","description":"Unique identifier with a length of 66 characters","example":"0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"}]}}]},"removeBind":{"apiHost":"https://authapi.moralis.io","summary":"Request to remove bind of an address from a profile","method":"POST","path":"/bind/remove","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"description":"The address that is required to be removed from the bind of the profileId.","type":"object","fields":[{"name":"blockchainType","type":"string","description":"The chain in which the address belongs to","example":"evm"},{"name":"address","type":"string","description":"Address performing the signing conformant to capitalization encoded checksum specified in EIP-55 where applicable.","example":"0x57af6B90c2237d2F888bf4CAe56f25FE1b14e531"},{"name":"publicKey","type":"string","description":"Public key performing the signing conformant. (This is only needed for Aptos address)","example":"0xfb2853744bb8afd58d9386d1856afd8e08de135019961dfa3a10d8c9bf83b99d"},{"name":"profileId","type":"string","description":"Unique identifier with a length of 66 characters","example":"0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"}]},"responses":[{"status":"201","description":"The messages that is required to be signed by each of the address","body":{"type":"object","fields":[{"name":"message","type":"string","description":"Message that needs to be signed by the end user","example":"Please sign this message to unbind:\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nfrom\nProfile Id:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\nNonce: 5pXWu7aGkY2J7II0X"}]}}]},"verifyRemoveBind":{"apiHost":"https://authapi.moralis.io","summary":"Verify remove bind request","method":"POST","path":"/bind/remove/verify","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"description":"Messages and its signatures that is used for verification","type":"object","fields":[{"name":"message","type":"string","description":"Message that needs to be signed by the end user","example":"Please sign this message to unbind:\nAddress: 0x6ed338bcB610640e81465FCfb9894DDfA354Cc91\nfrom\nProfile Id:\n- 0x0b2bbac1251651c0cbbdbbb29fed5a03adc8b05a2a9eb10a02aaa489b9c1f8ff\nNonce: 5pXWu7aGkY2J7II0X"},{"name":"signature","type":"string","description":"EIP-191 compliant signature signed by the Ethereum account address requesting authentication.","example":"0xc4f2f59d80e036ecab4eaaac5d4ee713ab94264ca584839c98b5743c4f6777322038225a4bc1e0f13b8382166816737369f26bd66f0479cfa80d4c52c02eb2cb1b"}]},"responses":[{"status":"201","description":"The new profileId that is being generated for this address.","body":{"type":"object","fields":[{"name":"profileId","type":"string","description":"Unique identifier with a length of 66 characters","example":"0xbfbcfab169c67072ff418133124480fea02175f1402aaa497daa4fd09026b0e1"}]}}]}},"streams":{"GetHistory":{"apiHost":"https://api.moralis-streams.com","summary":"Get history","description":"Get all history","method":"GET","path":"/history","pathParams":[],"queryParams":[{"name":"limit","required":true,"type":"number"},{"name":"cursor","required":false,"type":"string"},{"name":"excludePayload","required":false,"type":"boolean"}],"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"result","type":"object","fields":[{"name":"id","type":"string","description":"Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)","format":"uuid","pattern":"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"},{"name":"date","type":"string"},{"name":"payload"},{"name":"tinyPayload","type":"object","properties":{"chainId":{"type":"string"},"confirmed":{"type":"boolean"},"block":{"type":"string"},"records":{"type":"number","format":"double"},"retries":{"type":"number","format":"double"}},"required":["chainId","confirmed","block","records","retries"],"additionalProperties":false},{"name":"errorMessage","type":"string"},{"name":"webhookUrl","type":"string"},{"name":"streamId","type":"string"},{"name":"tag","type":"string"}]},{"name":"cursor","type":"string"},{"name":"total","type":"number"}]}}],"codeSamples":[{"language":"node","code":"import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst limit = 10;\n\n  const { result } = await Moralis.Streams.getHistory({\n  limit,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"limit\": 1.2, \n    \"cursor\": \"\", \n    \"excludePayload\": True, \n}\n\nresult = streams.history.get_history(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"ReplayHistory":{"apiHost":"https://api.moralis-streams.com","summary":"Replay history","description":"Replay a specific history.","method":"POST","path":"/history/replay/:streamId/:id","pathParams":[{"name":"streamId","description":"The id of the stream the history will be replayed","required":true,"type":"string"},{"name":"id","description":"The id of the history to replay","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"id","type":"string","description":"Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)","format":"uuid","pattern":"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"},{"name":"date","type":"string"},{"name":"payload"},{"name":"tinyPayload","type":"object","properties":{"chainId":{"type":"string"},"confirmed":{"type":"boolean"},"block":{"type":"string"},"records":{"type":"number","format":"double"},"retries":{"type":"number","format":"double"}},"required":["chainId","confirmed","block","records","retries"],"additionalProperties":false},{"name":"errorMessage","type":"string"},{"name":"webhookUrl","type":"string"},{"name":"streamId","type":"string"},{"name":"tag","type":"string"}]}}],"codeSamples":[{"language":"node","code":"import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst id = \"id-1\";\nconst streamId = \"stream-1\";\n\n  const { result } = await Moralis.Streams.retry({\n  id,\n  streamId,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"streamId\": \"\", \n    \"id\": \"\", \n}\n\nresult = streams.history.replay_history(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"GetLogs":{"apiHost":"https://api.moralis-streams.com","summary":"Get logs","description":"get all failed logs","method":"GET","path":"/history/logs","pathParams":[],"queryParams":[{"name":"limit","required":true,"type":"number"},{"name":"cursor","required":false,"type":"string"}],"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"result","type":"object","fields":[{"name":"id","type":"string","description":"Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)","format":"uuid","pattern":"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"},{"name":"streamId","type":"string"},{"name":"chain","type":"string"},{"name":"webhookUrl","type":"string"},{"name":"tag","type":"string"},{"name":"retries","type":"number"},{"name":"deliveryStatus","type":"string"},{"name":"blockNumber","type":"number"},{"name":"errorMessage","type":"string"},{"name":"type","type":"string"},{"name":"createdAt","type":"string"}]},{"name":"cursor","type":"string"},{"name":"total","type":"number"}]}}]},"SetSettings":{"apiHost":"https://api.moralis-streams.com","summary":"Set project settings","description":"Set the settings for the current project based on the project api-key.","method":"POST","path":"/settings","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"type":"object","fields":[{"name":"region","type":"string","description":"The region from where all the webhooks will be posted for this project","enum":["us-east-1","us-west-2","eu-central-1","ap-southeast-1"]},{"name":"secretKey","type":"string","description":"The secret key to validate the webhooks"}]},"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"region","type":"string","description":"The region from where all the webhooks will be posted for this project","enum":["us-east-1","us-west-2","eu-central-1","ap-southeast-1"]},{"name":"secretKey","type":"string","description":"The secret key to validate the webhooks"}]}}],"codeSamples":[{"language":"node","code":"import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \n  const { result } = await Moralis.Streams.readSettings();\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\n\nresult = streams.project.get_settings(\n    api_key=api_key,\n)\n\nprint(result)\n"}]},"GetSettings":{"apiHost":"https://api.moralis-streams.com","summary":"Get project settings","description":"Get the settings for the current project based on the project api-key.","method":"GET","path":"/settings","pathParams":[],"queryParams":[],"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"region","type":"string","description":"The region from where all the webhooks will be posted for this project","enum":["us-east-1","us-west-2","eu-central-1","ap-southeast-1"]},{"name":"secretKey","type":"string","description":"The secret key to validate the webhooks"}]}}],"codeSamples":[{"language":"node","code":"import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \n  const { result } = await Moralis.Streams.readSettings();\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\n\nresult = streams.project.get_settings(\n    api_key=api_key,\n)\n\nprint(result)\n"}]},"GetStats":{"apiHost":"https://api.moralis-streams.com","summary":"Get project stats","description":"Get the global stats for the account.","method":"GET","path":"/stats","pathParams":[],"queryParams":[],"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"totalWebhooksDelivered","type":"number","description":"The total amount of webhooks delivered across all streams"},{"name":"totalWebhooksFailed","type":"number","description":"The total amount of failed webhooks across all streams"},{"name":"totalLogsProcessed","type":"number","description":"The total amount of logs processed across all streams, this includes failed webhooks"},{"name":"totalTxsProcessed","type":"number","description":"The total amount of txs processed across all streams, this includes failed webhooks"},{"name":"totalTxsInternalProcessed","type":"number","description":"The total amount of internal txs processed across all streams, this includes failed webhooks"},{"name":"streams","type":"object","description":"Array of stream stats","fields":[{"name":"totalWebhooksDelivered","type":"number","description":"The total amount of webhooks delivered across all streams"},{"name":"totalWebhooksFailed","type":"number","description":"The total amount of failed webhooks across all streams"},{"name":"totalLogsProcessed","type":"number","description":"The total amount of logs processed across all streams, this includes failed webhooks"},{"name":"totalTxsProcessed","type":"number","description":"The total amount of txs processed across all streams, this includes failed webhooks"},{"name":"totalTxsInternalProcessed","type":"number","description":"The total amount of internal txs processed across all streams, this includes failed webhooks"},{"name":"streamId","type":"string","description":"The stream id"}]},{"name":"createdAt","type":"string","description":"The date since this stats are being counted"},{"name":"updatedAt","type":"string","description":"The date since this stats were last updated"}]}}],"codeSamples":[{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\n\nresult = streams.stats.get_stats(\n    api_key=api_key,\n)\n\nprint(result)\n"}]},"GetStatsByStreamId":{"apiHost":"https://api.moralis-streams.com","summary":"Get project stats by Stream ID","description":"Get the stats for the streamId specified","method":"GET","path":"/stats/:streamId","pathParams":[{"name":"streamId","description":"The id of the stream to get the stats","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"totalWebhooksDelivered","type":"number","description":"The total amount of webhooks delivered across all streams"},{"name":"totalWebhooksFailed","type":"number","description":"The total amount of failed webhooks across all streams"},{"name":"totalLogsProcessed","type":"number","description":"The total amount of logs processed across all streams, this includes failed webhooks"},{"name":"totalTxsProcessed","type":"number","description":"The total amount of txs processed across all streams, this includes failed webhooks"},{"name":"totalTxsInternalProcessed","type":"number","description":"The total amount of internal txs processed across all streams, this includes failed webhooks"},{"name":"streams","type":"object","description":"Array of stream stats","fields":[{"name":"totalWebhooksDelivered","type":"number","description":"The total amount of webhooks delivered across all streams"},{"name":"totalWebhooksFailed","type":"number","description":"The total amount of failed webhooks across all streams"},{"name":"totalLogsProcessed","type":"number","description":"The total amount of logs processed across all streams, this includes failed webhooks"},{"name":"totalTxsProcessed","type":"number","description":"The total amount of txs processed across all streams, this includes failed webhooks"},{"name":"totalTxsInternalProcessed","type":"number","description":"The total amount of internal txs processed across all streams, this includes failed webhooks"},{"name":"streamId","type":"string","description":"The stream id"}]},{"name":"createdAt","type":"string","description":"The date since this stats are being counted"},{"name":"updatedAt","type":"string","description":"The date since this stats were last updated"}]}}],"codeSamples":[{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"streamId\": \"\", \n}\n\nresult = streams.stats.get_stats_by_stream_id(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"GetStreams":{"apiHost":"https://api.moralis-streams.com","summary":"Get streams","description":"Get all the evm streams for the current project based on the project api-key.","method":"GET","path":"/streams/evm","pathParams":[],"queryParams":[{"name":"limit","description":"Limit response results max value 100","required":true,"type":"number"},{"name":"cursor","description":"Cursor for fetching next page","required":false,"type":"string"}],"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"result","type":"object","description":"Array of project Streams","fields":[{"name":"webhookUrl","type":"string","description":"Webhook URL where moralis will send the POST request."},{"name":"description","type":"string","description":"A description for this stream"},{"name":"tag","type":"string","description":"A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"},{"name":"topic0","type":"array","description":"An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']","field":{"type":"string"}},{"name":"allAddresses","type":"boolean","description":"Include events for all addresses (only applied when abi and topic0 is provided)"},{"name":"includeNativeTxs","type":"boolean","description":"Include or not native transactions defaults to false"},{"name":"includeContractLogs","type":"boolean","description":"Include or not logs of contract interactions defaults to false"},{"name":"includeInternalTxs","type":"boolean","description":"Include or not include internal transactions defaults to false"},{"name":"includeAllTxLogs","type":"boolean","description":"Include all logs if atleast one value in tx or log matches stream config"},{"name":"getNativeBalances","type":"object","description":"Include native balances for each address in the webhook","fields":[{"name":"selectors","type":"array","field":{"type":"string"}},{"name":"type","type":"string"}]},{"name":"abi"},{"name":"advancedOptions","type":"object","fields":[{"name":"topic0","type":"string"},{"name":"filter","type":"object","description":"The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams","properties":{},"additionalProperties":{},"example":{}},{"name":"includeNativeTxs","type":"boolean"}]},{"name":"chainIds","type":"array","description":"The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]","field":{"type":"string"}},{"name":"demo","type":"boolean","description":"Indicator if it is a demo stream"},{"name":"triggers","type":"object","description":"triggers","fields":[{"name":"type","type":"string"},{"name":"contractAddress","type":"string"},{"name":"inputs","type":"array","field":{"anyOf":[{"type":"string"},{"items":{},"type":"array"}]}},{"name":"functionAbi","type":"object","description":"The abi to parse the log object of the contract","properties":{"anonymous":{"type":"boolean"},"constant":{"type":"boolean"},"inputs":{"items":{"$ref":"#/components/schemas/AbiInput"},"type":"array"},"name":{"type":"string"},"outputs":{"items":{"$ref":"#/components/schemas/AbiOutput"},"type":"array"},"payable":{"type":"boolean"},"stateMutability":{"type":"string"},"type":{"type":"string"},"gas":{"type":"number","format":"double"}},"required":["type"],"additionalProperties":false,"example":{}},{"name":"topic0","type":"string"},{"name":"callFrom","type":"string"}]},{"name":"id","type":"string","description":"Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)","format":"uuid","pattern":"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"},{"name":"status","type":"string","description":"The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks","enum":["active","paused","error","terminated"]},{"name":"statusMessage","type":"string","description":"Description of current status of stream."}]},{"name":"cursor","type":"string","description":"Cursor for fetching next page"},{"name":"total","type":"number","description":"Total count of streams on the project"}]}}],"codeSamples":[{"language":"node","code":"import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst limit = 20;\n\n  const { result } = await Moralis.Streams.getAll({\n  limit,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"limit\": 1.2, \n    \"cursor\": \"\", \n}\n\nresult = streams.evm_streams.get_streams(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"CreateStream":{"apiHost":"https://api.moralis-streams.com","summary":"Create stream","description":"Creates a new evm stream.","method":"PUT","path":"/streams/evm","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"description":"Provide a Stream Model","type":"object","fields":[{"name":"webhookUrl","type":"string","description":"Webhook URL where moralis will send the POST request."},{"name":"description","type":"string","description":"A description for this stream"},{"name":"tag","type":"string","description":"A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"},{"name":"topic0","type":"array","description":"An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']","field":{"type":"string"}},{"name":"allAddresses","type":"boolean","description":"Include events for all addresses (only applied when abi and topic0 is provided)"},{"name":"includeNativeTxs","type":"boolean","description":"Include or not native transactions defaults to false"},{"name":"includeContractLogs","type":"boolean","description":"Include or not logs of contract interactions defaults to false"},{"name":"includeInternalTxs","type":"boolean","description":"Include or not include internal transactions defaults to false"},{"name":"includeAllTxLogs","type":"boolean","description":"Include all logs if atleast one value in tx or log matches stream config"},{"name":"getNativeBalances","type":"object","description":"Include native balances for each address in the webhook","fields":[{"name":"selectors","type":"array","field":{"type":"string"}},{"name":"type","type":"string"}]},{"name":"abi"},{"name":"advancedOptions","type":"object","fields":[{"name":"topic0","type":"string"},{"name":"filter","type":"object","description":"The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams","properties":{},"additionalProperties":{},"example":{}},{"name":"includeNativeTxs","type":"boolean"}]},{"name":"chainIds","type":"array","description":"The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]","field":{"type":"string"}},{"name":"demo","type":"boolean","description":"Indicator if it is a demo stream"},{"name":"triggers","type":"object","description":"triggers","fields":[{"name":"type","type":"string"},{"name":"contractAddress","type":"string"},{"name":"inputs","type":"array","field":{"anyOf":[{"type":"string"},{"items":{},"type":"array"}]}},{"name":"functionAbi","type":"object","description":"The abi to parse the log object of the contract","properties":{"anonymous":{"type":"boolean"},"constant":{"type":"boolean"},"inputs":{"items":{"$ref":"#/components/schemas/AbiInput"},"type":"array"},"name":{"type":"string"},"outputs":{"items":{"$ref":"#/components/schemas/AbiOutput"},"type":"array"},"payable":{"type":"boolean"},"stateMutability":{"type":"string"},"type":{"type":"string"},"gas":{"type":"number","format":"double"}},"required":["type"],"additionalProperties":false,"example":{}},{"name":"topic0","type":"string"},{"name":"callFrom","type":"string"}]}]},"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"webhookUrl","type":"string","description":"Webhook URL where moralis will send the POST request."},{"name":"description","type":"string","description":"A description for this stream"},{"name":"tag","type":"string","description":"A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"},{"name":"topic0","type":"array","description":"An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']","field":{"type":"string"}},{"name":"allAddresses","type":"boolean","description":"Include events for all addresses (only applied when abi and topic0 is provided)"},{"name":"includeNativeTxs","type":"boolean","description":"Include or not native transactions defaults to false"},{"name":"includeContractLogs","type":"boolean","description":"Include or not logs of contract interactions defaults to false"},{"name":"includeInternalTxs","type":"boolean","description":"Include or not include internal transactions defaults to false"},{"name":"includeAllTxLogs","type":"boolean","description":"Include all logs if atleast one value in tx or log matches stream config"},{"name":"getNativeBalances","type":"object","description":"Include native balances for each address in the webhook","fields":[{"name":"selectors","type":"array","field":{"type":"string"}},{"name":"type","type":"string"}]},{"name":"abi"},{"name":"advancedOptions","type":"object","fields":[{"name":"topic0","type":"string"},{"name":"filter","type":"object","description":"The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams","properties":{},"additionalProperties":{},"example":{}},{"name":"includeNativeTxs","type":"boolean"}]},{"name":"chainIds","type":"array","description":"The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]","field":{"type":"string"}},{"name":"demo","type":"boolean","description":"Indicator if it is a demo stream"},{"name":"triggers","type":"object","description":"triggers","fields":[{"name":"type","type":"string"},{"name":"contractAddress","type":"string"},{"name":"inputs","type":"array","field":{"anyOf":[{"type":"string"},{"items":{},"type":"array"}]}},{"name":"functionAbi","type":"object","description":"The abi to parse the log object of the contract","properties":{"anonymous":{"type":"boolean"},"constant":{"type":"boolean"},"inputs":{"items":{"$ref":"#/components/schemas/AbiInput"},"type":"array"},"name":{"type":"string"},"outputs":{"items":{"$ref":"#/components/schemas/AbiOutput"},"type":"array"},"payable":{"type":"boolean"},"stateMutability":{"type":"string"},"type":{"type":"string"},"gas":{"type":"number","format":"double"}},"required":["type"],"additionalProperties":false,"example":{}},{"name":"topic0","type":"string"},{"name":"callFrom","type":"string"}]},{"name":"id","type":"string","description":"Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)","format":"uuid","pattern":"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"},{"name":"status","type":"string","description":"The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks","enum":["active","paused","error","terminated"]},{"name":"statusMessage","type":"string","description":"Description of current status of stream."}]}}],"codeSamples":[{"language":"node","code":"import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst limit = 20;\n\n  const { result } = await Moralis.Streams.getAll({\n  limit,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"limit\": 1.2, \n    \"cursor\": \"\", \n}\n\nresult = streams.evm_streams.get_streams(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"GetStream":{"apiHost":"https://api.moralis-streams.com","summary":"Get a specific evm stream.","description":"Get a specific evm stream.","method":"GET","path":"/streams/evm/:id","pathParams":[{"name":"id","description":"The id of the stream to get","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"webhookUrl","type":"string","description":"Webhook URL where moralis will send the POST request."},{"name":"description","type":"string","description":"A description for this stream"},{"name":"tag","type":"string","description":"A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"},{"name":"topic0","type":"array","description":"An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']","field":{"type":"string"}},{"name":"allAddresses","type":"boolean","description":"Include events for all addresses (only applied when abi and topic0 is provided)"},{"name":"includeNativeTxs","type":"boolean","description":"Include or not native transactions defaults to false"},{"name":"includeContractLogs","type":"boolean","description":"Include or not logs of contract interactions defaults to false"},{"name":"includeInternalTxs","type":"boolean","description":"Include or not include internal transactions defaults to false"},{"name":"includeAllTxLogs","type":"boolean","description":"Include all logs if atleast one value in tx or log matches stream config"},{"name":"getNativeBalances","type":"object","description":"Include native balances for each address in the webhook","fields":[{"name":"selectors","type":"array","field":{"type":"string"}},{"name":"type","type":"string"}]},{"name":"abi"},{"name":"advancedOptions","type":"object","fields":[{"name":"topic0","type":"string"},{"name":"filter","type":"object","description":"The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams","properties":{},"additionalProperties":{},"example":{}},{"name":"includeNativeTxs","type":"boolean"}]},{"name":"chainIds","type":"array","description":"The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]","field":{"type":"string"}},{"name":"demo","type":"boolean","description":"Indicator if it is a demo stream"},{"name":"triggers","type":"object","description":"triggers","fields":[{"name":"type","type":"string"},{"name":"contractAddress","type":"string"},{"name":"inputs","type":"array","field":{"anyOf":[{"type":"string"},{"items":{},"type":"array"}]}},{"name":"functionAbi","type":"object","description":"The abi to parse the log object of the contract","properties":{"anonymous":{"type":"boolean"},"constant":{"type":"boolean"},"inputs":{"items":{"$ref":"#/components/schemas/AbiInput"},"type":"array"},"name":{"type":"string"},"outputs":{"items":{"$ref":"#/components/schemas/AbiOutput"},"type":"array"},"payable":{"type":"boolean"},"stateMutability":{"type":"string"},"type":{"type":"string"},"gas":{"type":"number","format":"double"}},"required":["type"],"additionalProperties":false,"example":{}},{"name":"topic0","type":"string"},{"name":"callFrom","type":"string"}]},{"name":"id","type":"string","description":"Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)","format":"uuid","pattern":"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"},{"name":"status","type":"string","description":"The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks","enum":["active","paused","error","terminated"]},{"name":"statusMessage","type":"string","description":"Description of current status of stream."}]}}],"codeSamples":[{"language":"node","code":"import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst id = \"id-1\";\n\n  const { result } = await Moralis.Streams.getById({\n  id,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n}\n\nresult = streams.evm_streams.get_stream(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"UpdateStream":{"apiHost":"https://api.moralis-streams.com","summary":"Update stream","description":"Updates a specific evm stream.","method":"POST","path":"/streams/evm/:id","pathParams":[{"name":"id","description":"The id of the stream to update","required":true,"type":"string"}],"queryParams":[],"bodyParam":{"required":true,"description":"Provide a Stream Model","type":"object","fields":[{"name":"webhookUrl","type":"string","description":"Webhook URL where moralis will send the POST request."},{"name":"description","type":"string","description":"A description for this stream"},{"name":"tag","type":"string","description":"A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"},{"name":"topic0","type":"array","description":"An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']","field":{"type":"string"}},{"name":"allAddresses","type":"boolean","description":"Include events for all addresses (only applied when abi and topic0 is provided)"},{"name":"includeNativeTxs","type":"boolean","description":"Include or not native transactions defaults to false"},{"name":"includeContractLogs","type":"boolean","description":"Include or not logs of contract interactions defaults to false"},{"name":"includeInternalTxs","type":"boolean","description":"Include or not include internal transactions defaults to false"},{"name":"includeAllTxLogs","type":"boolean","description":"Include all logs if atleast one value in tx or log matches stream config"},{"name":"getNativeBalances","type":"object","description":"Include native balances for each address in the webhook","fields":[{"name":"selectors","type":"array","field":{"type":"string"}},{"name":"type","type":"string"}]},{"name":"abi"},{"name":"advancedOptions","type":"object","fields":[{"name":"topic0","type":"string"},{"name":"filter","type":"object","description":"The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams","properties":{},"additionalProperties":{},"example":{}},{"name":"includeNativeTxs","type":"boolean"}]},{"name":"chainIds","type":"array","description":"The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]","field":{"type":"string"}},{"name":"demo","type":"boolean","description":"Indicator if it is a demo stream"},{"name":"triggers","type":"object","description":"triggers","fields":[{"name":"type","type":"string"},{"name":"contractAddress","type":"string"},{"name":"inputs","type":"array","field":{"anyOf":[{"type":"string"},{"items":{},"type":"array"}]}},{"name":"functionAbi","type":"object","description":"The abi to parse the log object of the contract","properties":{"anonymous":{"type":"boolean"},"constant":{"type":"boolean"},"inputs":{"items":{"$ref":"#/components/schemas/AbiInput"},"type":"array"},"name":{"type":"string"},"outputs":{"items":{"$ref":"#/components/schemas/AbiOutput"},"type":"array"},"payable":{"type":"boolean"},"stateMutability":{"type":"string"},"type":{"type":"string"},"gas":{"type":"number","format":"double"}},"required":["type"],"additionalProperties":false,"example":{}},{"name":"topic0","type":"string"},{"name":"callFrom","type":"string"}]}]},"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"webhookUrl","type":"string","description":"Webhook URL where moralis will send the POST request."},{"name":"description","type":"string","description":"A description for this stream"},{"name":"tag","type":"string","description":"A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"},{"name":"topic0","type":"array","description":"An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']","field":{"type":"string"}},{"name":"allAddresses","type":"boolean","description":"Include events for all addresses (only applied when abi and topic0 is provided)"},{"name":"includeNativeTxs","type":"boolean","description":"Include or not native transactions defaults to false"},{"name":"includeContractLogs","type":"boolean","description":"Include or not logs of contract interactions defaults to false"},{"name":"includeInternalTxs","type":"boolean","description":"Include or not include internal transactions defaults to false"},{"name":"includeAllTxLogs","type":"boolean","description":"Include all logs if atleast one value in tx or log matches stream config"},{"name":"getNativeBalances","type":"object","description":"Include native balances for each address in the webhook","fields":[{"name":"selectors","type":"array","field":{"type":"string"}},{"name":"type","type":"string"}]},{"name":"abi"},{"name":"advancedOptions","type":"object","fields":[{"name":"topic0","type":"string"},{"name":"filter","type":"object","description":"The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams","properties":{},"additionalProperties":{},"example":{}},{"name":"includeNativeTxs","type":"boolean"}]},{"name":"chainIds","type":"array","description":"The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]","field":{"type":"string"}},{"name":"demo","type":"boolean","description":"Indicator if it is a demo stream"},{"name":"triggers","type":"object","description":"triggers","fields":[{"name":"type","type":"string"},{"name":"contractAddress","type":"string"},{"name":"inputs","type":"array","field":{"anyOf":[{"type":"string"},{"items":{},"type":"array"}]}},{"name":"functionAbi","type":"object","description":"The abi to parse the log object of the contract","properties":{"anonymous":{"type":"boolean"},"constant":{"type":"boolean"},"inputs":{"items":{"$ref":"#/components/schemas/AbiInput"},"type":"array"},"name":{"type":"string"},"outputs":{"items":{"$ref":"#/components/schemas/AbiOutput"},"type":"array"},"payable":{"type":"boolean"},"stateMutability":{"type":"string"},"type":{"type":"string"},"gas":{"type":"number","format":"double"}},"required":["type"],"additionalProperties":false,"example":{}},{"name":"topic0","type":"string"},{"name":"callFrom","type":"string"}]},{"name":"id","type":"string","description":"Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)","format":"uuid","pattern":"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"},{"name":"status","type":"string","description":"The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks","enum":["active","paused","error","terminated"]},{"name":"statusMessage","type":"string","description":"Description of current status of stream."}]}}],"codeSamples":[{"language":"node","code":"import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst id = \"id-1\";\n\n  const { result } = await Moralis.Streams.getById({\n  id,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n}\n\nresult = streams.evm_streams.get_stream(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"DeleteStream":{"apiHost":"https://api.moralis-streams.com","summary":"Delete stream","description":"Delete a specific evm stream.","method":"DELETE","path":"/streams/evm/:id","pathParams":[{"name":"id","description":"The id of the stream to delete","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"webhookUrl","type":"string","description":"Webhook URL where moralis will send the POST request."},{"name":"description","type":"string","description":"A description for this stream"},{"name":"tag","type":"string","description":"A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"},{"name":"topic0","type":"array","description":"An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']","field":{"type":"string"}},{"name":"allAddresses","type":"boolean","description":"Include events for all addresses (only applied when abi and topic0 is provided)"},{"name":"includeNativeTxs","type":"boolean","description":"Include or not native transactions defaults to false"},{"name":"includeContractLogs","type":"boolean","description":"Include or not logs of contract interactions defaults to false"},{"name":"includeInternalTxs","type":"boolean","description":"Include or not include internal transactions defaults to false"},{"name":"includeAllTxLogs","type":"boolean","description":"Include all logs if atleast one value in tx or log matches stream config"},{"name":"getNativeBalances","type":"object","description":"Include native balances for each address in the webhook","fields":[{"name":"selectors","type":"array","field":{"type":"string"}},{"name":"type","type":"string"}]},{"name":"abi"},{"name":"advancedOptions","type":"object","fields":[{"name":"topic0","type":"string"},{"name":"filter","type":"object","description":"The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams","properties":{},"additionalProperties":{},"example":{}},{"name":"includeNativeTxs","type":"boolean"}]},{"name":"chainIds","type":"array","description":"The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]","field":{"type":"string"}},{"name":"demo","type":"boolean","description":"Indicator if it is a demo stream"},{"name":"triggers","type":"object","description":"triggers","fields":[{"name":"type","type":"string"},{"name":"contractAddress","type":"string"},{"name":"inputs","type":"array","field":{"anyOf":[{"type":"string"},{"items":{},"type":"array"}]}},{"name":"functionAbi","type":"object","description":"The abi to parse the log object of the contract","properties":{"anonymous":{"type":"boolean"},"constant":{"type":"boolean"},"inputs":{"items":{"$ref":"#/components/schemas/AbiInput"},"type":"array"},"name":{"type":"string"},"outputs":{"items":{"$ref":"#/components/schemas/AbiOutput"},"type":"array"},"payable":{"type":"boolean"},"stateMutability":{"type":"string"},"type":{"type":"string"},"gas":{"type":"number","format":"double"}},"required":["type"],"additionalProperties":false,"example":{}},{"name":"topic0","type":"string"},{"name":"callFrom","type":"string"}]},{"name":"id","type":"string","description":"Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)","format":"uuid","pattern":"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"},{"name":"status","type":"string","description":"The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks","enum":["active","paused","error","terminated"]},{"name":"statusMessage","type":"string","description":"Description of current status of stream."}]}}]},"UpdateStreamStatus":{"apiHost":"https://api.moralis-streams.com","summary":"Update stream status","description":"Updates the status of specific evm stream.","method":"POST","path":"/streams/evm/:id/status","pathParams":[{"name":"id","description":"The id of the stream to update","required":true,"type":"string"}],"queryParams":[],"bodyParam":{"required":true,"description":"Provide a Stream Model","type":"object","fields":[{"name":"status","type":"string","description":"The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks","enum":["active","paused","error","terminated"]}]},"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"webhookUrl","type":"string","description":"Webhook URL where moralis will send the POST request."},{"name":"description","type":"string","description":"A description for this stream"},{"name":"tag","type":"string","description":"A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"},{"name":"topic0","type":"array","description":"An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']","field":{"type":"string"}},{"name":"allAddresses","type":"boolean","description":"Include events for all addresses (only applied when abi and topic0 is provided)"},{"name":"includeNativeTxs","type":"boolean","description":"Include or not native transactions defaults to false"},{"name":"includeContractLogs","type":"boolean","description":"Include or not logs of contract interactions defaults to false"},{"name":"includeInternalTxs","type":"boolean","description":"Include or not include internal transactions defaults to false"},{"name":"includeAllTxLogs","type":"boolean","description":"Include all logs if atleast one value in tx or log matches stream config"},{"name":"getNativeBalances","type":"object","description":"Include native balances for each address in the webhook","fields":[{"name":"selectors","type":"array","field":{"type":"string"}},{"name":"type","type":"string"}]},{"name":"abi"},{"name":"advancedOptions","type":"object","fields":[{"name":"topic0","type":"string"},{"name":"filter","type":"object","description":"The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams","properties":{},"additionalProperties":{},"example":{}},{"name":"includeNativeTxs","type":"boolean"}]},{"name":"chainIds","type":"array","description":"The ids of the chains for this stream in hex Ex: [\"0x1\",\"0x38\"]","field":{"type":"string"}},{"name":"demo","type":"boolean","description":"Indicator if it is a demo stream"},{"name":"triggers","type":"object","description":"triggers","fields":[{"name":"type","type":"string"},{"name":"contractAddress","type":"string"},{"name":"inputs","type":"array","field":{"anyOf":[{"type":"string"},{"items":{},"type":"array"}]}},{"name":"functionAbi","type":"object","description":"The abi to parse the log object of the contract","properties":{"anonymous":{"type":"boolean"},"constant":{"type":"boolean"},"inputs":{"items":{"$ref":"#/components/schemas/AbiInput"},"type":"array"},"name":{"type":"string"},"outputs":{"items":{"$ref":"#/components/schemas/AbiOutput"},"type":"array"},"payable":{"type":"boolean"},"stateMutability":{"type":"string"},"type":{"type":"string"},"gas":{"type":"number","format":"double"}},"required":["type"],"additionalProperties":false,"example":{}},{"name":"topic0","type":"string"},{"name":"callFrom","type":"string"}]},{"name":"id","type":"string","description":"Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)","format":"uuid","pattern":"[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"},{"name":"status","type":"string","description":"The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks","enum":["active","paused","error","terminated"]},{"name":"statusMessage","type":"string","description":"Description of current status of stream."}]}}],"codeSamples":[{"language":"node","code":"import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst id = \"id-1\";\nconst status = \"paused\";\n\n  const { result } = await Moralis.Streams.updateStatus({\n  id,\n  status,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n}\nbody = {\n    \"status\": \"\", \n}\n\nresult = streams.evm_streams.update_stream_status(\n    api_key=api_key,\n    params=params,\n    body=body,\n)\n\nprint(result)\n"}]},"GetAddresses":{"apiHost":"https://api.moralis-streams.com","summary":"Get addresses by stream","description":"Get all addresses associated with a specific stream.","method":"GET","path":"/streams/evm/:id/address","pathParams":[{"name":"id","description":"the id of the stream to get the addresses from","required":true,"type":"string"}],"queryParams":[{"name":"limit","description":"Limit response results max value 100","required":true,"type":"number"},{"name":"cursor","description":"Cursor for fetching next page","required":false,"type":"string"}],"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"result","type":"object","description":"Array of project Streams","fields":[{"name":"address","type":"string","description":"Address"}]},{"name":"cursor","type":"string","description":"Cursor for fetching next page"},{"name":"total","type":"number","description":"Total count of streams on the project"}]}}],"codeSamples":[{"language":"node","code":"import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst id = \"id-1\";\n\n  const { result } = await Moralis.Streams.getAddresses({\n  id,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n    \"limit\": 1.2, \n    \"cursor\": \"\", \n}\n\nresult = streams.evm_streams.get_addresses(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"AddAddressToStream":{"apiHost":"https://api.moralis-streams.com","summary":"Add address to stream","description":"Adds an address to a Stream.","method":"POST","path":"/streams/evm/:id/address","pathParams":[{"name":"id","description":"The id of the stream to add the address to","required":true,"type":"string"}],"queryParams":[],"bodyParam":{"required":true,"description":"Provide a Address Model","type":"object","fields":[{"name":"address","description":"The address or a list of addresses to be added to the Stream."}]},"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"streamId","type":"string","description":"The streamId"},{"name":"address","description":"Address"}]}}],"codeSamples":[{"language":"node","code":"import Moralis from \"moralis\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n    // ...and any other configuration\n  });\n  \nconst id = \"id-1\";\n\n  const { result } = await Moralis.Streams.getAddresses({\n  id,\n});\n\n  console.log(result);\n} catch (e) {\n  console.error(e);\n}","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import streams\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"id\": \"\", \n    \"limit\": 1.2, \n    \"cursor\": \"\", \n}\n\nresult = streams.evm_streams.get_addresses(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"DeleteAddressFromStream":{"apiHost":"https://api.moralis-streams.com","summary":"Delete address from stream","description":"Deletes an address from a Stream.","method":"DELETE","path":"/streams/evm/:id/address","pathParams":[{"name":"id","description":"The id of the stream to delete the address from","required":true,"type":"string"}],"queryParams":[],"bodyParam":{"required":true,"description":"Provide a Address Model","type":"object","fields":[{"name":"address","description":"The address or a list of addresses to be removed from the Stream."}]},"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"streamId","type":"string","description":"The streamId"},{"name":"address","description":"Address"}]}}]},"GetStreamBlockDataByNumber":{"apiHost":"https://api.moralis-streams.com","summary":"Get webhook data returned on the block number with provided stream config","description":"Get webhook data returned on the block number with provided stream config","method":"POST","path":"/streams/evm/:chainId/block/:blockNumber","pathParams":[{"name":"chainId","required":true,"type":"string"},{"name":"blockNumber","required":true,"type":"number"}],"queryParams":[],"bodyParam":{"required":true,"description":"streams config and block number","type":"object","fields":[{"name":"tag","type":"string","description":"A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"},{"name":"topic0","type":"array","description":"An Array of topic0's in string-signature format ex: ['FunctionName(address,uint256)']","field":{"type":"string"}},{"name":"allAddresses","type":"boolean","description":"Include events for all addresses (only applied when abi and topic0 is provided)"},{"name":"includeNativeTxs","type":"boolean","description":"Include or not native transactions defaults to false"},{"name":"includeContractLogs","type":"boolean","description":"Include or not logs of contract interactions defaults to false"},{"name":"includeInternalTxs","type":"boolean","description":"Include or not include internal transactions defaults to false"},{"name":"includeAllTxLogs","type":"boolean","description":"Include all logs if atleast one value in tx or log matches stream config"},{"name":"abi"},{"name":"advancedOptions","type":"object","fields":[{"name":"topic0","type":"string"},{"name":"filter","type":"object","description":"The filter object for the topic0\nhttps://docs.moralis.io/docs/filter-streams","properties":{},"additionalProperties":{},"example":{}},{"name":"includeNativeTxs","type":"boolean"}]},{"name":"addresses","type":"array","field":{"type":"string"}}]},"responses":[{"status":"200","description":"Ok"}]},"aptosStreamsGetAll":{"apiHost":"https://api.moralis-streams.com","summary":"Gets all aptos streams.","description":"Get all aptos streams.","method":"GET","path":"/streams/aptos","pathParams":[],"queryParams":[{"name":"limit","description":"Limit response results max value 100","required":true,"type":"number"},{"name":"cursor","description":"Cursor for fetching next page","required":false,"type":"string"}],"responses":[{"status":"200","description":"Ok"}]},"aptosStreamsCreate":{"apiHost":"https://api.moralis-streams.com","summary":"Create stream","description":"Creates a new aptos stream.","method":"PUT","path":"/streams/aptos","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"description":"Provide a valid Aptos Stream Model","type":"object","fields":[{"name":"webhookUrl","type":"string","description":"Webhook URL where moralis will send the POST request."},{"name":"tag","type":"string","description":"A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"},{"name":"functions","type":"array","description":"An Array of events in string-signature format ex: ['0x1::aptos_account::transfer']","field":{"type":"string"}},{"name":"events","type":"array","description":"An Array of events in string-signature format ex: ['0x1::coin::WithdrawEvent']","field":{"type":"string"}},{"name":"network","type":"array","description":"The network to listen to","items":{"type":"string","enum":["mainnet","testnet"]}},{"name":"includePayload","type":"boolean","description":"Include or not payload for every transaction in webhook defaults to false"},{"name":"includeEvents","type":"boolean","description":"Include or not events in webhook defaults to false"},{"name":"includeChanges","type":"boolean","description":"Include or not raw changes for every transaction in webhook defaults to false"},{"name":"description","type":"string","description":"A description for this stream"},{"name":"demo","type":"boolean","description":"Indicator if it is a demo stream"},{"name":"allAddresses","type":"boolean","description":"Include events for all addresses (only applied when at least one event or function is provided)"}]},"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"id","type":"string"},{"name":"allAddresses","type":"boolean"},{"name":"demo","type":"boolean"},{"name":"description","type":"string"},{"name":"includeChanges","type":"boolean"},{"name":"includeEvents","type":"boolean"},{"name":"includePayload","type":"boolean"},{"name":"isErrorSince","type":"string"},{"name":"network","type":"array","items":{"type":"string","enum":["mainnet","testnet"]}},{"name":"status","type":"string","description":"The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks","enum":["active","paused","error","terminated"]},{"name":"statusMessage","type":"string"},{"name":"events","type":"array","field":{"type":"string"}},{"name":"functions","type":"array","field":{"type":"string"}},{"name":"tag","type":"string"},{"name":"webhookUrl","type":"string"},{"name":"amountOfAddresses","type":"number"}]}}]},"aptosStreamsGet":{"apiHost":"https://api.moralis-streams.com","summary":"Get a specific aptos stream.","description":"Get a specific aptos stream.","method":"GET","path":"/streams/aptos/:id","pathParams":[{"name":"id","description":"The id of the stream to get","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"id","type":"string"},{"name":"allAddresses","type":"boolean"},{"name":"demo","type":"boolean"},{"name":"description","type":"string"},{"name":"includeChanges","type":"boolean"},{"name":"includeEvents","type":"boolean"},{"name":"includePayload","type":"boolean"},{"name":"isErrorSince","type":"string"},{"name":"network","type":"array","items":{"type":"string","enum":["mainnet","testnet"]}},{"name":"status","type":"string","description":"The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks","enum":["active","paused","error","terminated"]},{"name":"statusMessage","type":"string"},{"name":"events","type":"array","field":{"type":"string"}},{"name":"functions","type":"array","field":{"type":"string"}},{"name":"tag","type":"string"},{"name":"webhookUrl","type":"string"},{"name":"amountOfAddresses","type":"number"}]}}]},"aptosStreamsUpdate":{"apiHost":"https://api.moralis-streams.com","summary":"Update stream","description":"Updates a new aptos stream.","method":"POST","path":"/streams/aptos/:id","pathParams":[{"name":"id","required":true,"type":"string"}],"queryParams":[],"bodyParam":{"required":true,"description":"Provide valid values of a Aptos Stream Model","type":"object","fields":[{"name":"allAddresses","type":"boolean","description":"Include events for all addresses (only applied when at least one event or function is provided)"},{"name":"demo","type":"boolean","description":"Indicator if it is a demo stream"},{"name":"description","type":"string","description":"A description for this stream"},{"name":"includeChanges","type":"boolean","description":"Include or not raw changes for every transaction in webhook defaults to false"},{"name":"includeEvents","type":"boolean","description":"Include or not events in webhook defaults to false"},{"name":"includePayload","type":"boolean","description":"Include or not payload for every transaction in webhook defaults to false"},{"name":"network","type":"array","description":"The network to listen to","items":{"type":"string","enum":["mainnet","testnet"]}},{"name":"events","type":"array","description":"An Array of events in string-signature format ex: ['0x1::coin::WithdrawEvent']","field":{"type":"string"}},{"name":"functions","type":"array","description":"An Array of events in string-signature format ex: ['0x1::aptos_account::transfer']","field":{"type":"string"}},{"name":"tag","type":"string","description":"A user-provided tag that will be send along the webhook, the user can use this tag to identify the specific stream if multiple streams are present"},{"name":"webhookUrl","type":"string","description":"Webhook URL where moralis will send the POST request."}]},"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"id","type":"string"},{"name":"allAddresses","type":"boolean"},{"name":"demo","type":"boolean"},{"name":"description","type":"string"},{"name":"includeChanges","type":"boolean"},{"name":"includeEvents","type":"boolean"},{"name":"includePayload","type":"boolean"},{"name":"isErrorSince","type":"string"},{"name":"network","type":"array","items":{"type":"string","enum":["mainnet","testnet"]}},{"name":"status","type":"string","description":"The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks","enum":["active","paused","error","terminated"]},{"name":"statusMessage","type":"string"},{"name":"events","type":"array","field":{"type":"string"}},{"name":"functions","type":"array","field":{"type":"string"}},{"name":"tag","type":"string"},{"name":"webhookUrl","type":"string"},{"name":"amountOfAddresses","type":"number"}]}}]},"aptosStreamsDelete":{"apiHost":"https://api.moralis-streams.com","summary":"Delete a stream","description":"Deletes a aptos stream.","method":"DELETE","path":"/streams/aptos/:id","pathParams":[{"name":"id","description":"the id of the aptos stream to delete","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":"Ok"}]},"aptosStreamsAddAddresses":{"apiHost":"https://api.moralis-streams.com","summary":"Add addresses to an aptos stream","description":"Adds addresses to an existing aptos stream","method":"POST","path":"/streams/aptos/:id/address","pathParams":[{"name":"id","description":"the id of the aptos stream to get the addresses from","required":true,"type":"string"}],"queryParams":[],"bodyParam":{"required":true,"type":"json"},"responses":[{"status":"200","description":"Ok"}]},"aptosStreamsDeleteAddresses":{"apiHost":"https://api.moralis-streams.com","summary":"Delete addresses of an aptos stream","description":"Deletes addresses of an existing aptos stream","method":"DELETE","path":"/streams/aptos/:id/address","pathParams":[{"name":"id","description":"the id of the aptos stream to get the addresses from","required":true,"type":"string"}],"queryParams":[],"bodyParam":{"required":true,"description":"Provide a list of valid Aptos addresses, or a single address","type":"json"},"responses":[{"status":"200","description":"Ok"}]},"aptosStreamsGetAddresses":{"apiHost":"https://api.moralis-streams.com","summary":"Get addresses by aptos stream id","description":"Get all addresses associated with a specific aptos stream.","method":"GET","path":"/streams/aptos/:id/address","pathParams":[{"name":"id","description":"the id of the aptos stream to get the addresses from","required":true,"type":"string"}],"queryParams":[{"name":"limit","description":"Limit response results max value 100","required":true,"type":"number"},{"name":"cursor","description":"Cursor for fetching next page","required":false,"type":"string"}],"responses":[{"status":"200","description":"Ok"}]},"aptosStreamsUpdateStatus":{"apiHost":"https://api.moralis-streams.com","summary":"Update a Stream Status","description":"Update a Stream Status","method":"POST","path":"/streams/aptos/:id/status","pathParams":[{"name":"id","description":"the id of the aptos stream to update the status","required":true,"type":"string"}],"queryParams":[],"bodyParam":{"required":true,"description":"Provide an object with the status to update can be 'active' or 'paused'","type":"object","fields":[{"name":"status","type":"string","description":"The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks","enum":["active","paused","error","terminated"]}]},"responses":[{"status":"200","description":"Ok","body":{"type":"object","fields":[{"name":"status","type":"string","description":"The stream status:\n[active] The Stream is healthy and processing blocks\n[paused] The Stream is paused and is not processing blocks\n[error] The Stream has encountered an error and is not processing blocks","enum":["active","paused","error","terminated"]},{"name":"statusMessage","type":"string"}]}}]}},"solana":{"balance":{"apiHost":"https://solana-gateway.moralis.io","summary":"Get native balance by wallet","description":"Gets the native balance owned by a given network and address.","method":"GET","path":"/account/:network/:address/balance","pathParams":[{"name":"network","description":"The network to query","required":true,"type":"string"},{"name":"address","description":"The address for which the native balance will be checked","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"solana","type":"string"},{"name":"lamports","type":"string"}]}},{"status":"400","description":""}],"codeSamples":[{"language":"node","code":"import Moralis from 'moralis';\nimport { SolNetwork, SolAddress } from \"@moralisweb3/sol-utils\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  const address = SolAddress.create(\n    \"HsXZnF7Te7dZ5ijvGcDj3NWtxRBBaAuYQgh1oZLwAba2\"\n  );\n\n  const network = SolNetwork.MAINNET;\n\n  const response = await Moralis.SolApi.account.getBalance({\n    network,\n    address,\n  });\n\n  console.log(response?.result);\n} catch (e) {\n  console.error(e);\n}\n","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import sol_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"network\": \"\", \n    \"address\": \"\", \n}\n\nresult = sol_api.account.balance(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"getSPL":{"apiHost":"https://solana-gateway.moralis.io","summary":"Get token balance by wallet","description":"Gets the token balances owned by a given network and address.","method":"GET","path":"/account/:network/:address/tokens","pathParams":[{"name":"network","description":"The network to query","required":true,"type":"string"},{"name":"address","description":"The address for which token balances will be checked","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":""},{"status":"400","description":""}],"codeSamples":[{"language":"node","code":"import Moralis from 'moralis';\nimport { SolNetwork, SolAddress } from \"@moralisweb3/sol-utils\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  const address = SolAddress.create(\n    \"HsXZnF7Te7dZ5ijvGcDj3NWtxRBBaAuYQgh1oZLwAba2\"\n  );\n\n  const network = SolNetwork.MAINNET;\n\n  const response = await Moralis.SolApi.account.getSPL({\n    network,\n    address,\n  });\n\n  console.log(response?.result);\n} catch (e) {\n  console.error(e);\n}\n","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import sol_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"network\": \"\", \n    \"address\": \"\", \n}\n\nresult = sol_api.account.get_spl(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"getNFTs":{"apiHost":"https://solana-gateway.moralis.io","summary":"Get NFTs by wallet","description":"Gets NFTs owned by a given network and address.","method":"GET","path":"/account/:network/:address/nft","pathParams":[{"name":"network","description":"The network to query","required":true,"type":"string"},{"name":"address","description":"The address of the contract","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":""},{"status":"400","description":""}],"codeSamples":[{"language":"node","code":"import Moralis from 'moralis';\nimport { SolNetwork, SolAddress } from \"@moralisweb3/sol-utils\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  const address = SolAddress.create(\n    \"HsXZnF7Te7dZ5ijvGcDj3NWtxRBBaAuYQgh1oZLwAba2\"\n  );\n\n  const network = SolNetwork.MAINNET;\n\n  const response = await Moralis.SolApi.account.getNFTs({\n    address,\n    network,\n  });\n\n  console.log(response?.result);\n} catch (e) {\n  console.error(e);\n}\n","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import sol_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"network\": \"\", \n    \"address\": \"\", \n}\n\nresult = sol_api.account.get_nfts(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"getPortfolio":{"apiHost":"https://solana-gateway.moralis.io","summary":"Gets portfolio by wallet","description":"Gets the portfolio for a given network and address.","method":"GET","path":"/account/:network/:address/portfolio","pathParams":[{"name":"network","description":"The network to query","required":true,"type":"string"},{"name":"address","description":"The address of the token contract","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"nativeBalance","type":"object","properties":{"solana":{"type":"string"},"lamports":{"type":"string"}},"required":["solana","lamports"]},{"name":"nfts","type":"object","fields":[{"name":"associatedTokenAddress","type":"string"},{"name":"mint","type":"string"},{"name":"name","type":"string"},{"name":"symbol","type":"string"}]},{"name":"tokens","type":"object","fields":[{"name":"associatedTokenAddress","type":"string"},{"name":"mint","type":"string"},{"name":"name","type":"string"},{"name":"symbol","type":"string"},{"name":"amount","type":"string"},{"name":"amountRaw","type":"string"},{"name":"decimals","type":"number"}]}]}},{"status":"400","description":""}],"codeSamples":[{"language":"node","code":"import Moralis from 'moralis';\nimport { SolNetwork, SolAddress } from \"@moralisweb3/sol-utils\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  const address = SolAddress.create(\n    \"HsXZnF7Te7dZ5ijvGcDj3NWtxRBBaAuYQgh1oZLwAba2\"\n  );\n\n  const network = SolNetwork.MAINNET;\n\n  const response = await Moralis.SolApi.account.getPortfolio({\n    network,\n    address,\n  });\n\n  console.log(response?.result);\n} catch (e) {\n  console.error(e);\n}\n","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import sol_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"network\": \"\", \n    \"address\": \"\", \n}\n\nresult = sol_api.account.get_portfolio(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"getNFTMetadata":{"apiHost":"https://solana-gateway.moralis.io","summary":"Get NFT metadata","description":"Get the global NFT metadata for a given network and contract (mint, standard, name, symbol, metaplex).","method":"GET","path":"/nft/:network/:address/metadata","pathParams":[{"name":"network","description":"The network to query","required":true,"type":"string"},{"name":"address","description":"The address of the contract","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"mint","type":"string"},{"name":"standard","type":"string"},{"name":"name","type":"string"},{"name":"symbol","type":"string"},{"name":"metaplex","type":"object","properties":{"metadataUri":{"type":"string"},"masterEdition":{"type":"boolean"},"isMutable":{"type":"boolean"},"primarySaleHappened":{"type":"boolean"},"sellerFeeBasisPoints":{"type":"number"},"updateAuthority":{"type":"string"}},"required":["metadataUri","masterEdition","isMutable","primarySaleHappened","sellerFeeBasisPoints","updateAuthority"]}]}},{"status":"400","description":""}],"codeSamples":[{"language":"node","code":"import Moralis from 'moralis';\nimport { SolNetwork, SolAddress } from \"@moralisweb3/sol-utils\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  const address = SolAddress.create(\n    \"FVW9KoJxXzP2cCfhLfFC7hQKBZKnaoPkyZJQgvM9moWV\"\n  );\n\n  const network = SolNetwork.MAINNET;\n\n  const response = await Moralis.SolApi.nft.getNFTMetadata({\n    address,\n    network,\n  });\n\n  console.log(response?.result);\n} catch (e) {\n  console.error(e);\n}\n","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import sol_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"network\": \"\", \n    \"address\": \"\", \n}\n\nresult = sol_api.nft.get_nft_metadata(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]},"getTokenPrice":{"apiHost":"https://solana-gateway.moralis.io","summary":"Get token price","description":"Gets the token price (usd and native) for a given contract address and network.","method":"GET","path":"/token/:network/:address/price","pathParams":[{"name":"network","description":"The network to query","required":true,"type":"string"},{"name":"address","description":"The address of the token contract","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"nativePrice","type":"object","properties":{"value":{"type":"string"},"decimals":{"type":"number"},"name":{"type":"string"},"symbol":{"type":"string"}},"required":["value","decimals","name","symbol"]},{"name":"usdPrice","type":"number"},{"name":"exchangeAddress","type":"string"},{"name":"exchangeName","type":"string"}]}},{"status":"400","description":""}],"codeSamples":[{"language":"node","code":"import Moralis from 'moralis';\nimport { SolNetwork, SolAddress } from \"@moralisweb3/sol-utils\";\n\ntry {\n  await Moralis.start({\n    apiKey: 'YOUR_API_KEY',\n  });\n\n  const address = SolAddress.create(\n    \"SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt\"\n  );\n\n  const network = SolNetwork.MAINNET;\n\n  const response = await Moralis.SolApi.token.getTokenPrice({\n    address,\n    network,\n  });\n\n  console.log(response?.result);\n} catch (e) {\n  console.error(e);\n}\n","name":"Moralis NodeJS SDK"},{"language":"python","code":"from moralis import sol_api\n\napi_key = \"YOUR_API_KEY\"\nparams = {\n    \"network\": \"\", \n    \"address\": \"\", \n}\n\nresult = sol_api.token.get_token_price(\n    api_key=api_key,\n    params=params,\n)\n\nprint(result)\n"}]}},"aptos-web3":{"getNFTsByIds":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFTs by ids","method":"GET","path":"/nfts","pathParams":[],"queryParams":[{"name":"token_ids","description":"The identifiers of the tokens to get","required":true,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":""},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTsByCollection":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFTs by Collection","method":"GET","path":"/nfts/collections/:collection_data_id_hash/tokens","pathParams":[{"name":"collection_data_id_hash","description":"The collection data id hash of the collection","required":true,"type":"string"}],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The tokens for the given collection","example":[],"fields":[{"name":"collection_data_id_hash","type":"string","description":"The identifier of the collection","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"collection_name","type":"string","description":"The name of the collection","example":"Topaz Troopers"},{"name":"creator_address","type":"string","description":"The address of the creator of the collection","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"default_properties","type":"object","description":"The default properties of the token","example":"{\"point\": \"0x30\", \"author\": \"0x33454e4a4f59204c616273\"}","fields":[]},{"name":"description","type":"string","description":"The description of the collection","example":"A badge which proves you are an OG #TopazTrooper."},{"name":"description_mutable","type":"boolean","description":"Whether the description can be changed","example":"false"},{"name":"largest_property_version","type":"string","description":"largest_property_version","example":"1"},{"name":"last_transaction_timestamp","type":"string","description":"The timestamp of the last transaction","example":"2022-09-17T22:03:32.000000Z"},{"name":"last_transaction_version","type":"string","description":"The version of the last transaction","example":"210373856"},{"name":"maximum","type":"string","description":"The maximum number of tokens that can be minted","example":"18446744073709551615"},{"name":"maximum_mutable","type":"boolean","description":"Whether the maximum number of tokens can be changed","example":"false"},{"name":"metadata_uri","type":"string","description":"The URI of the image of the token","example":"https://static-cdn.risewallet.io/nft/aptos-monkeys/1572.jpeg"},{"name":"name","type":"string","description":"The name of the token","example":"Souffl3 Testnet NFT"},{"name":"payee_address","type":"string","description":"The address that last payed for the token","example":"0x0b11e89a399fa11c802099024498da9fc6512bd3d2d3068f0e78320bd6243990"},{"name":"properties_mutable","type":"boolean","description":"Whether the properties of the token can be changed","example":"false"},{"name":"royalty_mutable","type":"boolean","description":"Whether the royalty of the token can be changed","example":"false"},{"name":"royalty_points_denominator","type":"string","description":"The denominator for royalty points","example":"100"},{"name":"royalty_points_numerator","type":"string","description":"The numerator for royalty points","example":"20"},{"name":"supply","type":"string","description":"The number of tokens minted","example":"32976"},{"name":"token_data_id_hash","type":"string","description":"The identifier of the token","example":"1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1"},{"name":"uri_mutable","type":"boolean","description":"Whether the URI of the image can be changed","example":"false"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTsByCreators":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFTs by creators","method":"GET","path":"/nfts/creators","pathParams":[],"queryParams":[{"name":"limit","description":"The number of tokens to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"creator_addresses","description":"The addresses of the creators","required":true,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The collections for the given creators","example":[],"fields":[{"name":"collection_data_id_hash","type":"string","description":"The identifier of the collection","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"collection_name","type":"string","description":"The name of the collection","example":"Topaz Troopers"},{"name":"creator_address","type":"string","description":"The address of the creator of the collection","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"default_properties","type":"object","description":"The default properties of the token","example":"{\"point\": \"0x30\", \"author\": \"0x33454e4a4f59204c616273\"}","fields":[]},{"name":"description","type":"string","description":"The description of the collection","example":"A badge which proves you are an OG #TopazTrooper."},{"name":"description_mutable","type":"boolean","description":"Whether the description can be changed","example":"false"},{"name":"largest_property_version","type":"string","description":"largest_property_version","example":"1"},{"name":"last_transaction_timestamp","type":"string","description":"The timestamp of the last transaction","example":"2022-09-17T22:03:32.000000Z"},{"name":"last_transaction_version","type":"string","description":"The version of the last transaction","example":"210373856"},{"name":"maximum","type":"string","description":"The maximum number of tokens that can be minted","example":"18446744073709551615"},{"name":"maximum_mutable","type":"boolean","description":"Whether the maximum number of tokens can be changed","example":"false"},{"name":"metadata_uri","type":"string","description":"The URI of the image of the token","example":"https://static-cdn.risewallet.io/nft/aptos-monkeys/1572.jpeg"},{"name":"name","type":"string","description":"The name of the token","example":"Souffl3 Testnet NFT"},{"name":"payee_address","type":"string","description":"The address that last payed for the token","example":"0x0b11e89a399fa11c802099024498da9fc6512bd3d2d3068f0e78320bd6243990"},{"name":"properties_mutable","type":"boolean","description":"Whether the properties of the token can be changed","example":"false"},{"name":"royalty_mutable","type":"boolean","description":"Whether the royalty of the token can be changed","example":"false"},{"name":"royalty_points_denominator","type":"string","description":"The denominator for royalty points","example":"100"},{"name":"royalty_points_numerator","type":"string","description":"The numerator for royalty points","example":"20"},{"name":"supply","type":"string","description":"The number of tokens minted","example":"32976"},{"name":"token_data_id_hash","type":"string","description":"The identifier of the token","example":"1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1"},{"name":"uri_mutable","type":"boolean","description":"Whether the URI of the image can be changed","example":"false"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTCollections":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFT Collections","method":"GET","path":"/collections","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"fromName","description":"The name of the collection to start from (inclusive and case sensitive)","required":false,"type":"string"},{"name":"toName","description":"The name of the collection to end at (inclusive and case sensitive)","required":false,"type":"string"}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The collections for the given creator","example":[],"fields":[{"name":"collection_data_id_hash","type":"string","description":"The identifier of the collection","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"collection_name","type":"string","description":"The name of the collection","example":"Topaz Troopers"},{"name":"creator_address","type":"string","description":"The address of the creator of the collection","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"description","type":"string","description":"The description of the collection","example":"A badge which proves you are an OG #TopazTrooper."},{"name":"description_mutable","type":"boolean","description":"Whether the description can be changed","example":"false"},{"name":"last_transaction_timestamp","type":"string","description":"The timestamp of the last transaction","example":"2022-09-17T22:03:32.000000Z"},{"name":"last_transaction_version","type":"string","description":"The version of the last transaction","example":"210373856"},{"name":"maximum","type":"string","description":"The maximum number of tokens that can be minted","example":"18446744073709551615"},{"name":"maximum_mutable","type":"boolean","description":"Whether the maximum number of tokens can be changed","example":"false"},{"name":"metadata_uri","type":"string","description":"The URI of the image of the collection","example":"https://static-cdn.risewallet.io/nft/aptos-monkeys/1572.jpeg"},{"name":"supply","type":"string","description":"The number of tokens minted","example":"32976"},{"name":"table_handle","type":"string","description":"The address of the table that stores the tokens","example":"0x293d59ded27fc85fef070b026834d2be7e7ced76c3c32ecbcd4f44b461518c30"},{"name":"uri_mutable","type":"boolean","description":"Whether the URI of the image can be changed","example":"false"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTCollectionsByIds":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFT Collections by ids","method":"GET","path":"/collections/ids","pathParams":[],"queryParams":[{"name":"ids","description":"The identifiers of the collections to get","required":true,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":""},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTCollectionsByCreator":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFT Collections by creator","method":"GET","path":"/collections/creators","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"creator_address","description":"The address of the creator","required":true,"type":"string"}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The collections for the given creator","example":[],"fields":[{"name":"collection_data_id_hash","type":"string","description":"The identifier of the collection","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"collection_name","type":"string","description":"The name of the collection","example":"Topaz Troopers"},{"name":"creator_address","type":"string","description":"The address of the creator of the collection","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"description","type":"string","description":"The description of the collection","example":"A badge which proves you are an OG #TopazTrooper."},{"name":"description_mutable","type":"boolean","description":"Whether the description can be changed","example":"false"},{"name":"last_transaction_timestamp","type":"string","description":"The timestamp of the last transaction","example":"2022-09-17T22:03:32.000000Z"},{"name":"last_transaction_version","type":"string","description":"The version of the last transaction","example":"210373856"},{"name":"maximum","type":"string","description":"The maximum number of tokens that can be minted","example":"18446744073709551615"},{"name":"maximum_mutable","type":"boolean","description":"Whether the maximum number of tokens can be changed","example":"false"},{"name":"metadata_uri","type":"string","description":"The URI of the image of the collection","example":"https://static-cdn.risewallet.io/nft/aptos-monkeys/1572.jpeg"},{"name":"supply","type":"string","description":"The number of tokens minted","example":"32976"},{"name":"table_handle","type":"string","description":"The address of the table that stores the tokens","example":"0x293d59ded27fc85fef070b026834d2be7e7ced76c3c32ecbcd4f44b461518c30"},{"name":"uri_mutable","type":"boolean","description":"Whether the URI of the image can be changed","example":"false"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTOwnersByTokens":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFT Owners by tokens","method":"GET","path":"/nfts/owners","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"token_ids","description":"The identifiers of the tokens to get owners for","required":true,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The owners for the given tokens","example":[],"fields":[{"name":"amount","type":"string","description":"The number of tokens that belonging to the owner","example":"2"},{"name":"collection_data_id_hash","type":"string","description":"The identifier of the collection","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"collection_name","type":"string","description":"The name of the collection","example":"Topaz Troopers"},{"name":"creator_address","type":"string","description":"The address of the creator of the collection","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"last_transaction_timestamp","type":"string","description":"The timestamp of the last transaction","example":"2022-09-17T22:03:32.000000Z"},{"name":"last_transaction_version","type":"string","description":"The version of the last transaction","example":"210373856"},{"name":"name","type":"string","description":"The name of the token","example":"Topaz Troopers 123"},{"name":"owner_address","type":"string","description":"The address of the owner of the token","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"property_version","type":"string","description":"The property version of the token","example":"1"},{"name":"table_type","type":"string","description":"The data structure of the token","example":"0x3::token::TokenStore"},{"name":"token_data_id_hash","type":"string","description":"The identifier of the token","example":"1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1"},{"name":"token_properties","type":"object","description":"The properties of the token","example":"{\"point\": \"0x30\", \"author\": \"0x33454e4a4f59204c616273\"}","fields":[]}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTOwnersByCollection":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFT Owners by Collection","method":"GET","path":"/nfts/collections/:collection_data_id_hash/owners","pathParams":[{"name":"collection_data_id_hash","description":"The id of the token","required":true,"type":"string"}],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"wallet_blacklist","description":"The addresses of the wallets to blacklist","required":false,"type":"array","field":{"type":"string"}},{"name":"wallet_whitelist","description":"The addresses of the wallets to whitelist","required":false,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The owners for the given collection","example":[],"fields":[{"name":"amount","type":"string","description":"The number of tokens that belonging to the owner","example":"2"},{"name":"collection_data_id_hash","type":"string","description":"The identifier of the collection","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"collection_name","type":"string","description":"The name of the collection","example":"Topaz Troopers"},{"name":"creator_address","type":"string","description":"The address of the creator of the collection","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"last_transaction_timestamp","type":"string","description":"The timestamp of the last transaction","example":"2022-09-17T22:03:32.000000Z"},{"name":"last_transaction_version","type":"string","description":"The version of the last transaction","example":"210373856"},{"name":"name","type":"string","description":"The name of the token","example":"Topaz Troopers 123"},{"name":"owner_address","type":"string","description":"The address of the owner of the token","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"property_version","type":"string","description":"The property version of the token","example":"1"},{"name":"table_type","type":"string","description":"The data structure of the token","example":"0x3::token::TokenStore"},{"name":"token_data_id_hash","type":"string","description":"The identifier of the token","example":"1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1"},{"name":"token_properties","type":"object","description":"The properties of the token","example":"{\"point\": \"0x30\", \"author\": \"0x33454e4a4f59204c616273\"}","fields":[]}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTOwnersOfCollection":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFT Owners of Collection","method":"GET","path":"/nfts/collections/:collection_data_id_hash/owners/list","pathParams":[{"name":"collection_data_id_hash","description":"The id of the token","required":true,"type":"string"}],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"array","description":"The owner addresses for the given collection","example":[],"field":{"type":"string"}}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTTransfersByIds":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFT Transfers by Token ids","method":"GET","path":"/nfts/transfers","pathParams":[],"queryParams":[{"name":"limit","description":"The number of tokens to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"wallet_blacklist","description":"The addresses of the wallets to blacklist","required":false,"type":"array","field":{"type":"string"}},{"name":"wallet_whitelist","description":"The addresses of the wallets to whitelist","required":false,"type":"array","field":{"type":"string"}},{"name":"token_ids","description":"The identifiers of the tokens to get","required":true,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The collections for the given creators","example":[],"fields":[{"name":"coin_amount","type":"string","description":"The number of tokens transferred","example":"2"},{"name":"coin_type","type":"string","description":"The type of tokens transferred","example":null},{"name":"collection_data_id_hash","type":"string","description":"The identifier of the collection","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"collection_name","type":"string","description":"The name of the collection","example":"Topaz Troopers"},{"name":"creator_address","type":"string","description":"The address of the creator of the collection","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"event_account_address","type":"string","description":"The account address of the transfer","example":"0xa748de66f1eea7d32399b59027ab0b3786295313e2c3a1608b5d51e759aee6dd"},{"name":"event_creation_number","type":"string","description":"The creation number of the event","example":"2"},{"name":"event_sequence_number","type":"string","description":"The sequence number of the event","example":"2"},{"name":"from_address","type":"string","description":"The address sending the transfer","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"name","type":"string","description":"The name of the token","example":"Topaz Troopers 123"},{"name":"property_version","type":"string","description":"The property version of the token","example":"1"},{"name":"to_address","type":"string","description":"The address recieving the transfer","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"token_amount","type":"string","description":"The number of tokens transferred","example":"2"},{"name":"token_data_id_hash","type":"string","description":"The identifier of the token","example":"1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1"},{"name":"transaction_timestamp","type":"string","description":"The timestamp of the transfer","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version","type":"string","description":"The version of the transaction that the transfer is a part of","example":"210373856"},{"name":"transfer_type","type":"string","description":"The type of transfer","example":"0x3::token::DepositEvent"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTTransfersByCollection":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFT Transfers by Collection","method":"GET","path":"/nfts/transfers/collections/:collection_data_id_hash","pathParams":[{"name":"collection_data_id_hash","description":"The collection data id hash of the token","required":true,"type":"string"}],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"wallet_whitelist","description":"The addresses of the wallets to whitelist","required":false,"type":"array","field":{"type":"string"}},{"name":"wallet_blacklist","description":"The addresses of the wallets to blacklist","required":false,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The collections for the given creators","example":[],"fields":[{"name":"coin_amount","type":"string","description":"The number of tokens transferred","example":"2"},{"name":"coin_type","type":"string","description":"The type of tokens transferred","example":null},{"name":"collection_data_id_hash","type":"string","description":"The identifier of the collection","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"collection_name","type":"string","description":"The name of the collection","example":"Topaz Troopers"},{"name":"creator_address","type":"string","description":"The address of the creator of the collection","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"event_account_address","type":"string","description":"The account address of the transfer","example":"0xa748de66f1eea7d32399b59027ab0b3786295313e2c3a1608b5d51e759aee6dd"},{"name":"event_creation_number","type":"string","description":"The creation number of the event","example":"2"},{"name":"event_sequence_number","type":"string","description":"The sequence number of the event","example":"2"},{"name":"from_address","type":"string","description":"The address sending the transfer","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"name","type":"string","description":"The name of the token","example":"Topaz Troopers 123"},{"name":"property_version","type":"string","description":"The property version of the token","example":"1"},{"name":"to_address","type":"string","description":"The address recieving the transfer","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"token_amount","type":"string","description":"The number of tokens transferred","example":"2"},{"name":"token_data_id_hash","type":"string","description":"The identifier of the token","example":"1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1"},{"name":"transaction_timestamp","type":"string","description":"The timestamp of the transfer","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version","type":"string","description":"The version of the transaction that the transfer is a part of","example":"210373856"},{"name":"transfer_type","type":"string","description":"The type of transfer","example":"0x3::token::DepositEvent"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTTransfersByCreators":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFT Transfers by creators","method":"GET","path":"/nfts/transfers/creators","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"creator_addresses","description":"The addresses of the creators","required":true,"type":"array","field":{"type":"string"}},{"name":"collection_blacklist","description":"The ids of the collections to whitelist","required":false,"type":"array","field":{"type":"string"}},{"name":"collection_whitelist","description":"The ids of the collections to whitelist","required":false,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The collections for the given creators","example":[],"fields":[{"name":"coin_amount","type":"string","description":"The number of tokens transferred","example":"2"},{"name":"coin_type","type":"string","description":"The type of tokens transferred","example":null},{"name":"collection_data_id_hash","type":"string","description":"The identifier of the collection","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"collection_name","type":"string","description":"The name of the collection","example":"Topaz Troopers"},{"name":"creator_address","type":"string","description":"The address of the creator of the collection","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"event_account_address","type":"string","description":"The account address of the transfer","example":"0xa748de66f1eea7d32399b59027ab0b3786295313e2c3a1608b5d51e759aee6dd"},{"name":"event_creation_number","type":"string","description":"The creation number of the event","example":"2"},{"name":"event_sequence_number","type":"string","description":"The sequence number of the event","example":"2"},{"name":"from_address","type":"string","description":"The address sending the transfer","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"name","type":"string","description":"The name of the token","example":"Topaz Troopers 123"},{"name":"property_version","type":"string","description":"The property version of the token","example":"1"},{"name":"to_address","type":"string","description":"The address recieving the transfer","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"token_amount","type":"string","description":"The number of tokens transferred","example":"2"},{"name":"token_data_id_hash","type":"string","description":"The identifier of the token","example":"1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1"},{"name":"transaction_timestamp","type":"string","description":"The timestamp of the transfer","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version","type":"string","description":"The version of the transaction that the transfer is a part of","example":"210373856"},{"name":"transfer_type","type":"string","description":"The type of transfer","example":"0x3::token::DepositEvent"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTTransfersByWallets":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFT Transfers by wallets","method":"GET","path":"/nfts/transfers/wallets","pathParams":[],"queryParams":[{"name":"limit","description":"The number of tokens to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"wallet_addresses","description":"The addresses of the wallets to get transfers for","required":true,"type":"array","field":{"type":"string"}},{"name":"collection_blacklist","description":"The ids of the collections to whitelist","required":false,"type":"array","field":{"type":"string"}},{"name":"collection_whitelist","description":"The ids of the collections to whitelist","required":false,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The collections for the given creators","example":[],"fields":[{"name":"coin_amount","type":"string","description":"The number of tokens transferred","example":"2"},{"name":"coin_type","type":"string","description":"The type of tokens transferred","example":null},{"name":"collection_data_id_hash","type":"string","description":"The identifier of the collection","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"collection_name","type":"string","description":"The name of the collection","example":"Topaz Troopers"},{"name":"creator_address","type":"string","description":"The address of the creator of the collection","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"event_account_address","type":"string","description":"The account address of the transfer","example":"0xa748de66f1eea7d32399b59027ab0b3786295313e2c3a1608b5d51e759aee6dd"},{"name":"event_creation_number","type":"string","description":"The creation number of the event","example":"2"},{"name":"event_sequence_number","type":"string","description":"The sequence number of the event","example":"2"},{"name":"from_address","type":"string","description":"The address sending the transfer","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"name","type":"string","description":"The name of the token","example":"Topaz Troopers 123"},{"name":"property_version","type":"string","description":"The property version of the token","example":"1"},{"name":"to_address","type":"string","description":"The address recieving the transfer","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"token_amount","type":"string","description":"The number of tokens transferred","example":"2"},{"name":"token_data_id_hash","type":"string","description":"The identifier of the token","example":"1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1"},{"name":"transaction_timestamp","type":"string","description":"The timestamp of the transfer","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version","type":"string","description":"The version of the transaction that the transfer is a part of","example":"210373856"},{"name":"transfer_type","type":"string","description":"The type of transfer","example":"0x3::token::DepositEvent"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getCoinInfoByCoinTypeHashes":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get Coin Metadata by Coin Type Hashes","method":"GET","path":"/coins","pathParams":[],"queryParams":[{"name":"coin_type_hashes","description":"The coin type hashes to fetch info about","required":true,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":""},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getLatestCoins":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get latest deployed coins","method":"GET","path":"/coins/latest","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The coins matching the query","example":[],"fields":[{"name":"coin_type","type":"string","description":"The definition of the coin structure (identifier)","example":"T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG"},{"name":"coin_type_hash","type":"string","description":"The hash of the coin_type (identifier) and a known fixed length","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"creator_address","type":"string","description":"The address of the creator of the coin","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"decimals","type":"number","description":"The number of decimals of the coin","example":8},{"name":"name","type":"string","description":"The name of the Coin","example":"GEGG Coin"},{"name":"supply_aggregator_table_handle","type":"string","description":"The data structure of the token","example":"0x3::token::TokenStore"},{"name":"supply_aggregator_table_key","type":"string","description":"The data structure of the token","example":"0x3::token::TokenStore"},{"name":"symbol","type":"string","description":"The symbol of the coin","example":"GEGG"},{"name":"transaction_created_timestamp","type":"string","description":"The timestamp of the transaction of when the coin was created","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version_created","type":"string","description":"The version of the transaction where the coin was created","example":"210373856"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getCoinsByNameRange":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get Coin Metadata by name range","method":"GET","path":"/coins/names","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"from_name","description":"The name of the coin to start from (inclusive and case sensitive)","required":false,"type":"string"},{"name":"to_name","description":"The name of the coin to end at (inclusive and case sensitive)","required":false,"type":"string"}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The coins matching the query","example":[],"fields":[{"name":"coin_type","type":"string","description":"The definition of the coin structure (identifier)","example":"T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG"},{"name":"coin_type_hash","type":"string","description":"The hash of the coin_type (identifier) and a known fixed length","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"creator_address","type":"string","description":"The address of the creator of the coin","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"decimals","type":"number","description":"The number of decimals of the coin","example":8},{"name":"name","type":"string","description":"The name of the Coin","example":"GEGG Coin"},{"name":"supply_aggregator_table_handle","type":"string","description":"The data structure of the token","example":"0x3::token::TokenStore"},{"name":"supply_aggregator_table_key","type":"string","description":"The data structure of the token","example":"0x3::token::TokenStore"},{"name":"symbol","type":"string","description":"The symbol of the coin","example":"GEGG"},{"name":"transaction_created_timestamp","type":"string","description":"The timestamp of the transaction of when the coin was created","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version_created","type":"string","description":"The version of the transaction where the coin was created","example":"210373856"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getCoinsBySymbolRange":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get Coin Metadata by symbol range","method":"GET","path":"/coins/symbols","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"from_symbol","description":"The name of the coin to start from (inclusive and case sensitive)","required":false,"type":"string"},{"name":"to_symbol","description":"The name of the coin to end at (inclusive and case sensitive)","required":false,"type":"string"}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The coins matching the query","example":[],"fields":[{"name":"coin_type","type":"string","description":"The definition of the coin structure (identifier)","example":"T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG"},{"name":"coin_type_hash","type":"string","description":"The hash of the coin_type (identifier) and a known fixed length","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"creator_address","type":"string","description":"The address of the creator of the coin","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"decimals","type":"number","description":"The number of decimals of the coin","example":8},{"name":"name","type":"string","description":"The name of the Coin","example":"GEGG Coin"},{"name":"supply_aggregator_table_handle","type":"string","description":"The data structure of the token","example":"0x3::token::TokenStore"},{"name":"supply_aggregator_table_key","type":"string","description":"The data structure of the token","example":"0x3::token::TokenStore"},{"name":"symbol","type":"string","description":"The symbol of the coin","example":"GEGG"},{"name":"transaction_created_timestamp","type":"string","description":"The timestamp of the transaction of when the coin was created","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version_created","type":"string","description":"The version of the transaction where the coin was created","example":"210373856"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getCoinsByCreators":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get Coin Metadata by creator addresses","method":"GET","path":"/coins/creators","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"creator_addresses","description":"The addresses of the creators","required":true,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The coins created by the given creators","example":[],"fields":[{"name":"coin_type","type":"string","description":"The definition of the coin structure (identifier)","example":"T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG"},{"name":"coin_type_hash","type":"string","description":"The hash of the coin_type (identifier) and a known fixed length","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"creator_address","type":"string","description":"The address of the creator of the coin","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"decimals","type":"number","description":"The number of decimals of the coin","example":8},{"name":"name","type":"string","description":"The name of the Coin","example":"GEGG Coin"},{"name":"supply_aggregator_table_handle","type":"string","description":"The data structure of the token","example":"0x3::token::TokenStore"},{"name":"supply_aggregator_table_key","type":"string","description":"The data structure of the token","example":"0x3::token::TokenStore"},{"name":"symbol","type":"string","description":"The symbol of the coin","example":"GEGG"},{"name":"transaction_created_timestamp","type":"string","description":"The timestamp of the transaction of when the coin was created","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version_created","type":"string","description":"The version of the transaction where the coin was created","example":"210373856"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getCoinTransfersByOwnerAddresses":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get Coin Transfers by wallet addresses","method":"GET","path":"/coins/transfers/wallets","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"owner_addresses","description":"The addresses of the owners to get tokens for","required":true,"type":"array","field":{"type":"string"}},{"name":"from_date","description":"The date from which to fetch coin transfers","required":false,"type":"string"},{"name":"to_date","description":"The date to which to fetch coin transfers","required":false,"type":"string"},{"name":"coin_type_blacklist","description":"The coin types of the coins to whitelist","required":false,"type":"array","field":{"type":"string"}},{"name":"coin_type_whitelist","description":"The coin types of the coins to whitelist","required":false,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The coins transfers for the provided owner addresses","example":[],"fields":[{"name":"activity_type","type":"string","description":"The definition of the coin activity","example":"0x1::coin::WithdrawEvent"},{"name":"amount","type":"string","description":"The amount being transfered","example":"324933484"},{"name":"block_height","type":"string","description":"The blockheight that the transfer was included in","example":"49661526"},{"name":"coin_type","type":"string","description":"The definition of the coin structure (identifier)","example":"T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG"},{"name":"entry_function_id_str","type":"string","description":"The function that was called to transfer the coin","example":"0x563e8382514ccdcc0c0a83469c9262d22d0b052316c1bd67286ba42bb11d0815::AtodexSwapPoolV1::swap_exact_coi"},{"name":"event_account_address","type":"string","description":"The address of the event account","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"event_creation_number","type":"string","description":"The event creation number","example":"9"},{"name":"event_sequence_number","type":"string","description":"The sequence number of the event","example":"59"},{"name":"is_gas_fee","type":"boolean","description":"If the transfer was a gas fee or not","example":false},{"name":"is_transaction_success","type":"boolean","description":"If the transfer was successful or not","example":true},{"name":"owner_address","type":"string","description":"The address of the owner of the coin","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"transaction_timestamp","type":"string","description":"The timestamp of the transaction of when the coin was transfered","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version","type":"string","description":"The version of the transaction where the coin was transfered","example":"210373856"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getCoinTransfersByBlockHeights":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get Coin Transfers by block heights","method":"GET","path":"/coins/transfers/blocks","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"block_heights","description":"The coin types to fetch info about","required":true,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The coins transfers for the provided block heights","example":[],"fields":[{"name":"activity_type","type":"string","description":"The definition of the coin activity","example":"0x1::coin::WithdrawEvent"},{"name":"amount","type":"string","description":"The amount being transfered","example":"324933484"},{"name":"block_height","type":"string","description":"The blockheight that the transfer was included in","example":"49661526"},{"name":"coin_type","type":"string","description":"The definition of the coin structure (identifier)","example":"T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG"},{"name":"entry_function_id_str","type":"string","description":"The function that was called to transfer the coin","example":"0x563e8382514ccdcc0c0a83469c9262d22d0b052316c1bd67286ba42bb11d0815::AtodexSwapPoolV1::swap_exact_coi"},{"name":"event_account_address","type":"string","description":"The address of the event account","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"event_creation_number","type":"string","description":"The event creation number","example":"9"},{"name":"event_sequence_number","type":"string","description":"The sequence number of the event","example":"59"},{"name":"is_gas_fee","type":"boolean","description":"If the transfer was a gas fee or not","example":false},{"name":"is_transaction_success","type":"boolean","description":"If the transfer was successful or not","example":true},{"name":"owner_address","type":"string","description":"The address of the owner of the coin","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"transaction_timestamp","type":"string","description":"The timestamp of the transaction of when the coin was transfered","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version","type":"string","description":"The version of the transaction where the coin was transfered","example":"210373856"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getCoinTransfersByCoinType":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get Coin Transfers by Coin Type","method":"GET","path":"/coins/transfers/:coin_type","pathParams":[{"name":"coin_type","description":"The coin type to fetch info about","required":true,"type":"string"}],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"from_date","description":"The date from which to fetch coin transfers","required":false,"type":"string"},{"name":"to_date","description":"The date to which to fetch coin transfers","required":false,"type":"string"}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The coins transfers for the provided coin type","example":[],"fields":[{"name":"activity_type","type":"string","description":"The definition of the coin activity","example":"0x1::coin::WithdrawEvent"},{"name":"amount","type":"string","description":"The amount being transfered","example":"324933484"},{"name":"block_height","type":"string","description":"The blockheight that the transfer was included in","example":"49661526"},{"name":"coin_type","type":"string","description":"The definition of the coin structure (identifier)","example":"T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG"},{"name":"entry_function_id_str","type":"string","description":"The function that was called to transfer the coin","example":"0x563e8382514ccdcc0c0a83469c9262d22d0b052316c1bd67286ba42bb11d0815::AtodexSwapPoolV1::swap_exact_coi"},{"name":"event_account_address","type":"string","description":"The address of the event account","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"event_creation_number","type":"string","description":"The event creation number","example":"9"},{"name":"event_sequence_number","type":"string","description":"The sequence number of the event","example":"59"},{"name":"is_gas_fee","type":"boolean","description":"If the transfer was a gas fee or not","example":false},{"name":"is_transaction_success","type":"boolean","description":"If the transfer was successful or not","example":true},{"name":"owner_address","type":"string","description":"The address of the owner of the coin","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"transaction_timestamp","type":"string","description":"The timestamp of the transaction of when the coin was transfered","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version","type":"string","description":"The version of the transaction where the coin was transfered","example":"210373856"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getTopHoldersByCoin":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get top Holders of Coin","method":"GET","path":"/coins/owners/:coin_type_hash/top-holders","pathParams":[{"name":"coin_type_hash","description":"The coin type hash to fetch info about","required":true,"type":"string"}],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"min_amount","description":"The minimum amount of coins required for a wallet to be included in the results","required":false,"type":"number"},{"name":"min_version","description":"The minimum version on when the balance was last updated","required":false,"type":"number"},{"name":"wallet_blacklist","description":"The addresses of the wallets to blacklist","required":false,"type":"array","field":{"type":"string"}},{"name":"wallet_whitelist","description":"The addresses of the wallets to whitelist","required":false,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The top holders of the given coin","example":[],"fields":[{"name":"amount","type":"string","description":"The amount being transfered","example":"324933484"},{"name":"coin_type","type":"string","description":"The definition of the coin structure (identifier)","example":"T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG"},{"name":"coin_type_hash","type":"string","description":"The hash of the coin_type (identifier) and a known fixed length","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"last_transaction_timestamp","type":"string","description":"The timestamp of the last update to the balance","example":"2022-09-17T22:03:32.000000Z"},{"name":"last_transaction_version","type":"string","description":"The version of the transaction where the balance was last s","example":"210373856"},{"name":"owner_address","type":"string","description":"The address of the owner of the coin","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getCoinBalancesByWallets":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get Coin Balances by wallet addresses","method":"GET","path":"/wallets/coins","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"owner_addresses","description":"The addresses of the owners to get coin balances for","required":true,"type":"array","field":{"type":"string"}},{"name":"coin_type_hash_blacklist","description":"The coin type hashes of the coins to whitelist","required":false,"type":"array","field":{"type":"string"}},{"name":"coin_type_hash_whitelist","description":"The coin type hashes of the coins to whitelist","required":false,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The coins balances for the provided wallets","example":[],"fields":[{"name":"amount","type":"string","description":"The amount being transfered","example":"324933484"},{"name":"coin_type","type":"string","description":"The definition of the coin structure (identifier)","example":"T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG"},{"name":"coin_type_hash","type":"string","description":"The hash of the coin_type (identifier) and a known fixed length","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"last_transaction_timestamp","type":"string","description":"The timestamp of the last update to the balance","example":"2022-09-17T22:03:32.000000Z"},{"name":"last_transaction_version","type":"string","description":"The version of the transaction where the balance was last s","example":"210373856"},{"name":"owner_address","type":"string","description":"The address of the owner of the coin","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getHistoricalCoinBalancesByWallets":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get Historical Coin Balances by wallet addresses","method":"GET","path":"/wallets/coins/history","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"owner_addresses","description":"The addresses of the owner addresses to get historical balances for","required":true,"type":"array","field":{"type":"string"}},{"name":"coin_type_hash_blacklist","description":"The coin type hash of the coins to whitelist","required":false,"type":"array","field":{"type":"string"}},{"name":"coin_type_hash_whitelist","description":"The coin type hash of the coins to whitelist","required":false,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The coins balances for the provided wallets","example":[],"fields":[{"name":"amount","type":"string","description":"The amount being transfered","example":"324933484"},{"name":"coin_type","type":"string","description":"The definition of the coin structure (identifier)","example":"T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG"},{"name":"coin_type_hash","type":"string","description":"The hash of the coin_type (identifier) and a known fixed length","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"transaction_timestamp","type":"string","description":"The timestamp of the updated balance","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version","type":"string","description":"The version of the transaction where the balacne was updated","example":"210373856"},{"name":"owner_address","type":"string","description":"The address of the owner of the coin","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getCoinTransfersByWalletAddresses":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get Coin Transfers by wallet addresses","method":"GET","path":"/wallets/coins/transfers","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"owner_addresses","description":"The addresses of the owners to get tokens for","required":true,"type":"array","field":{"type":"string"}},{"name":"from_date","description":"The date from which to fetch coin transfers","required":false,"type":"string"},{"name":"to_date","description":"The date to which to fetch coin transfers","required":false,"type":"string"},{"name":"coin_type_blacklist","description":"The coin types of the coins to whitelist","required":false,"type":"array","field":{"type":"string"}},{"name":"coin_type_whitelist","description":"The coin types of the coins to whitelist","required":false,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The coins transfers for the provided owner addresses","example":[],"fields":[{"name":"activity_type","type":"string","description":"The definition of the coin activity","example":"0x1::coin::WithdrawEvent"},{"name":"amount","type":"string","description":"The amount being transfered","example":"324933484"},{"name":"block_height","type":"string","description":"The blockheight that the transfer was included in","example":"49661526"},{"name":"coin_type","type":"string","description":"The definition of the coin structure (identifier)","example":"T0xa911c7236486be921f6cc9227b09afe4a4ad14d291ba1bb8a9b7c4d628759de::gegg::GEGG"},{"name":"entry_function_id_str","type":"string","description":"The function that was called to transfer the coin","example":"0x563e8382514ccdcc0c0a83469c9262d22d0b052316c1bd67286ba42bb11d0815::AtodexSwapPoolV1::swap_exact_coi"},{"name":"event_account_address","type":"string","description":"The address of the event account","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"event_creation_number","type":"string","description":"The event creation number","example":"9"},{"name":"event_sequence_number","type":"string","description":"The sequence number of the event","example":"59"},{"name":"is_gas_fee","type":"boolean","description":"If the transfer was a gas fee or not","example":false},{"name":"is_transaction_success","type":"boolean","description":"If the transfer was successful or not","example":true},{"name":"owner_address","type":"string","description":"The address of the owner of the coin","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"transaction_timestamp","type":"string","description":"The timestamp of the transaction of when the coin was transfered","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version","type":"string","description":"The version of the transaction where the coin was transfered","example":"210373856"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getNFTByOwners":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFTs by wallet addresses","method":"GET","path":"/wallets/nfts","pathParams":[],"queryParams":[{"name":"limit","description":"The number of results to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"owner_addresses","description":"The addresses of the owners to get tokens for","required":true,"type":"array","field":{"type":"string"}},{"name":"collection_blacklist","description":"The collection data id hashes of the collections to whitelist","required":false,"type":"array","field":{"type":"string"}},{"name":"collection_whitelist","description":"The collection data id hashes of the collections to whitelist","required":false,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The tokens for the given owners","example":[],"fields":[{"name":"amount","type":"string","description":"The number of tokens that belonging to the owner","example":"2"},{"name":"collection_data_id_hash","type":"string","description":"The identifier of the collection","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"collection_name","type":"string","description":"The name of the collection","example":"Topaz Troopers"},{"name":"creator_address","type":"string","description":"The address of the creator of the collection","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"last_transaction_timestamp","type":"string","description":"The timestamp of the last transaction","example":"2022-09-17T22:03:32.000000Z"},{"name":"last_transaction_version","type":"string","description":"The version of the last transaction","example":"210373856"},{"name":"name","type":"string","description":"The name of the token","example":"Topaz Troopers 123"},{"name":"owner_address","type":"string","description":"The address of the owner of the token","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"property_version","type":"string","description":"The property version of the token","example":"1"},{"name":"table_type","type":"string","description":"The data structure of the token","example":"0x3::token::TokenStore"},{"name":"token_data_id_hash","type":"string","description":"The identifier of the token","example":"1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1"},{"name":"token_properties","type":"object","description":"The properties of the token","example":"{\"point\": \"0x30\", \"author\": \"0x33454e4a4f59204c616273\"}","fields":[]}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getWalletsNFTTransfers":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get NFT Transfers by wallets","method":"GET","path":"/wallets/nfts/transfers","pathParams":[],"queryParams":[{"name":"limit","description":"The number of tokens to return","required":true,"type":"number"},{"name":"offset","description":"The number of results to skip","required":false,"type":"number"},{"name":"cursor","description":"The cursor to use for getting the next page","required":false,"type":"string"},{"name":"wallet_addresses","description":"The addresses of the wallets to get transfers for","required":true,"type":"array","field":{"type":"string"}},{"name":"collection_blacklist","description":"The ids of the collections to whitelist","required":false,"type":"array","field":{"type":"string"}},{"name":"collection_whitelist","description":"The ids of the collections to whitelist","required":false,"type":"array","field":{"type":"string"}}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"cursor","type":"string","description":"The cursor to use for the next page of results. (Cursor is null on last page)","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZGRyZXNzIjoiMHhkODUwOTQyZWY4ODExZjJhODY2NjkyYTYyMzAxMWJkZTUyYTQ2MmMxIiwiY2hhaW4iOiJldGgiLCJkaXNhYmxlVG90YWwiOiJ0cnVlIiwiYXBpS2V5SWQiOjM2NTg5LCJsaW1pdCI6MTAwLCJ0b3BpYzMiOiI9Om51bGwiLCJ0b19ibG9jayI6IjE0NjgxNTM3IiwicGFnZSI6MSwidG90YWwiOjAsIm9mZnNldCI6MSwidWMiOnRydWUsImlhdCI6MTY3MTk3ODQwNH0.XM9IN3wRJgWzSvQCy-K4Asgs_j8p9xTM1pY7UnHEhs4"},{"name":"hasNextPage","type":"boolean","description":"Indicates if there is a next page of results","example":true},{"name":"result","type":"object","description":"The collections for the given creators","example":[],"fields":[{"name":"coin_amount","type":"string","description":"The number of tokens transferred","example":"2"},{"name":"coin_type","type":"string","description":"The type of tokens transferred","example":null},{"name":"collection_data_id_hash","type":"string","description":"The identifier of the collection","example":"6993fb8b5688d392a2d94127b9926519d6327e69f2bcf3dc0c5df2c060aec97d"},{"name":"collection_name","type":"string","description":"The name of the collection","example":"Topaz Troopers"},{"name":"creator_address","type":"string","description":"The address of the creator of the collection","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"event_account_address","type":"string","description":"The account address of the transfer","example":"0xa748de66f1eea7d32399b59027ab0b3786295313e2c3a1608b5d51e759aee6dd"},{"name":"event_creation_number","type":"string","description":"The creation number of the event","example":"2"},{"name":"event_sequence_number","type":"string","description":"The sequence number of the event","example":"2"},{"name":"from_address","type":"string","description":"The address sending the transfer","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"name","type":"string","description":"The name of the token","example":"Topaz Troopers 123"},{"name":"property_version","type":"string","description":"The property version of the token","example":"1"},{"name":"to_address","type":"string","description":"The address recieving the transfer","example":"0x9125e4054d884fdc7296b66e12c0d63a7baa0d88c77e8e784987c0a967c670ac"},{"name":"token_amount","type":"string","description":"The number of tokens transferred","example":"2"},{"name":"token_data_id_hash","type":"string","description":"The identifier of the token","example":"1824178d98256f40046db3db8cf462f1c0a8e0d37304218044f11e69761c88e1"},{"name":"transaction_timestamp","type":"string","description":"The timestamp of the transfer","example":"2022-09-17T22:03:32.000000Z"},{"name":"transaction_version","type":"string","description":"The version of the transaction that the transfer is a part of","example":"210373856"},{"name":"transfer_type","type":"string","description":"The type of transfer","example":"0x3::token::DepositEvent"}]}]}},{"status":"400","description":"","body":{"type":"object","fields":[{"name":"statusCode","type":"string","description":"The status code","example":"400"},{"name":"message","type":"array","description":"List of things to correct","example":["creator_address must be 66 characters"],"field":{"type":"string"}},{"name":"error","type":"string","description":"Type of error","example":"Bad Request"}]}}]},"getAccount":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get account","method":"GET","path":"/accounts/:address","pathParams":[{"name":"address","description":"Address of account with or without a 0x prefix","required":true,"type":"string"}],"queryParams":[{"name":"ledger_version","description":"Ledger version to get state of account.\nIf not provided, it will be the latest version","required":false,"type":"string"}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"sequence_number","type":"string","description":"A string containing a 64-bit unsigned integer.\nWe represent u64 values as a string to ensure compatibility with languages such as JavaScript that do not parse u64s in JSON natively.","example":"32425224034"},{"name":"authentication_key","type":"string","description":"All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte.\nUnlike the Address type, HexEncodedBytes will not trim any zeros.","example":"0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1"}]}}]},"getAccountResources":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get account resources","method":"GET","path":"/accounts/:address/resources","pathParams":[{"name":"address","description":"Address of account with or without a 0x prefix","required":true,"type":"string"}],"queryParams":[{"name":"ledger_version","description":"Ledger version to get state of account.\nIf not provided, it will be the latest version","required":false,"type":"string"},{"name":"limit","description":"Max number of account resources to retrieve.\nIf not provided, defaults to default page size.","required":false,"type":"number"},{"name":"start","description":"Cursor specifying where to start for pagination\nThis cursor cannot be derived manually client-side. Instead, you must call this endpoint once without this query parameter specified, and then use the cursor returned in the X-Aptos-Cursor header in the response.","required":false,"type":"string"}],"responses":[{"status":"200","description":""}]},"getAccountModules":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get account modules","method":"GET","path":"/accounts/:address/modules","pathParams":[{"name":"address","description":"Address of account with or without a 0x prefix","required":true,"type":"string"}],"queryParams":[{"name":"ledger_version","description":"Ledger version to get state of account.\nIf not provided, it will be the latest version","required":false,"type":"string"},{"name":"limit","description":"Max number of account resources to retrieve.\nIf not provided, defaults to default page size.","required":false,"type":"number"},{"name":"start","description":"Cursor specifying where to start for pagination\nThis cursor cannot be derived manually client-side. Instead, you must call this endpoint once without this query parameter specified, and then use the cursor returned in the X-Aptos-Cursor header in the response.","required":false,"type":"string"}],"responses":[{"status":"200","description":""}]},"getAccountResource":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get account resource","method":"GET","path":"/accounts/:address/resource/:resource_type","pathParams":[{"name":"address","description":"Address of account with or without a 0x prefix","required":true,"type":"string"},{"name":"resource_type","description":"Name of struct to retrieve e.g. 0x1::account::Account","required":true,"type":"string"}],"queryParams":[{"name":"ledger_version","description":"Ledger version to get state of account.\nIf not provided, it will be the latest version","required":false,"type":"string"}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"type","type":"string","description":"String representation of a MoveStructTag (on-chain Move struct type). This exists so you can specify MoveStructTags as path / query parameters","example":"0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>"},{"name":"data","type":"object","description":"This is a JSON representation of some data within an account resource. More specifically, it is a map of strings to arbitrary JSON values / objects, where the keys are top level fields within the given resource.","example":{"authentication_key":"0x0000000000000000000000000000000000000000000000000000000000000001","coin_register_events":{"counter":"0","guid":{"id":{"addr":"0x1","creation_num":"0"}}},"self_address":"0x1","sequence_number":"0"},"fields":[]}]}}]},"getAccountModule":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get account module","method":"GET","path":"/accounts/:address/resource/:module_name","pathParams":[{"name":"address","description":"Address of account with or without a 0x prefix","required":true,"type":"string"},{"name":"module_name","description":"Name of module to retrieve","required":true,"type":"string"}],"queryParams":[{"name":"ledger_version","description":"Ledger version to get state of account.\nIf not provided, it will be the latest version","required":false,"type":"string"}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"bytecode","type":"string","description":"0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1","example":"All bytes (Vec) data is represented as hex-encoded string prefixed with 0x and fulfilled with two hex digits per byte."},{"name":"abi","description":"A Move module","example":{"address":"0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1 ","name":"string","friends":["0x1::aptos_coin"],"exposed_functions":[{"name":"string","visibility":"private","is_entry":true,"generic_type_params":[{"constraints":["string"]}],"params":["string"],"return":["string"]}],"structs":[{"name":"string","is_native":true,"abilities":["string"],"generic_type_params":[{"constraints":["string"]}],"fields":[{"name":"string","type":"string"}]}]}}]}}]},"getEventsByCreationNumber":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get events by creation number","method":"GET","path":"/accounts/:address/events/:creation_number","pathParams":[{"name":"address","description":"Address of account with or without a 0x prefix","required":true,"type":"string"},{"name":"creation_number","description":"Creation number corresponding to the event stream originating from the given account.","required":true,"type":"string"}],"queryParams":[{"name":"limit","description":"Max number of account resources to retrieve.\nIf not provided, defaults to default page size.","required":false,"type":"number"},{"name":"start","description":"Starting sequence number of events.\nIf unspecified, by default will retrieve the most recent events","required":false,"type":"string"}],"responses":[{"status":"200","description":""}]},"getEventsByEventHandle":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get events by event handle","method":"GET","path":"/accounts/:address/events/:event_handle/:field_name","pathParams":[{"name":"address","description":"Hex-encoded 32 byte Aptos account, with or without a 0x prefix, for which events are queried. This refers to the account that events were emitted to, not the account hosting the move module that emits that event type.","required":true,"type":"string"},{"name":"event_handle","description":"Name of struct to lookup event handle.","required":true,"type":"string"},{"name":"field_name","description":"Name of field to lookup event handle.","required":true,"type":"string"}],"queryParams":[{"name":"limit","description":"Max number of account resources to retrieve.\nIf not provided, defaults to default page size.","required":false,"type":"number"},{"name":"start","description":"Starting sequence number of events.\nIf unspecified, by default will retrieve the most recent events","required":false,"type":"string"}],"responses":[{"status":"200","description":""}]},"getTransactions":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get transactions","method":"GET","path":"/transactions","pathParams":[],"queryParams":[{"name":"limit","description":"Max number of transactions to retrieve.\nIf not provided, defaults to default page size","required":false,"type":"number"},{"name":"start","description":"Account sequence number to start list of transactions.\nIf not provided, defaults to showing the latest transactions","required":false,"type":"string"}],"responses":[{"status":"200","description":""}]},"submitTransaction":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Submit transaction","method":"POST","path":"/transactions","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"type":"object","fields":[{"name":"sender","type":"string","description":"A hex encoded 32 byte Aptos account address."},{"name":"sequence_number","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"max_gas_amount","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"gas_unit_price","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"expiration_timestamp_secs","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"payload","description":"An enum of the possible transaction payloads"},{"name":"signature","description":""}]},"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"hash","type":"string","description":"","example":"0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1"},{"name":"sender","type":"string","description":"A hex encoded 32 byte Aptos account address.","example":"0x88fbd33f54e1126269769780feb24480428179f552e2313fbe571b72e62a1ca1"},{"name":"sequence_number","type":"string","description":"A string containing a 64-bit unsigned integer.","example":"32425224034"},{"name":"max_gas_amount","type":"string","description":"A string containing a 64-bit unsigned integer.","example":"32425224034"},{"name":"gas_unit_price","type":"string","description":"A string containing a 64-bit unsigned integer.","example":"32425224034"},{"name":"expiration_timestamp_secs","type":"string","description":"A string containing a 64-bit unsigned integer.","example":"32425224034"},{"name":"payload"},{"name":"signature"}]}},{"status":"201","description":""}]},"getTransactionByHash":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get transaction by hash","method":"GET","path":"/transactions/by_hash/:txn_hash","pathParams":[{"name":"txn_hash","description":"Hash of transaction to retrieve","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":""}]},"getTransactionByVersion":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get transaction by version","method":"GET","path":"/transactions/by_version/:txn_version","pathParams":[{"name":"txn_version","description":"Version of transaction to retrieve","required":true,"type":"string"}],"queryParams":[],"responses":[{"status":"200","description":""}]},"getAccountTransactions":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get account transactions","method":"GET","path":"/accounts/:address/transactions","pathParams":[{"name":"address","description":"Address of account with or without a 0x prefix","required":true,"type":"string"}],"queryParams":[{"name":"limit","description":"Max number of transactions to retrieve.\nIf not provided, defaults to default page size","required":false,"type":"number"},{"name":"start","description":"Account sequence number to start list of transactions.\nIf not provided, defaults to showing the latest transactions","required":false,"type":"string"}],"responses":[{"status":"200","description":""}]},"submitBatchTransactions":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Submit batch transactions","method":"POST","path":"/transactions/batch","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"type":"array","field":{"type":"object","fields":[{"name":"sender","type":"string","description":"A hex encoded 32 byte Aptos account address."},{"name":"sequence_number","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"max_gas_amount","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"gas_unit_price","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"expiration_timestamp_secs","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"payload","description":"An enum of the possible transaction payloads"},{"name":"signature","description":""}]}},"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"transaction_failures","type":"array","description":"Summary of the failed transactions","example":[],"field":{"type":"string"}}]}},{"status":"201","description":""}]},"simulateTransaction":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Simulate transaction","method":"POST","path":"/transactions/simulate","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"type":"object","fields":[{"name":"sender","type":"string","description":"A hex encoded 32 byte Aptos account address."},{"name":"sequence_number","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"max_gas_amount","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"gas_unit_price","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"expiration_timestamp_secs","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"payload","description":"An enum of the possible transaction payloads"},{"name":"signature","description":""}]},"responses":[{"status":"200","description":""},{"status":"201","description":""}]},"encodeSubmission":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Encode submission","method":"POST","path":"/transactions/encode_submission","pathParams":[],"queryParams":[],"bodyParam":{"required":true,"type":"object","fields":[{"name":"sender","type":"string","description":"A hex encoded 32 byte Aptos account address."},{"name":"sequence_number","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"max_gas_amount","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"gas_unit_price","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"expiration_timestamp_secs","type":"string","description":"A string containing a 64-bit unsigned integer."},{"name":"payload","description":"An enum of the possible transaction payloads"},{"name":"secondary_signers","type":"array","description":"Secondary signer accounts of the request for Multi-agent","field":{"type":"string"}}]},"responses":[{"status":"200","description":""},{"status":"201","description":""}]},"estimateGasPrice":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Estimate gas price","method":"GET","path":"/transactions/estimate_gas_price","pathParams":[],"queryParams":[],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"deprioritized_gas_estimate","type":"number","description":"The deprioritized estimate for the gas unit price","example":0},{"name":"gas_estimate","type":"number","description":"The current estimate for the gas unit price","example":0},{"name":"prioritized_gas_estimate","type":"number","description":"The prioritized estimate for the gas unit price","example":0}]}}]},"getBlockByHeight":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get block by height","method":"GET","path":"/blocks/:block_height","pathParams":[{"name":"block_height","description":"Block height to lookup. Starts at 0","required":true,"type":"number"}],"queryParams":[{"name":"with_transactions","description":"If set to true, include all transactions in the block","required":false,"type":"boolean"}],"responses":[{"status":"200","description":"Returns block by height","body":{"type":"object","fields":[{"name":"block_height","type":"string","description":"A string containing a 64-bit unsigned integer.","example":"32425224034"},{"name":"block_hash","type":"string","description":"","example":"32425224034"},{"name":"block_timestamp","type":"string","description":"A string containing a 64-bit unsigned integer.","example":"32425224034"},{"name":"first_version","type":"string","description":"A string containing a 64-bit unsigned integer.","example":"32425224034"},{"name":"last_version","type":"string","description":"A string containing a 64-bit unsigned integer.","example":"32425224034"},{"name":"transactions","type":"array","description":"List of transactions","field":{"anyOf":[{"$ref":"#/components/schemas/PendingTransaction"},{"$ref":"#/components/schemas/UserTransaction"},{"$ref":"#/components/schemas/GenesisTransaction"},{"$ref":"#/components/schemas/BlockMetadataTransaction"},{"$ref":"#/components/schemas/StateCheckpointTransaction"}]}}]}}]},"getBlockByVersion":{"apiHost":"https://mainnet-aptos-api.moralis.io","summary":"Get block by version","method":"GET","path":"/blocks/by_version/:version","pathParams":[{"name":"version","description":"Ledger version to lookup block information for.","required":true,"type":"number"}],"queryParams":[{"name":"with_transactions","description":"If set to true, include all transactions in the block","required":false,"type":"boolean"}],"responses":[{"status":"200","description":"Returns block by version","body":{"type":"object","fields":[{"name":"block_height","type":"string","description":"A string containing a 64-bit unsigned integer.","example":"32425224034"},{"name":"block_hash","type":"string","description":"","example":"32425224034"},{"name":"block_timestamp","type":"string","description":"A string containing a 64-bit unsigned integer.","example":"32425224034"},{"name":"first_version","type":"string","description":"A string containing a 64-bit unsigned integer.","example":"32425224034"},{"name":"last_version","type":"string","description":"A string containing a 64-bit unsigned integer.","example":"32425224034"},{"name":"transactions","type":"array","description":"List of transactions","field":{"anyOf":[{"$ref":"#/components/schemas/PendingTransaction"},{"$ref":"#/components/schemas/UserTransaction"},{"$ref":"#/components/schemas/GenesisTransaction"},{"$ref":"#/components/schemas/BlockMetadataTransaction"},{"$ref":"#/components/schemas/StateCheckpointTransaction"}]}}]}}]}},"market-insights":{"api-v1-news":{"summary":"Returns all news between 2 dates, sorted by date, descending","method":"GET","path":"/api/v1/news","pathParams":[],"queryParams":[{"name":"from_date","required":false,"type":"string"},{"name":"to_date","required":false,"type":"string"},{"name":"cursor","required":false,"type":"string"},{"name":"limit","required":false,"type":"number"}],"responses":[{"status":"200","description":"","body":{"type":"object","fields":[{"name":"page_size","type":"string","description":"The size of the page being returned","example":"100"},{"name":"cursor","type":"string","description":"Cursor pointing to the next page of results","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsaW1pdCI6IjIwIiwicGFnZSI6MiwiaW5kZXgiOjM4LCJ0b3RhbCI6ODIsImlhdCI6MTcwMDEzMzY2MiwiZXhwIjoxNzAwMTM3MjYyfQ.85l7ZTSj6xi3J5UZrhVd-gscOhV1T_hoodoue1ihUsk"},{"name":"page","type":"string","description":"Current page of results","example":"1"},{"name":"result","type":"object","description":"Contains the result of the news query","fields":[{"name":"id","type":"number","description":"Unique id of the document in the database","example":1},{"name":"token_address","type":"string","description":"Address of the token","example":"0x046eee2cc3188071c02bfc1745a6b17c656e3f3d"},{"name":"token_symbol","type":"string","description":"Abbreviation of the token name","example":"RLB"},{"name":"token_name","type":"string","description":"Name of the token","example":"Rollbit Coin"},{"name":"chain","type":"string","description":"Name of the chain the token is on","example":"ETH"},{"name":"change_in_percent","type":"number","description":"How much the token moved in percent","example":11},{"name":"headline","type":"string","description":"A description of the news event","example":"On-chain volume shows heavy wallets accumulating RLB, leading to an 11% increase today."},{"name":"time_of_price_movement","type":"string","description":"When the event happened","example":"2023-10-13T12:00:00.000Z"},{"name":"movement","type":"string","description":"If the event was positive or negative","example":"Positive"},{"name":"updated_at","type":"string","description":"When the news was last updated in the database","example":"2021-10-11T00:00:00.000Z"},{"name":"created_at","type":"string","description":"When the news was added to the database","example":"2021-10-11T00:00:00.000Z"}]}]}}]}}}